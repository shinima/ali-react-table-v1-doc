(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1004:function(module,exports){},1088:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(575)},12:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return amount})),__webpack_require__.d(__webpack_exports__,"d",(function(){return time})),__webpack_require__.d(__webpack_exports__,"c",(function(){return ratio})),__webpack_require__.d(__webpack_exports__,"b",(function(){return lfl}));__webpack_require__(167);var numeral__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(111),numeral__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(numeral__WEBPACK_IMPORTED_MODULE_1__),moment__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(8),moment__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__),react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__),plain=function plain(v){return"-"===v||null==v?"-":String(v)},amount0=function amount0(v){return"-"===v||null==v?"-":numeral__WEBPACK_IMPORTED_MODULE_1___default()(v).format("0,0")},amount=amount0;function time(d){return moment__WEBPACK_IMPORTED_MODULE_2___default()(d,"YYYY-MM-DD HH:mm:ss.sss").format("YYYY年MM月DD日 HH:mm:ss")}var amount1=function amount1(v){return"-"===v||null==v?"-":numeral__WEBPACK_IMPORTED_MODULE_1___default()(v).format("0,0.0")},amount2=function amount2(v){return"-"===v||null==v?"-":numeral__WEBPACK_IMPORTED_MODULE_1___default()(v).format("0,0.00")},ratio=function ratio(v){return"-"===v||null==v?"-":numeral__WEBPACK_IMPORTED_MODULE_1___default()(v).format("0.00%")},BeautifulUpIcon=Object(react__WEBPACK_IMPORTED_MODULE_3__.memo)((function(_ref){var _ref$size=_ref.size,size=void 0===_ref$size?12:_ref$size,style=_ref.style;return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement("svg",{viewBox:"0 0 1024 1024",width:size,height:size,fill:"currentColor",style:style},react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement("path",{d:"M682.667 512v426.667H341.333V512h-256L512 0l426.667 512h-256z"}))})),BeautifulDownIcon=Object(react__WEBPACK_IMPORTED_MODULE_3__.memo)((function(_ref2){var _ref2$size=_ref2.size,size=void 0===_ref2$size?12:_ref2$size,style=_ref2.style;return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement("svg",{viewBox:"0 0 1024 1024",width:size,height:size,fill:"currentColor",style:style},react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement("path",{d:"M682.667 426.667V0H341.333v426.667h-256l426.667 512 426.667-512h-256z"}))})),lfl=function lfl(value){return null==value||"-"===value||isNaN(value)||value===1/0||value===-1/0?render("-"):render((value=Number(value))>0?react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment,null,react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement("span",{style:{color:"#f4485c"}},numeral__WEBPACK_IMPORTED_MODULE_1___default()(value).format("0.00%")),react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(BeautifulUpIcon,{style:{marginLeft:4,color:"#f4485c"}})):value<0?react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment,null,react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement("span",{style:{color:"#00a854"}},numeral__WEBPACK_IMPORTED_MODULE_1___default()(value).format("0.00%")),react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(BeautifulDownIcon,{style:{marginLeft:4,color:"#00a854"}})):react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement("span",{style:{color:"#838383"}},"0"));function render(children){return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement("div",{className:"lfl-cell",style:{display:"inline-flex",alignItems:"center",justifyContent:"flex-end"}},children)}},money=function money(v){return"-"===v||null==v?"-":(v=Number(v))<0?"-".concat(money(-v)):0===v?String(v):v<1e4?numeral__WEBPACK_IMPORTED_MODULE_1___default()(v).format("0,0"):v<1e5?"".concat(numeral__WEBPACK_IMPORTED_MODULE_1___default()(v/1e4).format("0.0"),"万"):v<1e8?"".concat(numeral__WEBPACK_IMPORTED_MODULE_1___default()(v/1e4).format("0"),"万"):"".concat(v<1e9?numeral__WEBPACK_IMPORTED_MODULE_1___default()(v/1e8).format("0.0"):numeral__WEBPACK_IMPORTED_MODULE_1___default()(v/1e8).format("0"),"亿")};try{time.displayName="time",time.__docgenInfo={description:"",displayName:"time",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/assets/format.tsx#time"]={docgenInfo:time.__docgenInfo,name:"time",path:"stories/assets/format.tsx#time"})}catch(__react_docgen_typescript_loader_error){}try{plain.displayName="plain",plain.__docgenInfo={description:"",displayName:"plain",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/assets/format.tsx#plain"]={docgenInfo:plain.__docgenInfo,name:"plain",path:"stories/assets/format.tsx#plain"})}catch(__react_docgen_typescript_loader_error){}try{amount0.displayName="amount0",amount0.__docgenInfo={description:"数字格式化：千分位 & 保留到个位数",displayName:"amount0",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/assets/format.tsx#amount0"]={docgenInfo:amount0.__docgenInfo,name:"amount0",path:"stories/assets/format.tsx#amount0"})}catch(__react_docgen_typescript_loader_error){}try{amount.displayName="amount",amount.__docgenInfo={description:"",displayName:"amount",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/assets/format.tsx#amount"]={docgenInfo:amount.__docgenInfo,name:"amount",path:"stories/assets/format.tsx#amount"})}catch(__react_docgen_typescript_loader_error){}try{amount1.displayName="amount1",amount1.__docgenInfo={description:"数字格式化：千分位 & 保留到一位小数",displayName:"amount1",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/assets/format.tsx#amount1"]={docgenInfo:amount1.__docgenInfo,name:"amount1",path:"stories/assets/format.tsx#amount1"})}catch(__react_docgen_typescript_loader_error){}try{amount2.displayName="amount2",amount2.__docgenInfo={description:"数字格式化：千分位 & 保留两位小数",displayName:"amount2",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/assets/format.tsx#amount2"]={docgenInfo:amount2.__docgenInfo,name:"amount2",path:"stories/assets/format.tsx#amount2"})}catch(__react_docgen_typescript_loader_error){}try{ratio.displayName="ratio",ratio.__docgenInfo={description:"",displayName:"ratio",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/assets/format.tsx#ratio"]={docgenInfo:ratio.__docgenInfo,name:"ratio",path:"stories/assets/format.tsx#ratio"})}catch(__react_docgen_typescript_loader_error){}try{lfl.displayName="lfl",lfl.__docgenInfo={description:"环比/同比格式化函数，注意 lfl 并不是一个 React 组件. 注意 lfl 生成的 div 样式",displayName:"lfl",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/assets/format.tsx#lfl"]={docgenInfo:lfl.__docgenInfo,name:"lfl",path:"stories/assets/format.tsx#lfl"})}catch(__react_docgen_typescript_loader_error){}try{money.displayName="money",money.__docgenInfo={description:"",displayName:"money",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/assets/format.tsx#money"]={docgenInfo:money.__docgenInfo,name:"money",path:"stories/assets/format.tsx#money"})}catch(__react_docgen_typescript_loader_error){}},151:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__(6),__webpack_require__(16),__webpack_require__(65),__webpack_require__(25),__webpack_require__(32),__webpack_require__(7),__webpack_require__(19),__webpack_require__(13),__webpack_require__(66);var factorySymbol=Symbol("factory-symbol");function isProtoFactory(v){return v&&v[factorySymbol]}function proto(baseRecord){var ensureArray=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"auto",baseKeys=Object.keys(baseRecord);function process(record){var result=Object.assign({},record);return baseKeys.forEach((function(key){if(result[key]!==proto.empty){var _result$key,base=baseRecord[key];if(isProtoFactory(base))result[key]=base(result[key]);else result[key]=null!==(_result$key=result[key])&&void 0!==_result$key?_result$key:base}else delete result[key]})),result}function factory(arg){return("auto"===ensureArray?Array.isArray(arg):ensureArray)?null==arg?[]:arg.map(process):process(arg)}return factory[factorySymbol]=!0,factory.extends=function(extRecord){var extFactory=proto(extRecord,ensureArray);return function(arg){return factory(extFactory(arg))}},factory}proto.empty=Symbol("proto.empty"),proto.string=function(v){if(null!=v&&"string"!=typeof v)throw new Error("must be string");return v},proto.string[factorySymbol]=!0,proto.number=function(v){if(null!=v&&"number"!=typeof v)throw new Error("must be number");return v},proto.number[factorySymbol]=!0,proto.notNull=function(v){if(null==v)throw new Error("must be not null");return v},proto.notNull[factorySymbol]=!0,proto.object=function(baseRecord){return proto(baseRecord,!1)},proto.array=function(baseRecord){return proto(baseRecord,!0)},__webpack_exports__.a=proto},18:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return cols})),__webpack_require__.d(__webpack_exports__,"b",(function(){return testProvColumns})),__webpack_require__.d(__webpack_exports__,"c",(function(){return useAllDataSource})),__webpack_require__.d(__webpack_exports__,"e",(function(){return useProvinceDataSource})),__webpack_require__.d(__webpack_exports__,"d",(function(){return useCityDataSource}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(33),__webpack_require__(337),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(32),__webpack_require__(23),__webpack_require__(338),__webpack_require__(28),__webpack_require__(10),__webpack_require__(167),__webpack_require__(7),__webpack_require__(13),__webpack_require__(161),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);var lodash__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(81),lodash__WEBPACK_IMPORTED_MODULE_20___default=__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_20__),react__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(0),_cdn_data__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__(80),_format__WEBPACK_IMPORTED_MODULE_23__=__webpack_require__(12);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var rawCols={provinceName:{code:"provinceName",name:"省份",width:150},cityName:{code:"cityName",name:"城市",width:150},confirmedCount:{code:"confirmedCount",name:"确诊",width:100,render:_format__WEBPACK_IMPORTED_MODULE_23__.a,align:"right"},suspectedCount:{code:"suspectedCount",name:"疑似",width:100,render:_format__WEBPACK_IMPORTED_MODULE_23__.a,align:"right"},curedCount:{code:"curedCount",name:"治愈",width:100,render:_format__WEBPACK_IMPORTED_MODULE_23__.a,align:"right"},deadCount:{code:"deadCount",name:"死亡",width:100,render:_format__WEBPACK_IMPORTED_MODULE_23__.a,align:"right"},updateTime:{code:"updateTime",name:"最后更新时间",width:180,render:_format__WEBPACK_IMPORTED_MODULE_23__.d}},lockProvCol=Object.assign({lock:!0},rawCols.provinceName),lockCityCol=Object.assign({lock:!0},rawCols.cityName),lockTimeCol=Object.assign({lock:!0},rawCols.updateTime),indCols=[rawCols.confirmedCount,rawCols.curedCount,rawCols.deadCount],cols=Object.assign({},rawCols,{indCols:indCols,lockProvCol:lockProvCol,lockCityCol:lockCityCol,lockTimeCol:lockTimeCol}),testProvColumns=[cols.provinceName].concat(function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(cols.indCols),[cols.updateTime]);function useAllDataSource(){var _useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_21__.useState)({dataSource:[],isLoading:!0}),2),_useState2$=_useState2[0],dataSource=_useState2$.dataSource,isLoading=_useState2$.isLoading,setState=_useState2[1];return Object(react__WEBPACK_IMPORTED_MODULE_21__.useEffect)((function(){Object(_cdn_data__WEBPACK_IMPORTED_MODULE_22__.c)().then((function(data){setState({dataSource:lodash__WEBPACK_IMPORTED_MODULE_20___default.a.sortBy(data.map((function(rawItem){return{provinceName:rawItem.provinceName,cityName:rawItem.cityName,confirmedCount:Number(rawItem.city_confirmedCount),suspectedCount:Number(rawItem.city_suspectedCount),curedCount:Number(rawItem.city_curedCount),deadCount:Number(rawItem.city_deadCount),updateTime:rawItem.updateTime}})),(function(d){return d.updateTime})),isLoading:!1})}))}),[]),{dataSource:dataSource,isLoading:isLoading}}function useProvinceDataSource(){var _useState4=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_21__.useState)({dataSource:[],isLoading:!0}),2),_useState4$=_useState4[0],dataSource=_useState4$.dataSource,isLoading=_useState4$.isLoading,setState=_useState4[1];return Object(react__WEBPACK_IMPORTED_MODULE_21__.useEffect)((function(){Object(_cdn_data__WEBPACK_IMPORTED_MODULE_22__.c)().then((function(data){var provinceItems=lodash__WEBPACK_IMPORTED_MODULE_20___default.a.uniqBy(data,(function(d){return d.provinceName+"--"+d.updateTime})).map((function(d){return{provinceName:d.provinceName,confirmedCount:Number(d.province_confirmedCount),suspectedCount:Number(d.province_suspectedCount),curedCount:Number(d.province_curedCount),deadCount:Number(d.province_deadCount),updateTime:d.updateTime}}));setState({dataSource:lodash__WEBPACK_IMPORTED_MODULE_20___default.a.orderBy(Object.values(lodash__WEBPACK_IMPORTED_MODULE_20___default.a.groupBy(provinceItems,(function(d){return d.provinceName}))).map((function(data){return lodash__WEBPACK_IMPORTED_MODULE_20___default.a.maxBy(data,(function(d){return d.updateTime}))})),(function(d){return-d.confirmedCount})),isLoading:!1})}))}),[]),{dataSource:dataSource,isLoading:isLoading}}function useCityDataSource(){var _useState6=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_21__.useState)({dataSource:[],isLoading:!0}),2),_useState6$=_useState6[0],dataSource=_useState6$.dataSource,isLoading=_useState6$.isLoading,setState=_useState6[1];return Object(react__WEBPACK_IMPORTED_MODULE_21__.useEffect)((function(){Object(_cdn_data__WEBPACK_IMPORTED_MODULE_22__.c)().then((function(data){var items=Object.values(lodash__WEBPACK_IMPORTED_MODULE_20___default.a.groupBy(data,(function(d){return d.provinceName}))).map((function(byProv){var rawProvItem=lodash__WEBPACK_IMPORTED_MODULE_20___default.a.maxBy(byProv,(function(d){return d.updateTime})),cityItems=Object.values(lodash__WEBPACK_IMPORTED_MODULE_20___default.a.groupBy(byProv,(function(d){return d.cityName}))).map((function(byCity){var rawCityItem=lodash__WEBPACK_IMPORTED_MODULE_20___default.a.maxBy(byCity,(function(d){return d.updateTime}));return{provinceName:rawCityItem.provinceName,cityName:rawCityItem.cityName,confirmedCount:Number(rawCityItem.city_confirmedCount),suspectedCount:Number(rawCityItem.city_suspectedCount),curedCount:Number(rawCityItem.city_curedCount),deadCount:Number(rawCityItem.city_deadCount),updateTime:rawCityItem.updateTime}}));return{provinceName:rawProvItem.provinceName,confirmedCount:Number(rawProvItem.province_confirmedCount),suspectedCount:Number(rawProvItem.province_suspectedCount),curedCount:Number(rawProvItem.province_curedCount),deadCount:Number(rawProvItem.province_deadCount),updateTime:rawProvItem.updateTime,children:cityItems}}));setState({dataSource:lodash__WEBPACK_IMPORTED_MODULE_20___default.a.sortBy(items,(function(d){return-d.confirmedCount})).flat(),isLoading:!1})}))}),[]),{dataSource:dataSource,isLoading:isLoading}}},205:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return simpleEncode}));__webpack_require__(91);function simpleEncode(path){return 0===path.length?"key:@total@":"key:".concat(path.join(" "))}},2068:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(575).configure)([__webpack_require__(2069),__webpack_require__(2071),__webpack_require__(2077),__webpack_require__(2079),__webpack_require__(2081),__webpack_require__(2083),__webpack_require__(2148),__webpack_require__(2150),__webpack_require__(2157),__webpack_require__(2159),__webpack_require__(2160),__webpack_require__(2163),__webpack_require__(2182),__webpack_require__(2185),__webpack_require__(2188),__webpack_require__(2189)],module,!1)}).call(this,__webpack_require__(94)(module))},2069:function(module,exports,__webpack_require__){var map={"./index.stories.mdx":2070};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2069},2070:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9),_package_json__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(910),react_json_view__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(202),react_json_view__WEBPACK_IMPORTED_MODULE_8___default=__webpack_require__.n(react_json_view__WEBPACK_IMPORTED_MODULE_8__);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"基本信息",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"ali-react-table"},"ali-react-table"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"p"},{href:"https://www.npmjs.org/package/ali-react-table",target:"_blank",rel:"nofollow noopener noreferrer"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("img",_extends({parentName:"a"},{src:"https://img.shields.io/npm/v/ali-react-table.svg?style=flat-square",alt:"NPM Package"})))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"高性能 React 表格组件"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"安装"},"安装"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"npm install ali-react-table")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"特点"},"特点"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"高性能，内置虚拟滚动，数据量较大时自动开启"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"简单灵活的 API，丰富的定制能力"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"实用的表格特性：表头吸顶 & 左侧/右侧锁列 & 粘性定位的滚动条")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"表格适用场景"},"表格适用场景"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"需要用表格展示大量数据，对表格性能较为敏感"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"页面本身没有引入组件库（可能是出于页面体积的考量），缺少开箱可用的 React 表格"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"组件库所提供的表格组件可定制能力不够，需要更加灵活的表格组件")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"兼容性说明"},"兼容性说明"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"表格只兼容 react 16"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"表格用到了大量较新的浏览器 API，只兼容较新版本的 PC 端浏览器或手机浏览器，详见",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://github.com/alibaba/ali-react-table/issues/18",target:"_blank",rel:"nofollow noopener noreferrer"}),"该 issue"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"相关链接"},"相关链接"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"NPM: ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://www.npmjs.com/package/ali-react-table",target:"_blank",rel:"nofollow noopener noreferrer"}),"https://www.npmjs.com/package/ali-react-table")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"GitHub: ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://github.com/alibaba/ali-react-table",target:"_blank",rel:"nofollow noopener noreferrer"}),"https://github.com/alibaba/ali-react-table")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"表格组件介绍: ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://zhuanlan.zhihu.com/p/130755755",target:"_blank",rel:"nofollow noopener noreferrer"}),"https://zhuanlan.zhihu.com/p/130755755")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"表格使用过程中遇到问题可以联系钉钉号 feichao93")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"packagejson-（仅供参考）"},"package.json （仅供参考）"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(react_json_view__WEBPACK_IMPORTED_MODULE_8___default.a,{src:_package_json__WEBPACK_IMPORTED_MODULE_7__,name:"package.json",enableClipboard:!1,collapsed:0,mdxType:"ReactJson"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"基本信息",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2071:function(module,exports,__webpack_require__){var map={"./changelog.stories.mdx":2072};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2071},2072:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(51),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7__);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"更新日志",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"请注意日志中的加粗部分(break change)哦 ヾ(=･ω･=)o"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v12-2020-09-26"},"v1.2 2020-09-26"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"新增 useAutoWidthTransform 自适应列宽"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"其他：",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"修复 mergeCellProps 中 lodash.merge 原地修改对象的问题"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"放宽 buildCrossTable/buildCrossTreeTable 的参数限制"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"CrossTable 与 CrossTreeTable 添加 tableRef"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"将 makeTreeModeTransform onClick 挂到单元格上"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"makeColumnResizeTransform 修复 documentElement cursor 没有被重置的问题，新增 options.expanderVisibility 可隐藏可伸缩列")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v11-2020-09-16"},"v1.1 2020-09-16"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"优化锁列的实现方式 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://github.com/alibaba/ali-react-table/pull/74",target:"_blank",rel:"nofollow noopener noreferrer"}),"#74"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v10-2020-08-25"},"v1.0 2020-08-25"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"p"},{href:"https://github.com/alibaba/ali-react-table/blob/master/docs/from-0.14-to-1.0.md",target:"_blank",rel:"nofollow noopener noreferrer"}),"迁移指南")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"移除 ali-react-table/biz"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"Break Change 重构表格 DOM 结构，简化 CSS variable")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"Break Change 交叉表样式调整")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"其他：",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"loading 图标位置计算优化"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"优化了表格 DOM 结构，优化了表格边框"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"自动开启虚拟滚动的行数/列数的阈值从 80 调整为 100"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"Break Change supportsExpand=true 且 expandKeys=null/undefined 时，convertDrillTreeToCrossTree 将直接抛出异常"))))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v014-2020-08-04"},"v0.14 2020-08-04"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"p"},{href:"https://github.com/alibaba/ali-react-table/blob/master/docs/from-0.13-to-0.14.md",target:"_blank",rel:"nofollow noopener noreferrer"}),"迁移指南")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"Break Change: 移除 ali-react-table/biz 入口"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"移除 commonTransforms， commonTransforms.XX 改名为 makeXXTransform")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"移除 useOperationBar 和 CustomColumnsDialog")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"请直接从 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"ali-react-table")," 导入 API。老的 API 在 1.0 以前不会真正移除，但添加了过时的警告"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"Break Change: 移除 dvt-aggregation 依赖，移除 createAggregateFunction API"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"如果原先有使用 createAggregateFunction 函数，请手动安装 dvt-aggregation。"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"其他",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"文档目录优化"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"支持 SSR"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"新增 mergeCellProps 方法")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("details",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("summary",{style:{margin:"16px 0",cursor:"pointer"}},"点击展开 v0.13 的日志"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0137-2020-07-28"},"v0.13.7 2020-07-28"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"fix: 优化 convertDrillTreeToCrossTree 生成的箭头样式"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0136-2020-07-10"},"v0.13.6 2020-07-10"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"deps: 移除依赖 carbon/icons-react"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0135-2020-06-03"},"v0.13.5 2020-06-03"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"fix: 避免 treeMode 覆盖第一列的 props; 修复 CrossTreeTable primary render/getCellProps 的参数"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0134-2020-06-17"},"v0.13.4 2020-06-17"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"deps: 移除没有用到的依赖 constate"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0133-2020-05-20"},"v0.13.3 2020-05-20"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"fix: 修复 rollup 打包错误"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0132-2020-05-19"},"v0.13.2 2020-05-19"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"feat: 拖拽 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default.a,{kind:"表格 / 常用功能示例",story:"拖拽调整列宽",mdxType:"LinkTo"},"拖拽调整列宽")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"feat: 新增 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default.a,{kind:"交叉与透视 / 交叉树状表格 / 文档",story:"page",mdxType:"LinkTo"},"CrossTreeTable")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"feat: 新增部分 transform 的非受控用法",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"useColumnHoverTransform"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"useColumnHoverRangeTransform"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"useColumnResizeTransform"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"useSortTransform"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"useTreeModeTransform"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"feat: 导出 Excel 文件时支持单元格合并")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0131-2020-04-26"},"v0.13.1 2020-04-26"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"feat(biz): commonTransforms.sort 添加 keepDataSource 参数；为 commonTransforms.treeMode 生成的元素添加 className ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://github.com/alibaba/ali-react-table/pull/31",target:"_blank",rel:"nofollow noopener noreferrer"}),"#31"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0130-2020-04-20"},"v0.13.0 2020-04-20"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"Break Change: BaseTable primaryKey 的计算值只能为 string，移除 props.primaryKey 的默认值")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"feat: 导出内部的一些数据处理方法；导出 getTreeDepth 方法"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"feat(biz): 添加 commonTransforms.columnRangeHover"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"fix: 修改 TypeScript 的 target 为 ES2015 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://github.com/alibaba/ali-react-table/pull/24",target:"_blank",rel:"nofollow noopener noreferrer"}),"#24"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"其他较小的调整："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"feat(biz)： 导出一些 commonTransforms 中的 TS 类型；"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"feat(biz)： commonTransforms.orderField 也可以识别 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"features.orderField")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("details",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("summary",{style:{margin:"16px 0",cursor:"pointer"}},"点击展开 v0.12 的日志"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0122-2020-04-17"},"v0.12.2 2020-04-17"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"feat: commonTransforms.sort 支持上层传入自定义的渲染组件 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://github.com/alibaba/ali-react-table/pull/23",target:"_blank",rel:"nofollow noopener noreferrer"}),"#23")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"feat: 修改 proto TS 类型，添加 proto.extends ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://github.com/alibaba/ali-react-table/pull/14",target:"_blank",rel:"nofollow noopener noreferrer"}),"#14")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"deps: 移除对 immer 和 react-dom 的依赖 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://github.com/alibaba/ali-react-table/pull/16",target:"_blank",rel:"nofollow noopener noreferrer"}),"#16"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0121-2020-04-13"},"v0.12.1 2020-04-13"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"新增表格常见功能：自动单元格合并 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://github.com/alibaba/ali-react-table/pull/4",target:"_blank",rel:"nofollow noopener noreferrer"}),"#4")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"优化加载图标的显示位置 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://github.com/alibaba/ali-react-table/pull/13",target:"_blank",rel:"nofollow noopener noreferrer"}),"#13")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"优化表格行 hover 效果处理 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://github.com/alibaba/ali-react-table/pull/12",target:"_blank",rel:"nofollow noopener noreferrer"}),"#12")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"新增：表头部分添加 onWheel 监听 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://github.com/alibaba/ali-react-table/pull/10",target:"_blank",rel:"nofollow noopener noreferrer"}),"#10")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"新增：表格常见功能 treeMode 允许上层定义 isLeafNode ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://github.com/alibaba/ali-react-table/pull/6",target:"_blank",rel:"nofollow noopener noreferrer"}),"#6"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0120-2020-04-02"},"v0.12.0 2020-04-02"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"✨ 开源，NPM package 名称换为 ali-react-table"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"新增 ali-react-table/biz, ali-react-table/pivot 两个 sub-package",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"表格常见功能相关符号通过 biz 进行导出"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"交叉与透视功能相关符号通过 pivot 进行导出"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"移除了 BaseTable#onRowClick"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("details",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("summary",{style:{margin:"16px 0",cursor:"pointer"}},"点击展开历史版本（开源前）更新日志"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0118-2020-03-30"},"v0.11.8 2020-03-30"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"新增 CustomColumnsDialog 组件")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0117-2020-03-29"},"v0.11.7 2020-03-29"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"新增 commonTransform.tips")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0116-2020-03-24"},"v0.11.6 2020-03-24"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"新增对 styled-components v3 的支持")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0113-2020-03-23"},"v0.11.3 2020-03-23"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"列配置新增 column.headerCellProps 指定表头单元格的 props"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"新增 commonTransform.columnHover"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"自定义列新增 column.features.enforceVisible"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"表格部分样式调整")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0110-2020-03-14"},"v0.11.0 2020-03-14"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"新增表头的虚拟滚动"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"性能优化：使用 div 来作为 virtualTop/virtualBottom"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"样式优化，规范化 CSS variables")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0101-2020-03-12"},"v0.10.1 2020-03-12"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"Cube 改名为 RecordMatrix，相关函数也修改了名称"),"（注意这是一个 break change，但用了 patch 进行发布）"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"优化表格边框样式")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v0100-2020-03-11"},"v0.10.0 2020-03-11"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"useVirtual 为 'auto' 时对应的阈值降低到 80 行 / 80 列"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"Break Change! BaseTable 移除了 fixedHeader/maxBodyHeight"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"请使用 style.height 与 style.overflow = 'auto' 来为表格设置固定高度"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"New Feature lab 中新增了交叉表")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v090-2020-03-05"},"v0.9.0 2020-03-05"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"Break Change! 渲染表格操作栏的能力现在由 useOperationBar 的返回值的 view 组件进行提供"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"原先的 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"operationBar.render")," 方法被移除了，请使用 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"<operationBar.view>...</operationBar.view>")," 代替 render 方法"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"下次真的不改了")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v080-2020-03-03"},"v0.8.0 2020-03-03"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"Break Change! 组件 OperationBarDiv 被移除了"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"渲染表格操作栏的能力现在由 useOperationBar 的返回值的 render 方法提供"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"Feature: useVirtual 支持两个方向分别设置是否开启；useVirtual 默认值变为 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"'auto'")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"文档完善")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v070-2020-02-22"},"v0.7.0 2020-02-22"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"Break Change! BaseTable ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"strong"},"hasOuterBorder")," 属性被移除")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"Feature: 新增 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"defaultColumnWidth")," 属性，用于指定列的默认宽度"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"Feature: 新增 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"flowRoot")," 属性，用于指定自定义的虚拟滚动的容器"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"Fix: 修复虚拟滚动的相关问题")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v062-2020-02-19"},"v0.6.2 2020-02-19"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"Feature: sort 支持单字段排序；优化对齐")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v061-2020-02-16"},"v0.6.1 2020-02-16"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"Break Change! 部分工具函数名称修改，详见文档。")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"Feature: BaseTable 添加虚拟滚动，优化表格单元格尺寸同步算法，优化表格性能。")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v050-2020-01-12"},"v0.5.0 2020-01-12"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"Feature: 自定义列支持多层嵌套的 columns 结构"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"Break Change! Column 配置调整：flags -> features， column.view.xxx -> column.xxx"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"Break Change! getCellProps 方法签名调整，改为和 render 一致"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"Break Change! 表格工具栏(OperationBar) 重构")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v040-2019-12-30"},"v0.4.0 2019-12-30"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"biz-utils 新增 commonTransform.sort"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"BREAK CHANGE: ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"useOperationBar")," features 类型修改")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v031-2019-12-28"},"v0.3.1 2019-12-28"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"文档网站优化，升级到 storybook 5.3.0-rc.3，总算可以看到 stories 的源代码了"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"biz-utils 新增构建树的方法，commonTransform.buildTree"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"biz-utils 新增树状模式，commonTransform.treeMode")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v030-2019-12-27"},"v0.3.0 2019-12-27"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"DvtTable 重命名为 BaseTable"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"BaseTable 支持 column.view.hidden 与 column.view.lock"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"引入 dvt-aggregation 来进行聚合计算"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"新增 biz-utils，添加若干用于业务开发的表格特性",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"TableTransform 拓展机制"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"数据导出"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"自定义列")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"v020-2019-12-19"},"v0.2.0 2019-12-19"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"新增 DvtTable 与 CrossTable"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"新增 buildDrillTree / buildCube 等用于构建数据立方的工具函数"))))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"更新日志",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2077:function(module,exports,__webpack_require__){var map={"./table.stories.mdx":2078};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2077},2078:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(51),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7__);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"表格 / 基本用法",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"基础表格"},"基础表格"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"基础表格 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"BaseTable"),"是 ali-react-table 中各个表格组件的底层组件，提供了基本的表格渲染能力。BaseTable 只提供了基本的表格渲染能力，一些常见的表格功能（排序、树状模式等）详见 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default.a,{kind:"表格 / 常用功能 / 文档",story:"page",mdxType:"LinkTo"},"表格常见功能"),"."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"BaseTable 自带了一些非常实用的特性（表头吸顶、锁列、单元格合并等），并支持虚拟滚动，支持大数据量渲染。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"基本用法"},"基本用法"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"基本的 Table 包含行和列，使用 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"columns")," 属性来定义列的信息，使用传入的 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"dataSource")," 属性数据来创建行，这两个属性也是表格组件必传的 props（其他所有 props 都是可选的）。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"dataSource")," 提供表格数据，数组中的每一项对应表格的一行"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"columns")," 指定表格中包含哪些列，",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"column.code")," 与 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"dataSource")," 中的数据字段对应")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"以下是 BaseTable 的基本用法示例："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"function 基本用法() {\n  const dataSource = [\n    { prov: '湖北省', confirmed: 54406, cured: 4793, dead: 1457, t: '2020-02-15 19:52:02' },\n    { prov: '广东省', confirmed: 1294, cured: 409, dead: 2, t: '2020-02-15 19:52:02' },\n    { prov: '河南省', confirmed: 1212, cured: 390, dead: 13, t: '2020-02-15 19:52:02' },\n    { prov: '浙江省', confirmed: 1162, cured: 428, dead: 0, t: '2020-02-15 19:52:02' },\n    { prov: '湖南省', confirmed: 1001, cured: 417, dead: 2, t: '2020-02-15 19:52:02' },\n  ]\n\n  const columns: ArtColumn[] = [\n    { code: 'prov', name: '省份', width: 150 },\n    { code: 'confirmed', name: '确诊', width: 100, align: 'right' },\n    { code: 'cured', name: '治愈', width: 100, align: 'right' },\n    { code: 'dead', name: '死亡', width: 100, align: 'right' },\n    { code: 't', name: '最后更新时间', width: 180 },\n  ]\n  return <BaseTable dataSource={dataSource} columns={columns} />\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Canvas,{mdxType:"Canvas"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"表格-表格示例--基本用法",mdxType:"Story"})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"除了基本用法之外，",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"BaseTable")," 也支持锁列、表头吸顶、列分组、单元格合并等功能，具体用法可参考 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"p"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default.a,{kind:"表格 / 表格示例",story:"基本用法",mdxType:"LinkTo"},"BaseTable 的各个示例"),"。")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"BaseTable")," 的详细 API 详见 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"p"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default.a,{kind:"表格 / API",story:"page",mdxType:"LinkTo"},"BaseTable API"),"。")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"表格 / 基本用法",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2079:function(module,exports,__webpack_require__){var map={"./table-api.stories.mdx":2080};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2079},2080:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9);__webpack_require__(51);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"表格 / API",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"基础表格-api"},"基础表格 API"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"basetable-列配置"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h2"},"BaseTable")," 列配置"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"columns")," 中单个列的配置具体如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("table",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("thead",{parentName:"table"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"thead"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null}),"字段"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null}),"类型"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null})))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tbody",{parentName:"table"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"name")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"string")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"列的名称")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"code")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"string")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"在数据中的字段 code")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"getValue")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"(record: any, rowIndex: number) => any")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"自定义取数方法")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"render")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"(value: any, record: any, rowIndex: number) => ReactNode")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"自定义渲染方法")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"getCellProps")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"(value: any, record: any, rowIndex: number) => any")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"自定义的获取单元格 props 的方法")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"getSpanRect")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"(value: any, record: any, rowIndex: number) => SpanRect")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"在虚拟滚动的情况下设置单元格合并")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"title")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"ReactNode")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"列标题的展示名称；在页面中进行展示时，该字段将覆盖 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"name")," 字段")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"width")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"number")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"列的宽度，如果该列是锁定的，则宽度为必传项")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"align")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"'left' / 'center' / 'right'")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"单元格对其方向")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"hidden")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"boolean")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"是否隐藏")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"lock")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"boolean")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"是否锁列")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"children")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"ArtColumn[]")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"该列的子节点")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"headerCellProps")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"React.ThHTMLAttributes")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"表头单元格的 props")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"features")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"{ [key: string]: any }")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"功能开关标记，用于对表格功能进行拓展")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"列配置中的部分字段为必传或必选的字段，规则如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"name")," 字段必选"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"对于叶子节点，即 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"column.children == null || column.children.length === 0"),"，",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"code")," 或 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"getValue")," 二者中至少提供一个"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"对于锁定的列（",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"lock=true"),"），宽度 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"width")," 为必传项；推荐给所有的列都配置上宽度，或是给表格配置一个默认的列宽度")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"表格-props"},"表格 props"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"p"},"主要字段")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("table",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("thead",{parentName:"table"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"thead"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null}),"字段"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null}),"类型"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null})))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tbody",{parentName:"table"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"dataSource")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"td"},"必传属性")," ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"any[]")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"表格数据源")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"columns")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"td"},"必传属性")," ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"ArtColumn[]")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"表格的列配置")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"isLoading")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"boolean")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"表格是否在加载中")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"primaryKey")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"string")," ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("br",null)," 或 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"(record: any, rowIndex: number) => string")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"用于指定每一行的 key",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("br",null),"传入字符串表示从数据中获取对应字段的值作为 key",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("br",null),"传入函数时将调用该函数来生成每一行的 key",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("br",null),"不传该 prop 时，表格将使用下标作为每一行的 key")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"useVirtual")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"'auto'")," ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("br",null)," 或 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"boolean")," ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("br",null)," 或一个对象"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"是否开启虚拟滚动，详见下方「虚拟滚动」说明")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"getRowProps")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"(record: any, rowIndex: number): React.HTMLAttributes")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"自定义每一行的 props")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"p"},"表格样式与结构")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("table",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("thead",{parentName:"table"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"thead"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null}),"字段"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null}),"类型"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null})))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tbody",{parentName:"table"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"className")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"number")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"自定义类名")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"style")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"React.CSSProperties")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"自定义内联样式")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"isStickyHead")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"boolean")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"表格头部是否吸顶，默认为 true")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"stickyTop")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"number")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"表头吸顶后，距离顶部的距离")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"hasHeader")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"boolean")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"表格是否具有头部")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"useOuterBorder")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"boolean")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"是否使用来自外层 div 的边框代替单元格的外边框")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"emptyContent")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"ReactNode")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"数据为空的时候的表格内容展现")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"defaultColumnWidth")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"number")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"列的默认宽度")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"p"},"其他不常用的属性")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("table",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("thead",{parentName:"table"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"thead"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null}),"字段"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null}),"类型"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null})))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tbody",{parentName:"table"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"stickyBottom")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"number")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"表格底部距离页面下边缘的距离")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"flowRoot")," ","*"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"'auto' / 'self' / HTMLElement / (() => HTMLElement)")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"表格所处于的块格式化上下文(BFC)")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"flowRoot ","*"," ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context",target:"_blank",rel:"nofollow noopener noreferrer"}),"块格式化上下文")," 用于在开启虚拟滚动的情况下计算表格的可见范围。")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"表格样式"},"表格样式"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"BaseTable 透出了一些 CSS 变量来自定义表格的样式，你可以通过下面的方式对表格进行风格化："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-js"}),"<BaseTable style={{ '--color': '#333', '--cell-border': 'none' }} />\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"自定义 CSS 变量如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"export type BaseTableCSSVariables = Partial<{\n  /** 表格的字体颜色 */\n  '--color': string\n  /** 表格背景颜色 */\n  '--bgcolor': string\n  /** 鼠标悬停时的背景色 */\n  '--hover-color': string\n  /** 表格行高，注意该属性将被作为 CSS variable，不能使用数字作为简写 */\n  '--row-height': string\n\n  /** 表头的字体颜色 */\n  '--header-color': string\n  /** 表头的背景颜色 */\n  '--header-bgcolor': string\n  /** 表格行高，注意该属性将被作为 CSS variable，不能使用数字作为简写 */\n  '--header-row-height': string\n\n  /** 单元格的边框颜色 */\n  '--border-color': string\n  /** 单元格边框，默认为 1px solid var(--border-color) */\n  '--cell-border': string\n  /** 单元格上下边框，默认为 var(--cell-border) */\n  '--cell-border-horizontal': string\n  /** 单元格左右边框，默认为 var(--cell-border) */\n  '--cell-border-vertical': string\n  /** 表头单元格边框，默认为 1px solid var(--border-color) */\n  '--header-cell-border': string\n  /** 表头单元格上下边框，默认为 var(--header-cell-border) */\n  '--header-cell-border-horizontal': string\n  /** 表头单元格左右边框，默认为 var(--header-cell-border) */\n  '--header-cell-border-vertical': string\n}>\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"当 CSS 变量无法满足自定义样式需求时，推荐通过 styled-components 来覆盖表格的默认样式。表格内各部分的 CSS 类名可以通过 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"Classes")," 对象来获取。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"在更精细的场景下，可以使用 getCellProps/headerCellProps 来定制每个单元格的样式。"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"表格 / API",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2081:function(module,exports,__webpack_require__){var map={"./table-advanced-usage.stories.mdx":2082};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2081},2082:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9);__webpack_require__(51);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"表格 / 进阶用法",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"虚拟滚动"},"虚拟滚动"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"数据量较大时，表格会自动开启虚拟滚动。你也可以通过表格的 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"useVirtual")," 属性来调整虚拟滚动功能，目前 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"useVirtual")," 支持以下几个值："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"'auto'")," （默认值）表示根据表格的行数或列数自动调整是否开启虚拟滚动",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"行数量超过 100 时，自动开启纵向虚拟滚动"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"列数量超过 100 时，自动开启横向虚拟滚动"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"表头的横向虚拟滚动默认关闭"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"true")," 开启所有虚拟滚动"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"false")," 关闭所有虚拟滚动"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"传入一个对象可以分别指定 横向/纵向/表头 是否开启虚拟滚动",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"对象的结构为 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"{ horizontal?: boolean | 'auto', vertical?: boolean | 'auto', header?: boolean | 'auto' }"))))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"p"},"虚拟滚动注意事项：")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"水平方向的虚拟滚动 要求「所有的列都有一个指定的宽度」，推荐设置 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"defaultColumnWidth"),"，避免部分列缺失宽度"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"如果需要设置表格的高度或最大高度，注意要",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"将 height/maxHeight 设置在表格上"),"，不要设置在父节点上"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"设置 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"style.overflow = 'auto'")," 时，必须为表格设置高度或最大高度；",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"此时表格的外层 div 会被认为是表格所处的 BFC，该 div 的高度将决定表格渲染多少行，故这个 div 的最大高度必须是确定的"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"在虚拟滚动开启的情况下，如果想要进行单元格合并，则要使用 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"column.getSpanRect")," 来进行设定：",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"column.getSpanRect")," 返回一个 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"SpanRect")," 的对象来表示对应单元所处的合并后的位置。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"SpanRect")," 的具体类型为 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"{ left: number, right: number, top: number, bottom: number }"),"，注意其中 left/top 是 inclusive 的，right/bottom 是 exclusive 的。")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"锁列与嵌套的列结构"},"锁列与嵌套的列结构"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"在有列嵌套的情况下（通过 column.children 设置列的子节点，形成列的嵌套结构），锁列具有传递性，从而避免了锁定列与非锁定列出现在同一个父节点下的情况："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"如果一个父节点设置了锁列 lock=true，则其所有子节点将自动被设置为 lock=true"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"如果一个节点设置了锁列 lock=true，则其父节点和所有祖先节点将被设置为 lock=true")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"此外，如果所有的列都设置了 lock=true，则整个表格的锁列将不生效。"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"表格 / 进阶用法",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2083:function(module,exports,__webpack_require__){var map={"./table.stories.tsx":2084};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2083},2084:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"基本用法",(function(){return 基本用法})),__webpack_require__.d(__webpack_exports__,"自定义表格样式",(function(){return 自定义表格样式})),__webpack_require__.d(__webpack_exports__,"自定义表格样式2",(function(){return 自定义表格样式2})),__webpack_require__.d(__webpack_exports__,"默认列宽",(function(){return 默认列宽})),__webpack_require__.d(__webpack_exports__,"左侧锁列",(function(){return 左侧锁列})),__webpack_require__.d(__webpack_exports__,"左侧与右侧锁列",(function(){return 左侧与右侧锁列})),__webpack_require__.d(__webpack_exports__,"表头吸顶_Sticky_Header",(function(){return 表头吸顶_Sticky_Header})),__webpack_require__.d(__webpack_exports__,"表头props",(function(){return 表头props})),__webpack_require__.d(__webpack_exports__,"表格吸底_Sticky_Bottom",(function(){return 表格吸底_Sticky_Bottom})),__webpack_require__.d(__webpack_exports__,"列分组",(function(){return 列分组})),__webpack_require__.d(__webpack_exports__,"单元格合并",(function(){return 单元格合并})),__webpack_require__.d(__webpack_exports__,"虚拟滚动与单元格合并",(function(){return 虚拟滚动与单元格合并})),__webpack_require__.d(__webpack_exports__,"自定义单元格样式",(function(){return 自定义单元格样式})),__webpack_require__.d(__webpack_exports__,"自定义表格行props",(function(){return 自定义表格行props})),__webpack_require__.d(__webpack_exports__,"Props组合",(function(){return Props组合}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(33),__webpack_require__(498),__webpack_require__(65),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(32),__webpack_require__(23),__webpack_require__(499),__webpack_require__(28),__webpack_require__(10),__webpack_require__(103),__webpack_require__(7),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(66),__webpack_require__(24);var _alifd_next__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(53),_alifd_next__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__(927),_alifd_next__WEBPACK_IMPORTED_MODULE_23__=__webpack_require__(371),ali_react_table__WEBPACK_IMPORTED_MODULE_24__=__webpack_require__(55),react__WEBPACK_IMPORTED_MODULE_25__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_25___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_25__),styled_components__WEBPACK_IMPORTED_MODULE_26__=__webpack_require__(40),_assets_format__WEBPACK_IMPORTED_MODULE_27__=__webpack_require__(12),_assets_fusion_style__WEBPACK_IMPORTED_MODULE_28__=__webpack_require__(63),_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__=__webpack_require__(18);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={title:"表格 / 表格示例",parameters:{storySource:{source:"import { Button, Checkbox, Notification } from '@alifd/next'\nimport { ArtColumn, BaseTable, SpanRect } from 'ali-react-table'\nimport React, { useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { amount, time } from '../assets/format'\nimport { FusionStyles } from '../assets/fusion-style'\nimport { cols, testProvColumns, useCityDataSource, useProvinceDataSource } from '../assets/ncov19-assets'\n\nexport default {\n  title: '表格 / 表格示例',\n  parameters: {\n    docs: {\n      page() {\n        return (\n          <div\n            style={{\n              margin: 'auto',\n              background: 'rgba(0, 0, 0, 0.03)',\n              borderRadius: 10,\n              padding: 30,\n            }}\n          >\n            示例过多，docs page 已在此处禁用，请在页面上方切换到「Canvas」模式\n          </div>\n        )\n      },\n    },\n  },\n}\n\nexport function 基本用法() {\n  const dataSource = [\n    { prov: '湖北省', confirmed: 54406, cured: 4793, dead: 1457, t: '2020-02-15 19:52:02' },\n    { prov: '广东省', confirmed: 1294, cured: 409, dead: 2, t: '2020-02-15 19:52:02' },\n    { prov: '河南省', confirmed: 1212, cured: 390, dead: 13, t: '2020-02-15 19:52:02' },\n    { prov: '浙江省', confirmed: 1162, cured: 428, dead: 0, t: '2020-02-15 19:52:02' },\n    { prov: '湖南省', confirmed: 1001, cured: 417, dead: 2, t: '2020-02-15 19:52:02' },\n  ]\n\n  const columns: ArtColumn[] = [\n    { code: 'prov', name: '省份', width: 150 },\n    { code: 'confirmed', name: '确诊', width: 100, align: 'right' },\n    { code: 'cured', name: '治愈', width: 100, align: 'right' },\n    { code: 'dead', name: '死亡', width: 100, align: 'right' },\n    { code: 't', name: '最后更新时间', width: 180 },\n  ]\n  return <BaseTable dataSource={dataSource} columns={columns} />\n}\n\nexport function 自定义表格样式() {\n  const { isLoading, dataSource } = useProvinceDataSource()\n  return (\n    <BaseTable\n      style={{\n        '--cell-border-horizontal': '1px solid #f0f0f0',\n        '--cell-border-vertical': 'none',\n        '--header-bgcolor': '#fafafa',\n        '--header-cell-border': 'none',\n        '--header-row-height': '40px',\n      }}\n      isLoading={isLoading}\n      dataSource={dataSource.slice(0, 6)}\n      columns={testProvColumns}\n    />\n  )\n}\n\nconst ZebraBaseTable: typeof BaseTable = styled(BaseTable)`\n  .art-table-row.even {\n    --bgcolor: #f2f2f2;\n  }\n  .art-table-row.odd {\n    --bgcolor: white;\n  }\n` as any\n\nexport function 自定义表格样式2() {\n  /*\n  import styled from 'styled-components'\n  import { BaseTable } from 'ali-react-table'\n\n  const ZebraBaseTable = styled(BaseTable)`\n    --cell-border-vertical: none;\n    .art-table-row.even {\n      --bgcolor: #f2f2f2;\n    }\n    .art-table-row.odd {\n      --bgcolor: white;\n    }\n   */\n  const { isLoading, dataSource } = useProvinceDataSource()\n  return <ZebraBaseTable isLoading={isLoading} dataSource={dataSource.slice(0, 10)} columns={testProvColumns} />\n}\n\nexport function 默认列宽() {\n  const { isLoading, dataSource } = useProvinceDataSource()\n  const columns: ArtColumn[] = [\n    { code: 'provinceName', name: '省份' },\n    { code: 'confirmedCount', name: '确诊', render: amount, align: 'right' },\n    { code: 'suspectedCount', name: '疑似', render: amount, align: 'right' },\n    { code: 'curedCount', name: '治愈', render: amount, align: 'right' },\n    { code: 'deadCount', name: '死亡', render: amount, align: 'right' },\n    { code: 'updateTime', name: '最后更新时间', render: time },\n  ]\n  return (\n    <BaseTable\n      defaultColumnWidth={200}\n      isLoading={isLoading}\n      dataSource={dataSource.slice(0, 5)}\n      columns={[...columns, ...columns]}\n    />\n  )\n}\n\nexport function 左侧锁列() {\n  const { dataSource, isLoading } = useProvinceDataSource()\n\n  return (\n    <BaseTable\n      style={{ width: 500, height: 300, overflow: 'auto' }}\n      useOuterBorder\n      isLoading={isLoading}\n      dataSource={dataSource}\n      columns={[\n        { lock: true, code: 'provinceName', name: '省份', width: 150 },\n        { code: 'confirmedCount', name: '确诊', width: 100, render: amount, align: 'right' },\n        { code: 'suspectedCount', name: '疑似', width: 100, render: amount, align: 'right' },\n        { code: 'curedCount', name: '治愈', width: 100, render: amount, align: 'right' },\n        { code: 'deadCount', name: '死亡', width: 100, render: amount, align: 'right' },\n        { code: 'updateTime', name: '最后更新时间', width: 180, render: time },\n      ]}\n    />\n  )\n}\n\nexport function 左侧与右侧锁列() {\n  const { dataSource, isLoading } = useCityDataSource()\n\n  // 注意为表格设置 style.overflow = 'auto' 之后，必须同时设置 style.height 或 style.maxHeight\n  return (\n    <BaseTable\n      style={{ width: 600, height: 400, overflow: 'auto' }}\n      isLoading={isLoading}\n      useOuterBorder\n      dataSource={dataSource.flatMap((d) => d.children)}\n      columns={[cols.lockProvCol, cols.cityName, ...cols.indCols, cols.lockTimeCol]}\n    />\n  )\n}\n\nexport function 表头吸顶_Sticky_Header() {\n  const { dataSource, isLoading } = useProvinceDataSource()\n\n  return (\n    <div>\n      <div\n        style={{\n          position: 'sticky',\n          top: 0,\n          height: 48,\n          border: '1px solid #ccc',\n          zIndex: 30,\n          background: 'white',\n          color: '#333',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <div>表格操作栏，这里适合放置一些功能按钮</div>\n      </div>\n      <BaseTable isStickyHead stickyTop={48} isLoading={isLoading} dataSource={dataSource} columns={testProvColumns} />\n    </div>\n  )\n}\n\nexport function 表头props() {\n  // 表头 props 好像也就改个样式 实用一点...\n\n  const { dataSource, isLoading } = useProvinceDataSource()\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      dataSource={dataSource.slice(0, 5)}\n      columns={[\n        {\n          code: 'provinceName',\n          name: '省份',\n          width: 150,\n          headerCellProps: {\n            style: { color: 'white', fontSize: 20, background: '#1ea7fd' },\n          },\n        },\n        ...cols.indCols,\n        {\n          code: 'updateTime',\n          name: '最后更新时间',\n          width: 180,\n          render: time,\n          headerCellProps: {\n            style: {\n              letterSpacing: 10,\n              fontSize: 20,\n              fontWeight: 'bold',\n              textAlign: 'center',\n            },\n          },\n        },\n      ]}\n    />\n  )\n}\n\nexport function 表格吸底_Sticky_Bottom() {\n  const { dataSource, isLoading } = useProvinceDataSource()\n\n  return (\n    <div>\n      <BaseTable\n        isStickyHead\n        stickyBottom={48}\n        isLoading={isLoading}\n        dataSource={dataSource}\n        columns={testProvColumns}\n      />\n      <div\n        style={{\n          position: 'sticky',\n          bottom: 0,\n          height: 48,\n          border: '1px solid #ccc',\n          zIndex: 30,\n          background: 'white',\n          color: '#333',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <div>表格底部操作栏，这里可以放置分页控件</div>\n      </div>\n      <div style={{ border: '1px solid #ccc', height: '30vh', marginTop: 32 }}>OTHER CONTENT</div>\n    </div>\n  )\n}\n\nexport function 列分组() {\n  const { dataSource, isLoading } = useProvinceDataSource()\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      dataSource={dataSource}\n      columns={[\n        {\n          name: '基本信息',\n          lock: true,\n          children: [cols.provinceName, cols.updateTime],\n        },\n        {\n          name: '指标分组',\n          children: [\n            { name: '指标分组1', children: [cols.confirmedCount, cols.suspectedCount] },\n            { name: '指标分组2', children: [cols.curedCount, cols.deadCount] },\n          ],\n        },\n      ]}\n    />\n  )\n}\n\nexport function 单元格合并() {\n  const dataSource = [\n    { prov: '湖北省', confirmed: 54406, cured: 4793, t: '2020-02-15 19:52:02' },\n    { prov: '广东省', confirmed: 1294, cured: 409, t: '2020-02-15 19:52:02' },\n    { prov: '河南省', confirmed: 1212, cured: 390, t: '2020-02-15 19:52:02' },\n    { prov: '浙江省', confirmed: 1162, cured: 428, t: '2020-02-15 19:52:02' },\n    { prov: '湖南省', confirmed: 1001, cured: 417, t: '2020-02-15 19:52:02' },\n  ]\n\n  const columns: ArtColumn[] = [\n    { code: 'prov', name: '省份' },\n    { code: 'confirmed', name: '确诊', align: 'right' },\n    { code: 'cured', name: '治愈', align: 'right' },\n    {\n      code: 't',\n      name: '最后更新时间',\n      getCellProps(value: any, record: any, rowIndex: number) {\n        if (rowIndex === 1) {\n          return { rowSpan: 2, colSpan: 1 }\n        }\n      },\n    },\n  ]\n  return <BaseTable defaultColumnWidth={100} dataSource={dataSource} columns={columns} />\n}\n\nexport function 虚拟滚动与单元格合并() {\n  const { dataSource, isLoading } = useCityDataSource()\n\n  let lastTop = 0\n  const rectMap = new Map<string, SpanRect>()\n  dataSource.forEach((d) => {\n    rectMap.set(d.provinceName, {\n      left: 0,\n      right: 1,\n      top: lastTop,\n      bottom: lastTop + d.children.length,\n    })\n    lastTop += d.children.length\n  })\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      dataSource={dataSource.slice(0, 3).flatMap((d) => d.children)}\n      useVirtual={true}\n      columns={[\n        {\n          ...cols.lockProvCol,\n          getSpanRect(value: any) {\n            return rectMap.get(value)\n          },\n        },\n        cols.lockCityCol,\n        cols.confirmedCount,\n        cols.suspectedCount,\n        cols.curedCount,\n        cols.deadCount,\n        cols.updateTime,\n      ]}\n    />\n  )\n}\n\nexport function 自定义单元格样式() {\n  const { isLoading, dataSource } = useProvinceDataSource()\n\n  const tableRef = useRef<BaseTable>()\n\n  const columns: ArtColumn[] = [\n    { code: 'provinceName', name: '省份', width: 150 },\n    {\n      code: 'confirmedCount',\n      name: '确诊',\n      width: 100,\n      render(v: number) {\n        const danger = v > 1000\n        const safe = v < 100\n        return (\n          <div\n            style={{\n              color: danger ? 'red' : safe ? 'green' : 'unset',\n              fontWeight: danger || safe ? 'bold' : 'normal',\n            }}\n          >\n            {amount(v)}\n          </div>\n        )\n      },\n      align: 'right',\n    },\n    { code: 'suspectedCount', name: '疑似', width: 100, render: amount, align: 'right' },\n    {\n      code: 'curedCount',\n      name: '治愈',\n      width: 100,\n      render: amount,\n      align: 'right',\n      getCellProps(value: any, record: any) {\n        if (record.curedCount / record.confirmedCount > 0.3) {\n          return { style: { background: '#129835', color: 'white', fontWeight: 'bold' } }\n        }\n      },\n    },\n    {\n      code: 'deadCount',\n      name: '死亡',\n      width: 100,\n      render: amount,\n      align: 'right',\n      getCellProps(value: any) {\n        const danger = value > 0\n        if (danger) {\n          return { style: { background: '#981c12', color: 'white', fontWeight: 'bold' } }\n        }\n      },\n    },\n    { code: 'updateTime', name: '最后更新时间', width: 180, render: time },\n  ]\n  return (\n    <div>\n      <FusionStyles />\n      <div style={{ display: 'flex' }}>\n        <div>\n          <h1 style={{ marginBottom: 6 }}>样式说明</h1>\n          <p style={{ margin: '6px 0' }}>红色字体：确诊 &gt; 1000</p>\n          <p style={{ margin: '6px 0' }}>绿色背景：治愈 / 确诊 &gt; 0.3</p>\n          <p style={{ margin: '6px 0' }}>红色背景：死亡 &gt; 0</p>\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            marginLeft: 32,\n            marginBottom: 6,\n            alignSelf: 'flex-end',\n          }}\n        >\n          <Button\n            size=\"small\"\n            onClick={() => {\n              navigator.clipboard\n                .writeText(tableRef.current.getDoms().artTable.outerHTML)\n                .then(() => {\n                  Notification.open({ content: '复制成功' })\n                })\n                .catch(() => {\n                  Notification.error({ content: '复制失败' })\n                })\n            }}\n          >\n            复制表格\n          </Button>\n\n          <span style={{ marginLeft: 8 }}>(复制之后可以在 Excel 中进行粘贴)</span>\n        </div>\n      </div>\n\n      <BaseTable ref={tableRef} isLoading={isLoading} dataSource={dataSource} columns={columns} />\n    </div>\n  )\n}\n\nexport function 自定义表格行props() {\n  const { isLoading, dataSource } = useProvinceDataSource()\n\n  const [lastClickRowIndex, setLastClickRowIndex] = useState(2)\n\n  return (\n    <BaseTable\n      style={{\n        '--bgcolor': 'transparent',\n      }}\n      isLoading={isLoading}\n      dataSource={dataSource.slice(0, 6)}\n      columns={testProvColumns}\n      getRowProps={(record, rowIndex) => {\n        return {\n          style:\n            rowIndex === lastClickRowIndex\n              ? {\n                  outlineOffset: -2,\n                  outline: '2px solid #333',\n                  background: '#ddd',\n                }\n              : undefined,\n          onClick() {\n            setLastClickRowIndex(rowIndex)\n          },\n        }\n      }}\n    />\n  )\n}\n\nconst Row = styled.div`\n  height: 36px;\n  display: flex;\n  align-items: center;\n\n  > span {\n    width: 100px;\n  }\n`\n\nexport function Props组合() {\n  const [config, setConfig] = useState({\n    hasHeader: true,\n    isLoading: false,\n    useOuterBorder: false,\n    dataSize: 10,\n    height: 'auto' as 'auto' | number,\n  })\n\n  const { isLoading, dataSource } = useProvinceDataSource()\n\n  return (\n    <div>\n      <FusionStyles />\n      <div style={{ lineHeight: 1.5 }}>\n        hasHeader 表示表头是否展示；\n        <br />\n        isLoading 表示表格数据是否在加载中；\n        <br />\n        useOuterBorder 表示是否使用表格最外层的 div 的边框来代替单元格的外边框\n      </div>\n      <Row>\n        <Checkbox\n          checked={config.hasHeader}\n          onChange={(v) => {\n            setConfig({ ...config, hasHeader: v })\n          }}\n        >\n          hasHeader\n        </Checkbox>\n        <Checkbox\n          style={{ marginLeft: 32 }}\n          checked={config.isLoading}\n          onChange={(v) => {\n            setConfig({ ...config, isLoading: v })\n          }}\n        >\n          isLoading\n        </Checkbox>\n        <Checkbox\n          style={{ marginLeft: 32 }}\n          checked={config.useOuterBorder}\n          onChange={(v) => {\n            setConfig({ ...config, useOuterBorder: v })\n          }}\n        >\n          useOuterBorder\n        </Checkbox>\n      </Row>\n\n      <Row>\n        <span>data size:</span>\n        <Button.Group>\n          {[0, 3, 10].map((size) => (\n            <Button\n              key={size}\n              type={config.dataSize === size ? 'primary' : 'normal'}\n              onClick={() => {\n                setConfig({ ...config, dataSize: size })\n              }}\n            >\n              {size}\n            </Button>\n          ))}\n          <Button\n            type={isFinite(config.dataSize) ? 'normal' : 'primary'}\n            onClick={() => {\n              setConfig({ ...config, dataSize: Infinity })\n            }}\n          >\n            不限\n          </Button>\n        </Button.Group>\n      </Row>\n      <Row>\n        <span>table height:</span>\n        <Button.Group>\n          {['auto', 200, 400, 600].map((h) => (\n            <Button\n              key={h}\n              type={config.height === h ? 'primary' : 'normal'}\n              onClick={() => {\n                setConfig({ ...config, height: h as any })\n              }}\n            >\n              {h}\n            </Button>\n          ))}\n        </Button.Group>\n      </Row>\n      <p style={{ color: '#353640' }}>\n        tips: 为表格设置具体的高度之后记得添加 style.overflow=auto，不然高度仍然会被内容撑开.\n      </p>\n      <BaseTable\n        hasHeader={config.hasHeader}\n        isLoading={isLoading || config.isLoading}\n        useOuterBorder={config.useOuterBorder}\n        style={{\n          height: config.height,\n          overflow: config.height === 'auto' ? 'visible' : 'auto',\n          marginTop: 16,\n        }}\n        dataSource={dataSource.slice(0, config.dataSize)}\n        columns={testProvColumns}\n      />\n    </div>\n  )\n}\n",locationsMap:{"基本用法":{startLoc:{col:7,line:31},endLoc:{col:1,line:48},startBody:{col:7,line:31},endBody:{col:1,line:48}},"自定义表格样式":{startLoc:{col:7,line:50},endLoc:{col:1,line:66},startBody:{col:7,line:50},endBody:{col:1,line:66}},"自定义表格样式-2":{startLoc:{col:7,line:77},endLoc:{col:1,line:93},startBody:{col:7,line:77},endBody:{col:1,line:93}},"默认列宽":{startLoc:{col:7,line:95},endLoc:{col:1,line:113},startBody:{col:7,line:95},endBody:{col:1,line:113}},"左侧锁列":{startLoc:{col:7,line:115},endLoc:{col:1,line:134},startBody:{col:7,line:115},endBody:{col:1,line:134}},"左侧与右侧锁列":{startLoc:{col:7,line:136},endLoc:{col:1,line:149},startBody:{col:7,line:136},endBody:{col:1,line:149}},"表头吸顶-sticky-header":{startLoc:{col:7,line:151},endLoc:{col:1,line:175},startBody:{col:7,line:151},endBody:{col:1,line:175}},"表头props":{startLoc:{col:7,line:177},endLoc:{col:1,line:213},startBody:{col:7,line:177},endBody:{col:1,line:213}},"表格吸底-sticky-bottom":{startLoc:{col:7,line:215},endLoc:{col:1,line:246},startBody:{col:7,line:215},endBody:{col:1,line:246}},"列分组":{startLoc:{col:7,line:248},endLoc:{col:1,line:271},startBody:{col:7,line:248},endBody:{col:1,line:271}},"单元格合并":{startLoc:{col:7,line:273},endLoc:{col:1,line:297},startBody:{col:7,line:273},endBody:{col:1,line:297}},"虚拟滚动与单元格合并":{startLoc:{col:7,line:299},endLoc:{col:1,line:335},startBody:{col:7,line:299},endBody:{col:1,line:335}},"自定义单元格样式":{startLoc:{col:7,line:337},endLoc:{col:1,line:434},startBody:{col:7,line:337},endBody:{col:1,line:434}},"自定义表格行props":{startLoc:{col:7,line:436},endLoc:{col:1,line:466},startBody:{col:7,line:436},endBody:{col:1,line:466}},"props组合":{startLoc:{col:7,line:478},endLoc:{col:1,line:585},startBody:{col:7,line:478},endBody:{col:1,line:585}}}},docs:{page:function page(){return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("div",{style:{margin:"auto",background:"rgba(0, 0, 0, 0.03)",borderRadius:10,padding:30}},"示例过多，docs page 已在此处禁用，请在页面上方切换到「Canvas」模式")}}}};var 基本用法=function 基本用法(){return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_24__.a,{dataSource:[{prov:"湖北省",confirmed:54406,cured:4793,dead:1457,t:"2020-02-15 19:52:02"},{prov:"广东省",confirmed:1294,cured:409,dead:2,t:"2020-02-15 19:52:02"},{prov:"河南省",confirmed:1212,cured:390,dead:13,t:"2020-02-15 19:52:02"},{prov:"浙江省",confirmed:1162,cured:428,dead:0,t:"2020-02-15 19:52:02"},{prov:"湖南省",confirmed:1001,cured:417,dead:2,t:"2020-02-15 19:52:02"}],columns:[{code:"prov",name:"省份",width:150},{code:"confirmed",name:"确诊",width:100,align:"right"},{code:"cured",name:"治愈",width:100,align:"right"},{code:"dead",name:"死亡",width:100,align:"right"},{code:"t",name:"最后更新时间",width:180}]})};基本用法.displayName="基本用法";var 自定义表格样式=function 自定义表格样式(){var _useProvinceDataSourc=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.e)(),isLoading=_useProvinceDataSourc.isLoading,dataSource=_useProvinceDataSourc.dataSource;return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_24__.a,{style:{"--cell-border-horizontal":"1px solid #f0f0f0","--cell-border-vertical":"none","--header-bgcolor":"#fafafa","--header-cell-border":"none","--header-row-height":"40px"},isLoading:isLoading,dataSource:dataSource.slice(0,6),columns:_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.b})};自定义表格样式.displayName="自定义表格样式";var ZebraBaseTable=Object(styled_components__WEBPACK_IMPORTED_MODULE_26__.b)(ali_react_table__WEBPACK_IMPORTED_MODULE_24__.a).withConfig({displayName:"tablestories__ZebraBaseTable",componentId:"ughehb-0"})([".art-table-row.even{--bgcolor:#f2f2f2;}.art-table-row.odd{--bgcolor:white;}"]),自定义表格样式2=function 自定义表格样式2(){var _useProvinceDataSourc2=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.e)(),isLoading=_useProvinceDataSourc2.isLoading,dataSource=_useProvinceDataSourc2.dataSource;return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(ZebraBaseTable,{isLoading:isLoading,dataSource:dataSource.slice(0,10),columns:_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.b})};自定义表格样式2.displayName="自定义表格样式2";var 默认列宽=function 默认列宽(){var _useProvinceDataSourc3=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.e)(),isLoading=_useProvinceDataSourc3.isLoading,dataSource=_useProvinceDataSourc3.dataSource,columns=[{code:"provinceName",name:"省份"},{code:"confirmedCount",name:"确诊",render:_assets_format__WEBPACK_IMPORTED_MODULE_27__.a,align:"right"},{code:"suspectedCount",name:"疑似",render:_assets_format__WEBPACK_IMPORTED_MODULE_27__.a,align:"right"},{code:"curedCount",name:"治愈",render:_assets_format__WEBPACK_IMPORTED_MODULE_27__.a,align:"right"},{code:"deadCount",name:"死亡",render:_assets_format__WEBPACK_IMPORTED_MODULE_27__.a,align:"right"},{code:"updateTime",name:"最后更新时间",render:_assets_format__WEBPACK_IMPORTED_MODULE_27__.d}];return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_24__.a,{defaultColumnWidth:200,isLoading:isLoading,dataSource:dataSource.slice(0,5),columns:[].concat(columns,columns)})};默认列宽.displayName="默认列宽";var 左侧锁列=function 左侧锁列(){var _useProvinceDataSourc4=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.e)(),dataSource=_useProvinceDataSourc4.dataSource,isLoading=_useProvinceDataSourc4.isLoading;return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_24__.a,{style:{width:500,height:300,overflow:"auto"},useOuterBorder:!0,isLoading:isLoading,dataSource:dataSource,columns:[{lock:!0,code:"provinceName",name:"省份",width:150},{code:"confirmedCount",name:"确诊",width:100,render:_assets_format__WEBPACK_IMPORTED_MODULE_27__.a,align:"right"},{code:"suspectedCount",name:"疑似",width:100,render:_assets_format__WEBPACK_IMPORTED_MODULE_27__.a,align:"right"},{code:"curedCount",name:"治愈",width:100,render:_assets_format__WEBPACK_IMPORTED_MODULE_27__.a,align:"right"},{code:"deadCount",name:"死亡",width:100,render:_assets_format__WEBPACK_IMPORTED_MODULE_27__.a,align:"right"},{code:"updateTime",name:"最后更新时间",width:180,render:_assets_format__WEBPACK_IMPORTED_MODULE_27__.d}]})};左侧锁列.displayName="左侧锁列";var 左侧与右侧锁列=function 左侧与右侧锁列(){var _useCityDataSource=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.d)(),dataSource=_useCityDataSource.dataSource,isLoading=_useCityDataSource.isLoading;return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_24__.a,{style:{width:600,height:400,overflow:"auto"},isLoading:isLoading,useOuterBorder:!0,dataSource:dataSource.flatMap((function(d){return d.children})),columns:[_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.lockProvCol,_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.cityName].concat(_toConsumableArray(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.indCols),[_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.lockTimeCol])})};左侧与右侧锁列.displayName="左侧与右侧锁列";var 表头吸顶_Sticky_Header=function 表头吸顶_Sticky_Header(){var _useProvinceDataSourc5=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.e)(),dataSource=_useProvinceDataSourc5.dataSource,isLoading=_useProvinceDataSourc5.isLoading;return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("div",{style:{position:"sticky",top:0,height:48,border:"1px solid #ccc",zIndex:30,background:"white",color:"#333",display:"flex",alignItems:"center",justifyContent:"center"}},react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("div",null,"表格操作栏，这里适合放置一些功能按钮")),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_24__.a,{isStickyHead:!0,stickyTop:48,isLoading:isLoading,dataSource:dataSource,columns:_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.b}))};表头吸顶_Sticky_Header.displayName="表头吸顶_Sticky_Header";var 表头props=function 表头props(){var _useProvinceDataSourc6=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.e)(),dataSource=_useProvinceDataSourc6.dataSource,isLoading=_useProvinceDataSourc6.isLoading;return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_24__.a,{isLoading:isLoading,dataSource:dataSource.slice(0,5),columns:[{code:"provinceName",name:"省份",width:150,headerCellProps:{style:{color:"white",fontSize:20,background:"#1ea7fd"}}}].concat(_toConsumableArray(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.indCols),[{code:"updateTime",name:"最后更新时间",width:180,render:_assets_format__WEBPACK_IMPORTED_MODULE_27__.d,headerCellProps:{style:{letterSpacing:10,fontSize:20,fontWeight:"bold",textAlign:"center"}}}])})};表头props.displayName="表头props";var 表格吸底_Sticky_Bottom=function 表格吸底_Sticky_Bottom(){var _useProvinceDataSourc7=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.e)(),dataSource=_useProvinceDataSourc7.dataSource,isLoading=_useProvinceDataSourc7.isLoading;return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_24__.a,{isStickyHead:!0,stickyBottom:48,isLoading:isLoading,dataSource:dataSource,columns:_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.b}),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("div",{style:{position:"sticky",bottom:0,height:48,border:"1px solid #ccc",zIndex:30,background:"white",color:"#333",display:"flex",alignItems:"center",justifyContent:"center"}},react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("div",null,"表格底部操作栏，这里可以放置分页控件")),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("div",{style:{border:"1px solid #ccc",height:"30vh",marginTop:32}},"OTHER CONTENT"))};表格吸底_Sticky_Bottom.displayName="表格吸底_Sticky_Bottom";var 列分组=function 列分组(){var _useProvinceDataSourc8=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.e)(),dataSource=_useProvinceDataSourc8.dataSource,isLoading=_useProvinceDataSourc8.isLoading;return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_24__.a,{isLoading:isLoading,dataSource:dataSource,columns:[{name:"基本信息",lock:!0,children:[_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.provinceName,_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.updateTime]},{name:"指标分组",children:[{name:"指标分组1",children:[_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.confirmedCount,_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.suspectedCount]},{name:"指标分组2",children:[_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.curedCount,_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.deadCount]}]}]})};列分组.displayName="列分组";var 单元格合并=function 单元格合并(){return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_24__.a,{defaultColumnWidth:100,dataSource:[{prov:"湖北省",confirmed:54406,cured:4793,t:"2020-02-15 19:52:02"},{prov:"广东省",confirmed:1294,cured:409,t:"2020-02-15 19:52:02"},{prov:"河南省",confirmed:1212,cured:390,t:"2020-02-15 19:52:02"},{prov:"浙江省",confirmed:1162,cured:428,t:"2020-02-15 19:52:02"},{prov:"湖南省",confirmed:1001,cured:417,t:"2020-02-15 19:52:02"}],columns:[{code:"prov",name:"省份"},{code:"confirmed",name:"确诊",align:"right"},{code:"cured",name:"治愈",align:"right"},{code:"t",name:"最后更新时间",getCellProps:function getCellProps(value,record,rowIndex){if(1===rowIndex)return{rowSpan:2,colSpan:1}}}]})};单元格合并.displayName="单元格合并";var 虚拟滚动与单元格合并=function 虚拟滚动与单元格合并(){var _useCityDataSource2=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.d)(),dataSource=_useCityDataSource2.dataSource,isLoading=_useCityDataSource2.isLoading,lastTop=0,rectMap=new Map;return dataSource.forEach((function(d){rectMap.set(d.provinceName,{left:0,right:1,top:lastTop,bottom:lastTop+d.children.length}),lastTop+=d.children.length})),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_24__.a,{isLoading:isLoading,dataSource:dataSource.slice(0,3).flatMap((function(d){return d.children})),useVirtual:!0,columns:[Object.assign({},_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.lockProvCol,{getSpanRect:function getSpanRect(value){return rectMap.get(value)}}),_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.lockCityCol,_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.confirmedCount,_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.suspectedCount,_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.curedCount,_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.deadCount,_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.a.updateTime]})};虚拟滚动与单元格合并.displayName="虚拟滚动与单元格合并";var 自定义单元格样式=function 自定义单元格样式(){var _useProvinceDataSourc9=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.e)(),isLoading=_useProvinceDataSourc9.isLoading,dataSource=_useProvinceDataSourc9.dataSource,tableRef=Object(react__WEBPACK_IMPORTED_MODULE_25__.useRef)(),columns=[{code:"provinceName",name:"省份",width:150},{code:"confirmedCount",name:"确诊",width:100,render:function render(v){var danger=v>1e3,safe=v<100;return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("div",{style:{color:danger?"red":safe?"green":"unset",fontWeight:danger||safe?"bold":"normal"}},Object(_assets_format__WEBPACK_IMPORTED_MODULE_27__.a)(v))},align:"right"},{code:"suspectedCount",name:"疑似",width:100,render:_assets_format__WEBPACK_IMPORTED_MODULE_27__.a,align:"right"},{code:"curedCount",name:"治愈",width:100,render:_assets_format__WEBPACK_IMPORTED_MODULE_27__.a,align:"right",getCellProps:function getCellProps(value,record){if(record.curedCount/record.confirmedCount>.3)return{style:{background:"#129835",color:"white",fontWeight:"bold"}}}},{code:"deadCount",name:"死亡",width:100,render:_assets_format__WEBPACK_IMPORTED_MODULE_27__.a,align:"right",getCellProps:function getCellProps(value){if(value>0)return{style:{background:"#981c12",color:"white",fontWeight:"bold"}}}},{code:"updateTime",name:"最后更新时间",width:180,render:_assets_format__WEBPACK_IMPORTED_MODULE_27__.d}];return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(_assets_fusion_style__WEBPACK_IMPORTED_MODULE_28__.a,null),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("div",{style:{display:"flex"}},react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("h1",{style:{marginBottom:6}},"样式说明"),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("p",{style:{margin:"6px 0"}},"红色字体：确诊 > 1000"),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("p",{style:{margin:"6px 0"}},"绿色背景：治愈 / 确诊 > 0.3"),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("p",{style:{margin:"6px 0"}},"红色背景：死亡 > 0")),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("div",{style:{display:"flex",alignItems:"center",marginLeft:32,marginBottom:6,alignSelf:"flex-end"}},react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_21__.a,{size:"small",onClick:function onClick(){navigator.clipboard.writeText(tableRef.current.getDoms().artTable.outerHTML).then((function(){_alifd_next__WEBPACK_IMPORTED_MODULE_22__.a.open({content:"复制成功"})})).catch((function(){_alifd_next__WEBPACK_IMPORTED_MODULE_22__.a.error({content:"复制失败"})}))}},"复制表格"),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("span",{style:{marginLeft:8}},"(复制之后可以在 Excel 中进行粘贴)"))),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_24__.a,{ref:tableRef,isLoading:isLoading,dataSource:dataSource,columns:columns}))};自定义单元格样式.displayName="自定义单元格样式";var 自定义表格行props=function 自定义表格行props(){var _useProvinceDataSourc10=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.e)(),isLoading=_useProvinceDataSourc10.isLoading,dataSource=_useProvinceDataSourc10.dataSource,_useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_25__.useState)(2),2),lastClickRowIndex=_useState2[0],setLastClickRowIndex=_useState2[1];return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_24__.a,{style:{"--bgcolor":"transparent"},isLoading:isLoading,dataSource:dataSource.slice(0,6),columns:_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.b,getRowProps:function getRowProps(record,rowIndex){return{style:rowIndex===lastClickRowIndex?{outlineOffset:-2,outline:"2px solid #333",background:"#ddd"}:void 0,onClick:function onClick(){setLastClickRowIndex(rowIndex)}}}})};自定义表格行props.displayName="自定义表格行props";var Row=styled_components__WEBPACK_IMPORTED_MODULE_26__.b.div.withConfig({displayName:"tablestories__Row",componentId:"ughehb-1"})(["height:36px;display:flex;align-items:center;> span{width:100px;}"]),Props组合=function Props组合(){var _useState4=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_25__.useState)({hasHeader:!0,isLoading:!1,useOuterBorder:!1,dataSize:10,height:"auto"}),2),config=_useState4[0],setConfig=_useState4[1],_useProvinceDataSourc11=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.e)(),isLoading=_useProvinceDataSourc11.isLoading,dataSource=_useProvinceDataSourc11.dataSource;return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(_assets_fusion_style__WEBPACK_IMPORTED_MODULE_28__.a,null),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("div",{style:{lineHeight:1.5}},"hasHeader 表示表头是否展示；",react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("br",null),"isLoading 表示表格数据是否在加载中；",react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("br",null),"useOuterBorder 表示是否使用表格最外层的 div 的边框来代替单元格的外边框"),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(Row,null,react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_23__.a,{checked:config.hasHeader,onChange:function onChange(v){setConfig(Object.assign({},config,{hasHeader:v}))}},"hasHeader"),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_23__.a,{style:{marginLeft:32},checked:config.isLoading,onChange:function onChange(v){setConfig(Object.assign({},config,{isLoading:v}))}},"isLoading"),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_23__.a,{style:{marginLeft:32},checked:config.useOuterBorder,onChange:function onChange(v){setConfig(Object.assign({},config,{useOuterBorder:v}))}},"useOuterBorder")),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(Row,null,react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("span",null,"data size:"),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_21__.a.Group,null,[0,3,10].map((function(size){return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_21__.a,{key:size,type:config.dataSize===size?"primary":"normal",onClick:function onClick(){setConfig(Object.assign({},config,{dataSize:size}))}},size)})),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_21__.a,{type:isFinite(config.dataSize)?"normal":"primary",onClick:function onClick(){setConfig(Object.assign({},config,{dataSize:1/0}))}},"不限"))),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(Row,null,react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("span",null,"table height:"),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_21__.a.Group,null,["auto",200,400,600].map((function(h){return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_21__.a,{key:h,type:config.height===h?"primary":"normal",onClick:function onClick(){setConfig(Object.assign({},config,{height:h}))}},h)})))),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement("p",{style:{color:"#353640"}},"tips: 为表格设置具体的高度之后记得添加 style.overflow=auto，不然高度仍然会被内容撑开."),react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_24__.a,{hasHeader:config.hasHeader,isLoading:isLoading||config.isLoading,useOuterBorder:config.useOuterBorder,style:{height:config.height,overflow:"auto"===config.height?"visible":"auto",marginTop:16},dataSource:dataSource.slice(0,config.dataSize),columns:_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_29__.b}))};Props组合.displayName="Props组合",基本用法.parameters=Object.assign({storySource:{source:"function 基本用法() {\n  const dataSource = [\n    { prov: '湖北省', confirmed: 54406, cured: 4793, dead: 1457, t: '2020-02-15 19:52:02' },\n    { prov: '广东省', confirmed: 1294, cured: 409, dead: 2, t: '2020-02-15 19:52:02' },\n    { prov: '河南省', confirmed: 1212, cured: 390, dead: 13, t: '2020-02-15 19:52:02' },\n    { prov: '浙江省', confirmed: 1162, cured: 428, dead: 0, t: '2020-02-15 19:52:02' },\n    { prov: '湖南省', confirmed: 1001, cured: 417, dead: 2, t: '2020-02-15 19:52:02' },\n  ]\n\n  const columns: ArtColumn[] = [\n    { code: 'prov', name: '省份', width: 150 },\n    { code: 'confirmed', name: '确诊', width: 100, align: 'right' },\n    { code: 'cured', name: '治愈', width: 100, align: 'right' },\n    { code: 'dead', name: '死亡', width: 100, align: 'right' },\n    { code: 't', name: '最后更新时间', width: 180 },\n  ]\n  return <BaseTable dataSource={dataSource} columns={columns} />\n}"}},基本用法.parameters),自定义表格样式.parameters=Object.assign({storySource:{source:"function 自定义表格样式() {\n  const { isLoading, dataSource } = useProvinceDataSource()\n  return (\n    <BaseTable\n      style={{\n        '--cell-border-horizontal': '1px solid #f0f0f0',\n        '--cell-border-vertical': 'none',\n        '--header-bgcolor': '#fafafa',\n        '--header-cell-border': 'none',\n        '--header-row-height': '40px',\n      }}\n      isLoading={isLoading}\n      dataSource={dataSource.slice(0, 6)}\n      columns={testProvColumns}\n    />\n  )\n}"}},自定义表格样式.parameters),自定义表格样式2.parameters=Object.assign({storySource:{source:"function 自定义表格样式2() {\n  /*\n  import styled from 'styled-components'\n  import { BaseTable } from 'ali-react-table'\n\n  const ZebraBaseTable = styled(BaseTable)`\n    --cell-border-vertical: none;\n    .art-table-row.even {\n      --bgcolor: #f2f2f2;\n    }\n    .art-table-row.odd {\n      --bgcolor: white;\n    }\n   */\n  const { isLoading, dataSource } = useProvinceDataSource()\n  return <ZebraBaseTable isLoading={isLoading} dataSource={dataSource.slice(0, 10)} columns={testProvColumns} />\n}"}},自定义表格样式2.parameters),默认列宽.parameters=Object.assign({storySource:{source:"function 默认列宽() {\n  const { isLoading, dataSource } = useProvinceDataSource()\n  const columns: ArtColumn[] = [\n    { code: 'provinceName', name: '省份' },\n    { code: 'confirmedCount', name: '确诊', render: amount, align: 'right' },\n    { code: 'suspectedCount', name: '疑似', render: amount, align: 'right' },\n    { code: 'curedCount', name: '治愈', render: amount, align: 'right' },\n    { code: 'deadCount', name: '死亡', render: amount, align: 'right' },\n    { code: 'updateTime', name: '最后更新时间', render: time },\n  ]\n  return (\n    <BaseTable\n      defaultColumnWidth={200}\n      isLoading={isLoading}\n      dataSource={dataSource.slice(0, 5)}\n      columns={[...columns, ...columns]}\n    />\n  )\n}"}},默认列宽.parameters),左侧锁列.parameters=Object.assign({storySource:{source:"function 左侧锁列() {\n  const { dataSource, isLoading } = useProvinceDataSource()\n\n  return (\n    <BaseTable\n      style={{ width: 500, height: 300, overflow: 'auto' }}\n      useOuterBorder\n      isLoading={isLoading}\n      dataSource={dataSource}\n      columns={[\n        { lock: true, code: 'provinceName', name: '省份', width: 150 },\n        { code: 'confirmedCount', name: '确诊', width: 100, render: amount, align: 'right' },\n        { code: 'suspectedCount', name: '疑似', width: 100, render: amount, align: 'right' },\n        { code: 'curedCount', name: '治愈', width: 100, render: amount, align: 'right' },\n        { code: 'deadCount', name: '死亡', width: 100, render: amount, align: 'right' },\n        { code: 'updateTime', name: '最后更新时间', width: 180, render: time },\n      ]}\n    />\n  )\n}"}},左侧锁列.parameters),左侧与右侧锁列.parameters=Object.assign({storySource:{source:"function 左侧与右侧锁列() {\n  const { dataSource, isLoading } = useCityDataSource()\n\n  // 注意为表格设置 style.overflow = 'auto' 之后，必须同时设置 style.height 或 style.maxHeight\n  return (\n    <BaseTable\n      style={{ width: 600, height: 400, overflow: 'auto' }}\n      isLoading={isLoading}\n      useOuterBorder\n      dataSource={dataSource.flatMap((d) => d.children)}\n      columns={[cols.lockProvCol, cols.cityName, ...cols.indCols, cols.lockTimeCol]}\n    />\n  )\n}"}},左侧与右侧锁列.parameters),表头吸顶_Sticky_Header.parameters=Object.assign({storySource:{source:"function 表头吸顶_Sticky_Header() {\n  const { dataSource, isLoading } = useProvinceDataSource()\n\n  return (\n    <div>\n      <div\n        style={{\n          position: 'sticky',\n          top: 0,\n          height: 48,\n          border: '1px solid #ccc',\n          zIndex: 30,\n          background: 'white',\n          color: '#333',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <div>表格操作栏，这里适合放置一些功能按钮</div>\n      </div>\n      <BaseTable isStickyHead stickyTop={48} isLoading={isLoading} dataSource={dataSource} columns={testProvColumns} />\n    </div>\n  )\n}"}},表头吸顶_Sticky_Header.parameters),表头props.parameters=Object.assign({storySource:{source:"function 表头props() {\n  // 表头 props 好像也就改个样式 实用一点...\n\n  const { dataSource, isLoading } = useProvinceDataSource()\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      dataSource={dataSource.slice(0, 5)}\n      columns={[\n        {\n          code: 'provinceName',\n          name: '省份',\n          width: 150,\n          headerCellProps: {\n            style: { color: 'white', fontSize: 20, background: '#1ea7fd' },\n          },\n        },\n        ...cols.indCols,\n        {\n          code: 'updateTime',\n          name: '最后更新时间',\n          width: 180,\n          render: time,\n          headerCellProps: {\n            style: {\n              letterSpacing: 10,\n              fontSize: 20,\n              fontWeight: 'bold',\n              textAlign: 'center',\n            },\n          },\n        },\n      ]}\n    />\n  )\n}"}},表头props.parameters),表格吸底_Sticky_Bottom.parameters=Object.assign({storySource:{source:"function 表格吸底_Sticky_Bottom() {\n  const { dataSource, isLoading } = useProvinceDataSource()\n\n  return (\n    <div>\n      <BaseTable\n        isStickyHead\n        stickyBottom={48}\n        isLoading={isLoading}\n        dataSource={dataSource}\n        columns={testProvColumns}\n      />\n      <div\n        style={{\n          position: 'sticky',\n          bottom: 0,\n          height: 48,\n          border: '1px solid #ccc',\n          zIndex: 30,\n          background: 'white',\n          color: '#333',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <div>表格底部操作栏，这里可以放置分页控件</div>\n      </div>\n      <div style={{ border: '1px solid #ccc', height: '30vh', marginTop: 32 }}>OTHER CONTENT</div>\n    </div>\n  )\n}"}},表格吸底_Sticky_Bottom.parameters),列分组.parameters=Object.assign({storySource:{source:"function 列分组() {\n  const { dataSource, isLoading } = useProvinceDataSource()\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      dataSource={dataSource}\n      columns={[\n        {\n          name: '基本信息',\n          lock: true,\n          children: [cols.provinceName, cols.updateTime],\n        },\n        {\n          name: '指标分组',\n          children: [\n            { name: '指标分组1', children: [cols.confirmedCount, cols.suspectedCount] },\n            { name: '指标分组2', children: [cols.curedCount, cols.deadCount] },\n          ],\n        },\n      ]}\n    />\n  )\n}"}},列分组.parameters),单元格合并.parameters=Object.assign({storySource:{source:"function 单元格合并() {\n  const dataSource = [\n    { prov: '湖北省', confirmed: 54406, cured: 4793, t: '2020-02-15 19:52:02' },\n    { prov: '广东省', confirmed: 1294, cured: 409, t: '2020-02-15 19:52:02' },\n    { prov: '河南省', confirmed: 1212, cured: 390, t: '2020-02-15 19:52:02' },\n    { prov: '浙江省', confirmed: 1162, cured: 428, t: '2020-02-15 19:52:02' },\n    { prov: '湖南省', confirmed: 1001, cured: 417, t: '2020-02-15 19:52:02' },\n  ]\n\n  const columns: ArtColumn[] = [\n    { code: 'prov', name: '省份' },\n    { code: 'confirmed', name: '确诊', align: 'right' },\n    { code: 'cured', name: '治愈', align: 'right' },\n    {\n      code: 't',\n      name: '最后更新时间',\n      getCellProps(value: any, record: any, rowIndex: number) {\n        if (rowIndex === 1) {\n          return { rowSpan: 2, colSpan: 1 }\n        }\n      },\n    },\n  ]\n  return <BaseTable defaultColumnWidth={100} dataSource={dataSource} columns={columns} />\n}"}},单元格合并.parameters),虚拟滚动与单元格合并.parameters=Object.assign({storySource:{source:"function 虚拟滚动与单元格合并() {\n  const { dataSource, isLoading } = useCityDataSource()\n\n  let lastTop = 0\n  const rectMap = new Map<string, SpanRect>()\n  dataSource.forEach((d) => {\n    rectMap.set(d.provinceName, {\n      left: 0,\n      right: 1,\n      top: lastTop,\n      bottom: lastTop + d.children.length,\n    })\n    lastTop += d.children.length\n  })\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      dataSource={dataSource.slice(0, 3).flatMap((d) => d.children)}\n      useVirtual={true}\n      columns={[\n        {\n          ...cols.lockProvCol,\n          getSpanRect(value: any) {\n            return rectMap.get(value)\n          },\n        },\n        cols.lockCityCol,\n        cols.confirmedCount,\n        cols.suspectedCount,\n        cols.curedCount,\n        cols.deadCount,\n        cols.updateTime,\n      ]}\n    />\n  )\n}"}},虚拟滚动与单元格合并.parameters),自定义单元格样式.parameters=Object.assign({storySource:{source:"function 自定义单元格样式() {\n  const { isLoading, dataSource } = useProvinceDataSource()\n\n  const tableRef = useRef<BaseTable>()\n\n  const columns: ArtColumn[] = [\n    { code: 'provinceName', name: '省份', width: 150 },\n    {\n      code: 'confirmedCount',\n      name: '确诊',\n      width: 100,\n      render(v: number) {\n        const danger = v > 1000\n        const safe = v < 100\n        return (\n          <div\n            style={{\n              color: danger ? 'red' : safe ? 'green' : 'unset',\n              fontWeight: danger || safe ? 'bold' : 'normal',\n            }}\n          >\n            {amount(v)}\n          </div>\n        )\n      },\n      align: 'right',\n    },\n    { code: 'suspectedCount', name: '疑似', width: 100, render: amount, align: 'right' },\n    {\n      code: 'curedCount',\n      name: '治愈',\n      width: 100,\n      render: amount,\n      align: 'right',\n      getCellProps(value: any, record: any) {\n        if (record.curedCount / record.confirmedCount > 0.3) {\n          return { style: { background: '#129835', color: 'white', fontWeight: 'bold' } }\n        }\n      },\n    },\n    {\n      code: 'deadCount',\n      name: '死亡',\n      width: 100,\n      render: amount,\n      align: 'right',\n      getCellProps(value: any) {\n        const danger = value > 0\n        if (danger) {\n          return { style: { background: '#981c12', color: 'white', fontWeight: 'bold' } }\n        }\n      },\n    },\n    { code: 'updateTime', name: '最后更新时间', width: 180, render: time },\n  ]\n  return (\n    <div>\n      <FusionStyles />\n      <div style={{ display: 'flex' }}>\n        <div>\n          <h1 style={{ marginBottom: 6 }}>样式说明</h1>\n          <p style={{ margin: '6px 0' }}>红色字体：确诊 &gt; 1000</p>\n          <p style={{ margin: '6px 0' }}>绿色背景：治愈 / 确诊 &gt; 0.3</p>\n          <p style={{ margin: '6px 0' }}>红色背景：死亡 &gt; 0</p>\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            marginLeft: 32,\n            marginBottom: 6,\n            alignSelf: 'flex-end',\n          }}\n        >\n          <Button\n            size=\"small\"\n            onClick={() => {\n              navigator.clipboard\n                .writeText(tableRef.current.getDoms().artTable.outerHTML)\n                .then(() => {\n                  Notification.open({ content: '复制成功' })\n                })\n                .catch(() => {\n                  Notification.error({ content: '复制失败' })\n                })\n            }}\n          >\n            复制表格\n          </Button>\n\n          <span style={{ marginLeft: 8 }}>(复制之后可以在 Excel 中进行粘贴)</span>\n        </div>\n      </div>\n\n      <BaseTable ref={tableRef} isLoading={isLoading} dataSource={dataSource} columns={columns} />\n    </div>\n  )\n}"}},自定义单元格样式.parameters),自定义表格行props.parameters=Object.assign({storySource:{source:"function 自定义表格行props() {\n  const { isLoading, dataSource } = useProvinceDataSource()\n\n  const [lastClickRowIndex, setLastClickRowIndex] = useState(2)\n\n  return (\n    <BaseTable\n      style={{\n        '--bgcolor': 'transparent',\n      }}\n      isLoading={isLoading}\n      dataSource={dataSource.slice(0, 6)}\n      columns={testProvColumns}\n      getRowProps={(record, rowIndex) => {\n        return {\n          style:\n            rowIndex === lastClickRowIndex\n              ? {\n                  outlineOffset: -2,\n                  outline: '2px solid #333',\n                  background: '#ddd',\n                }\n              : undefined,\n          onClick() {\n            setLastClickRowIndex(rowIndex)\n          },\n        }\n      }}\n    />\n  )\n}"}},自定义表格行props.parameters),Props组合.parameters=Object.assign({storySource:{source:"function Props组合() {\n  const [config, setConfig] = useState({\n    hasHeader: true,\n    isLoading: false,\n    useOuterBorder: false,\n    dataSize: 10,\n    height: 'auto' as 'auto' | number,\n  })\n\n  const { isLoading, dataSource } = useProvinceDataSource()\n\n  return (\n    <div>\n      <FusionStyles />\n      <div style={{ lineHeight: 1.5 }}>\n        hasHeader 表示表头是否展示；\n        <br />\n        isLoading 表示表格数据是否在加载中；\n        <br />\n        useOuterBorder 表示是否使用表格最外层的 div 的边框来代替单元格的外边框\n      </div>\n      <Row>\n        <Checkbox\n          checked={config.hasHeader}\n          onChange={(v) => {\n            setConfig({ ...config, hasHeader: v })\n          }}\n        >\n          hasHeader\n        </Checkbox>\n        <Checkbox\n          style={{ marginLeft: 32 }}\n          checked={config.isLoading}\n          onChange={(v) => {\n            setConfig({ ...config, isLoading: v })\n          }}\n        >\n          isLoading\n        </Checkbox>\n        <Checkbox\n          style={{ marginLeft: 32 }}\n          checked={config.useOuterBorder}\n          onChange={(v) => {\n            setConfig({ ...config, useOuterBorder: v })\n          }}\n        >\n          useOuterBorder\n        </Checkbox>\n      </Row>\n\n      <Row>\n        <span>data size:</span>\n        <Button.Group>\n          {[0, 3, 10].map((size) => (\n            <Button\n              key={size}\n              type={config.dataSize === size ? 'primary' : 'normal'}\n              onClick={() => {\n                setConfig({ ...config, dataSize: size })\n              }}\n            >\n              {size}\n            </Button>\n          ))}\n          <Button\n            type={isFinite(config.dataSize) ? 'normal' : 'primary'}\n            onClick={() => {\n              setConfig({ ...config, dataSize: Infinity })\n            }}\n          >\n            不限\n          </Button>\n        </Button.Group>\n      </Row>\n      <Row>\n        <span>table height:</span>\n        <Button.Group>\n          {['auto', 200, 400, 600].map((h) => (\n            <Button\n              key={h}\n              type={config.height === h ? 'primary' : 'normal'}\n              onClick={() => {\n                setConfig({ ...config, height: h as any })\n              }}\n            >\n              {h}\n            </Button>\n          ))}\n        </Button.Group>\n      </Row>\n      <p style={{ color: '#353640' }}>\n        tips: 为表格设置具体的高度之后记得添加 style.overflow=auto，不然高度仍然会被内容撑开.\n      </p>\n      <BaseTable\n        hasHeader={config.hasHeader}\n        isLoading={isLoading || config.isLoading}\n        useOuterBorder={config.useOuterBorder}\n        style={{\n          height: config.height,\n          overflow: config.height === 'auto' ? 'visible' : 'auto',\n          marginTop: 16,\n        }}\n        dataSource={dataSource.slice(0, config.dataSize)}\n        columns={testProvColumns}\n      />\n    </div>\n  )\n}"}},Props组合.parameters)},2086:function(module,exports,__webpack_require__){var map={"./af":742,"./af.js":742,"./ar":743,"./ar-dz":744,"./ar-dz.js":744,"./ar-kw":745,"./ar-kw.js":745,"./ar-ly":746,"./ar-ly.js":746,"./ar-ma":747,"./ar-ma.js":747,"./ar-sa":748,"./ar-sa.js":748,"./ar-tn":749,"./ar-tn.js":749,"./ar.js":743,"./az":750,"./az.js":750,"./be":751,"./be.js":751,"./bg":752,"./bg.js":752,"./bm":753,"./bm.js":753,"./bn":754,"./bn.js":754,"./bo":755,"./bo.js":755,"./br":756,"./br.js":756,"./bs":757,"./bs.js":757,"./ca":758,"./ca.js":758,"./cs":759,"./cs.js":759,"./cv":760,"./cv.js":760,"./cy":761,"./cy.js":761,"./da":762,"./da.js":762,"./de":763,"./de-at":764,"./de-at.js":764,"./de-ch":765,"./de-ch.js":765,"./de.js":763,"./dv":766,"./dv.js":766,"./el":767,"./el.js":767,"./en-au":768,"./en-au.js":768,"./en-ca":769,"./en-ca.js":769,"./en-gb":770,"./en-gb.js":770,"./en-ie":771,"./en-ie.js":771,"./en-il":772,"./en-il.js":772,"./en-in":773,"./en-in.js":773,"./en-nz":774,"./en-nz.js":774,"./en-sg":775,"./en-sg.js":775,"./eo":776,"./eo.js":776,"./es":777,"./es-do":778,"./es-do.js":778,"./es-us":779,"./es-us.js":779,"./es.js":777,"./et":780,"./et.js":780,"./eu":781,"./eu.js":781,"./fa":782,"./fa.js":782,"./fi":783,"./fi.js":783,"./fil":784,"./fil.js":784,"./fo":785,"./fo.js":785,"./fr":786,"./fr-ca":787,"./fr-ca.js":787,"./fr-ch":788,"./fr-ch.js":788,"./fr.js":786,"./fy":789,"./fy.js":789,"./ga":790,"./ga.js":790,"./gd":791,"./gd.js":791,"./gl":792,"./gl.js":792,"./gom-deva":793,"./gom-deva.js":793,"./gom-latn":794,"./gom-latn.js":794,"./gu":795,"./gu.js":795,"./he":796,"./he.js":796,"./hi":797,"./hi.js":797,"./hr":798,"./hr.js":798,"./hu":799,"./hu.js":799,"./hy-am":800,"./hy-am.js":800,"./id":801,"./id.js":801,"./is":802,"./is.js":802,"./it":803,"./it-ch":804,"./it-ch.js":804,"./it.js":803,"./ja":805,"./ja.js":805,"./jv":806,"./jv.js":806,"./ka":807,"./ka.js":807,"./kk":808,"./kk.js":808,"./km":809,"./km.js":809,"./kn":810,"./kn.js":810,"./ko":811,"./ko.js":811,"./ku":812,"./ku.js":812,"./ky":813,"./ky.js":813,"./lb":814,"./lb.js":814,"./lo":815,"./lo.js":815,"./lt":816,"./lt.js":816,"./lv":817,"./lv.js":817,"./me":818,"./me.js":818,"./mi":819,"./mi.js":819,"./mk":820,"./mk.js":820,"./ml":821,"./ml.js":821,"./mn":822,"./mn.js":822,"./mr":823,"./mr.js":823,"./ms":824,"./ms-my":825,"./ms-my.js":825,"./ms.js":824,"./mt":826,"./mt.js":826,"./my":827,"./my.js":827,"./nb":828,"./nb.js":828,"./ne":829,"./ne.js":829,"./nl":830,"./nl-be":831,"./nl-be.js":831,"./nl.js":830,"./nn":832,"./nn.js":832,"./oc-lnc":833,"./oc-lnc.js":833,"./pa-in":834,"./pa-in.js":834,"./pl":835,"./pl.js":835,"./pt":836,"./pt-br":837,"./pt-br.js":837,"./pt.js":836,"./ro":838,"./ro.js":838,"./ru":839,"./ru.js":839,"./sd":840,"./sd.js":840,"./se":841,"./se.js":841,"./si":842,"./si.js":842,"./sk":843,"./sk.js":843,"./sl":844,"./sl.js":844,"./sq":845,"./sq.js":845,"./sr":846,"./sr-cyrl":847,"./sr-cyrl.js":847,"./sr.js":846,"./ss":848,"./ss.js":848,"./sv":849,"./sv.js":849,"./sw":850,"./sw.js":850,"./ta":851,"./ta.js":851,"./te":852,"./te.js":852,"./tet":853,"./tet.js":853,"./tg":854,"./tg.js":854,"./th":855,"./th.js":855,"./tk":856,"./tk.js":856,"./tl-ph":857,"./tl-ph.js":857,"./tlh":858,"./tlh.js":858,"./tr":859,"./tr.js":859,"./tzl":860,"./tzl.js":860,"./tzm":861,"./tzm-latn":862,"./tzm-latn.js":862,"./tzm.js":861,"./ug-cn":863,"./ug-cn.js":863,"./uk":864,"./uk.js":864,"./ur":865,"./ur.js":865,"./uz":866,"./uz-latn":867,"./uz-latn.js":867,"./uz.js":866,"./vi":868,"./vi.js":868,"./x-pseudo":869,"./x-pseudo.js":869,"./yo":870,"./yo.js":870,"./zh-cn":871,"./zh-cn.js":871,"./zh-hk":872,"./zh-hk.js":872,"./zh-mo":873,"./zh-mo.js":873,"./zh-tw":874,"./zh-tw.js":874};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2086},2091:function(module,exports){},2093:function(module,exports){},2148:function(module,exports,__webpack_require__){var map={"./transforms.stories.mdx":2149};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2148},2149:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(51),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7__);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"表格 / 常用功能 / 文档",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"表格常用功能"},"表格常用功能"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"ali-react-table 提供了业务开发中经常需要用到的一些功能，这些功能采用统一的拓展机制 —— TableTransform 进行实现。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"ali-react-table 提供的常用功能如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default.a,{kind:"表格 / 常用功能 / 树状模式",story:"page",mdxType:"LinkTo"},"树状模式")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default.a,{kind:"表格 / 常用功能 / 排序",story:"page",mdxType:"LinkTo"},"排序")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default.a,{kind:"表格 / 常用功能 / 列高亮",story:"page",mdxType:"LinkTo"},"列高亮")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default.a,{kind:"表格 / 常用功能 / 单元格自动合并",story:"page",mdxType:"LinkTo"},"单元格自动合并")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default.a,{kind:"表格 / 常用功能 / 拖拽调整列宽",story:"page",mdxType:"LinkTo"},"拖拽调整列宽")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default.a,{kind:"表格 / 常用功能 / 其他功能",story:"page",mdxType:"LinkTo"},"其他功能"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"统一拓展机制--tabletransform"},"统一拓展机制 —— TableTransform"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"BaseTable")," 基于 dataSource 和 column 渲染表格，对 dataSource/columns 进行一些包装和替换，可以实现丰富的表格特性：包括排序、树状模式、过滤等。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"ali-react-table 基于 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"TableTransform")," 来对 BaseTable 进行功能增强。",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"Transform<T>")," 与 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"TableTransform")," 的接口如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"type Transform<T> = (input: T) => T\n\ntype TableTransform = Transform<{\n  columns: ArtColumn[]\n  dataSource: any[]\n}>\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"TableTransform"),"（后面简称 transform）是一个简单的转换函数，输入",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"p"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("em",{parentName:"strong"},"列配置 + 数据源")),"，输出一份新的",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"p"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("em",{parentName:"strong"},"列配置 + 数据源")),"。每一个 transform 通过对 dataSource/columns 的包装或更新以实现一个新的特性，例如调整列的显示或隐藏，为某一行数据计算缩进，添加排序功能等."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"每个 transform 的输入和输出的类型相同，我们可以方便地将多个 transform 组合起来，得到一个大的 transform，从而实现不同功能的组合。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"使用-transform"},"使用 transform"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"ali-react-table 导出了 applyTransforms 方法来应用多个 transform 🌟："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-jsx"}),"import { BaseTable, applyTransforms } from 'ali-react-table'\n\nconst renderData = applyTransforms(\n  // 输入放在第一个参数\n  { columns: inputColumns, dataSource: inputDataSource },\n  // transforms 作为后续的参数\n  transform1,\n  transform2,\n  transform3,\n  ...moreTransforms,\n)\n\nreturn <BaseTable dataSource={renderData.dataSource} columns={renderData.columns} />\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"applyTransforms 只是一个简单的辅助函数，背后的逻辑如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-javascript"}),"const output = applyTransforms(input, transform_1, transform_2, transform_3)\n\n// 上面的代码相当于以下代码：\nconst temp1 = transform_1(input)\nconst temp2 = transform_2(temp1)\nconst output = transform_3(temp2)\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"自定义-transform"},"自定义 transform"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"除了 ali-react-table 默认导出的一些 transform 之外，我们也可以自己实现 transform，然后将其与其他 transform 组合到一起。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-javascript"}),"function doubleDataSourceTransform({ columns, dataSource }) {\n  const outputColumns = columns\n\n  const outputDataSource = dataSource.concat(dataSource)\n\n  return { columns: outputColumns, dataSource: outputDataSource }\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"你可以在自定义的 transform 中执行任何逻辑，只要返回值仍然是有效的 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"dataSource / columns")," 即可。在自定义的 transform 中，对每一个列的处理方式可能是不同的，此时我们推荐利用 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"column.features")," 来为不同的列打上标记。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"自定义-transform-辅助函数-traversecolumn"},"自定义 transform 辅助函数 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h2"},"traverseColumn")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"实现自定义 transform 需要注意 column 是树状结构（",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"column.children")," 存放了子节点），我们往往需要对 column 进行递归的处理。为此 ali-react-table 提供了 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"traverseColumn")," 方法用来简化创建针对列的 transform。提供一个针对单个 column 配置的转换函数，该方法可以生成对应的 TableTransform，接口如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"function traverseColumn(fn: (column: ArtColumn) => null | ArtColumn | ArtColumn[]): TableTransform\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"返回 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"null")," 时，对应的列将被移除；返回 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"ArtColumn")," 或一个数组时，返回的结果会替换对应的列。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"下面是一些利用 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"traverseColumn")," 实现的 transform："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-javascript"}),"// 反转列的 hidden 属性\nconst invertHidden = traverseColumn((col) => ({ ...col, hidden: !col.hidden }))\n\n// 将所有的列的标题字体大小设置为 24px\nconst bigTitle = traverseColumn((col) => {\n  const title = col.title ?? col.name\n  return {\n    ...col,\n    title: <div style={{ fontSize: 24 }}>{title}</div>,\n  }\n})\n\n// 根据 features.showCompare 来添加对应的 对比列\nconst addCompareCol = traverseColumn((col) => {\n  if (col.features?.showCompare) {\n    return [col, { ...col, name: '对比值', code: `compare_${col.code}` }]\n  }\n  return col\n})\n")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"表格 / 常用功能 / 文档",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2150:function(module,exports,__webpack_require__){var map={"./1-tree-mode.stories.mdx":2151,"./2-sort.stories.mdx":2152,"./3-auto-row-span.stories.mdx":2153,"./4-column-hover.stories.mdx":2154,"./5-column-resize.stories.mdx":2155,"./6-others.stories.mdx":2156};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2150},2151:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(51),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7__);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"表格 / 常用功能 / 树状模式",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"树状模式"},"树状模式"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"本页文档将介绍 ali-react-table 提供的树状模式的相关 API。本页中的示例源码可在 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default.a,{kind:"表格 / 常用功能示例",story:"树状表格",mdxType:"LinkTo"},"表格-常用功能示例")," 查看。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"buildtree-从列表数据中构建树状数据"},"buildTree 从列表数据中构建树状数据"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"makeBuildTreeTransform(idProp: string, parentIdProp: string): TableTransform")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"根据数据中的 idProp/parentIdProp，将 dataSource 转换为树状结构。树状结构下，父节点的 children 数组中包含对其子节点的引用。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"ali-react-table 还导出了一个静态的 buildTree 函数，如果你只需要对数据进行处理，可以使用静态的 buildTree 函数。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"如果你已经有了树状结构的数据，那就可以跳过 buildTree 的调用，直接使用 treeMode 来进行渲染。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"treemode-使用树状结构来渲染表格"},"treeMode 使用树状结构来渲染表格"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"makeTreeModeTransform(options?: TreeModeOptions): TableTransform")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"该 transform 要求输入的 dataSource 为树状结构，即子节点位于父节点的 children 数组中"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"该 transform 会对 dataSource 和 columns 进行更新，根据逻辑如下：",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"根据 options.openKeys 计算出需要展示的表格行，并计算每一行的缩进和展开信息",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"缩进等信息会存放在输出的 dataSource 中，可以通过 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"record[treeMetaSymbol]")," 来获取该信息"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"该 transform 会对 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"columns[0]")," 进行更新，使其在渲染时处理缩进并绘制树状模式的展开/收拢按钮")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"TreeModeOptions")," 具体定义："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"export interface TreeModeOptions {\n  primaryKey: string\n  openKeys: string[]\n  onChangeOpenKeys(nextKeys: string[], key: string, action: 'expand' | 'collapse'): void\n\n  indentSize?: number\n  isLeafNode?(node: any, nodeMeta: { depth: number; expanded: boolean; rowKey: string }): boolean\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"transform 都是纯函数，所需的状态需要由上层提供"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"上层需要提供 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"options.openKeys")," 来告诉 treeMode 哪些节点是展开的，哪些行节点是收拢的"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"options.onChangeOpenKeys"),": 除了 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"nextKeys")," 之外，该回调函数还会接受到 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"key")," 与 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"action")," 参数，分别表示本次操作「对应的 key」与「操作类型」"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"options.isLeafNode"),": 该选项可用于自定义叶子节点的判定逻辑",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"对于每一个树中的节点，该回调函数都将被调用一次；调用时除了节点的数据本身（node 参数，即 dataSource 中的元素），回调函数还可以接收到该节点在树状模式下的一些元信息（深度、是否展开等）"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"若对于某一个节点，该函数返回了 false，则 treeMode 会认为该节点是「非叶节点」，将渲染收拢或展开按钮",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"如果该函数返回了 true，则 treeMode 认为该节点是「叶子节点」，将 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"不渲染")," 收拢或展开按钮"))))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"options.indentSize")," 可以配置子节点的缩进宽度。")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"treemode-非受控用法"},"treeMode 非受控用法"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"ali-react-table 也提供了非受控的使用方式，useTreeModeTransform 是一个自定义 React hooks，其参数与 makeTreeModeTransform 类似，但移除了 openKeys/onChangeOpenKeys，同时新增了 defaultOpenKeys 参数（默认为空数组）."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-javascript"}),"import { useTreeModeTransform } from 'ali-react-table'\n\nfunction MyComponent() {\n  const treeModeTransform = useTreeModeTransform({ primaryKey: 'id', defaultOpenKeys: ['B2C'] })\n\n  const renderData = applyTransforms({ columns: columns, dataSource: state.data }, treeModeTransform)\n\n  return <BaseTable dataSource={renderData.dataSource} columns={renderData.columns} />\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"基本示例"},"基本示例"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Canvas,{mdxType:"Canvas"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"表格-常用功能示例--树状表格",mdxType:"Story"})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"进阶用法--异步数据加载"},"进阶用法 —— 异步数据加载"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"异步数据加载场景下，因为此时前端只有整棵树中一小部分的数据，我们必须主动告诉表格哪些节点是父节点（可被展开），哪些节点是子节点（不可被展开）。设置 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"TreeModeOptions#isLeafNode")," 覆盖默认的子节点判断方式，并在 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"TreeModeOptions#onChangeOpenKeys")," 中根据展开的节点判断是否需要加载更多数据，可以实现树状模式下异步数据加载功能。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Canvas,{mdxType:"Canvas"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"示例-表格交互-异步数据加载树状表格--异步数据加载树状表格",mdxType:"Story"})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"进阶用法--对上次展开位置进行标记"},"进阶用法 —— 对上次展开位置进行标记"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"在 onChangeOpenKeys 记录上一次用户展开的节点的 key，并使用 getRowProps 为相应的行设置 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},'className="last-open"'),"（也设置为其他类名）。这样就可以通过 CSS 来方便的控制「上次展开的位置」的样式。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"表格行的 CSS 类名为 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"art-table-row"),"（推荐使用 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"Classes.tableRow")," 来引用），展开/收拢图标为 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"expansion-icon")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Canvas,{mdxType:"Canvas"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"示例-表格交互-树状表格中的最近展开标记--树状表格中的最近展开标记",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"表格 / 常用功能 / 树状模式",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2152:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(51),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7__);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"表格 / 常用功能 / 排序",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"排序"},"排序"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"本页文档将介绍 ali-react-table 提供的排序的相关 API。本页中的示例源码可在 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default.a,{kind:"表格 / 常用功能示例",story:"表格排序-单列",mdxType:"LinkTo"},"表格-常用功能示例")," 查看。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"sort-表格排序"},"sort 表格排序"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"API 接口： ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"makeSortTransform(options: SortOptions): TableTransform")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"export interface SortOptions {\n  /** 排序字段列表 */\n  sorts: SortItem[]\n\n  /** 更新排序字段列表的回调函数 */\n  onChangeSorts(nextSorts: SortItem[]): void\n\n  // 以下字段为可选参数\n\n  /** 排序切换顺序 */\n  orders?: SortOrder[]\n\n  /** 排序模式。单选 single，多选 multiple，默认为多选 */\n  mode?: 'single' | 'multiple'\n\n  /** 自定义排序表头 */\n  SortHeaderCell?: React.ComponentType<SortHeaderCellProps>\n\n  /** 是否保持 dataSource 不变 */\n  keepDataSource?: boolean\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"该 transform 会对 dataSource 和 columns 进行更新"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"该 transform 会根据 options.sorts 来排序 dataSource",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"options.mode=multiple")," （默认值）时支持多字段排序（先按字段 1 排序，然后按字段 2 排序，依次类推）"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"options.mode=single")," 时表现为单字段排序"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"无论是多字段还是单字段排序，",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"options.sorts")," 始终为一个数组"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"该 transform 会根据 options.sorts 为列的表头渲染对应的排序图标"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"注意默认情况下，列都是不可排序的。想让某一列支持排序，必须设置 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"strong"},"column.features.sortable = true")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"sort-非受控用法"},"sort 非受控用法"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"ali-react-table 也提供了非受控的使用方式，useSortTransform 是一个自定义 React hooks，其参数与 makeSortTransform 类似，但移除了 sorts/onChangeSorts，同时新增了 defaultSorts 参数（默认为空数组）."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-javascript"}),"import { useSortTransform } from 'ali-react-table'\n\nfunction MyComponent() {\n  const sortTransform = useSortTransform({\n    defaultSorts: [\n      { code: 'deadCount', order: 'asc' },\n      { code: 'confirmedCount', order: 'desc' },\n    ],\n  })\n\n  const renderData = applyTransforms({ columns: columns, dataSource: state.data }, sortTransform)\n\n  return <BaseTable dataSource={renderData.dataSource} columns={renderData.columns} />\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"基本示例"},"基本示例"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Canvas,{mdxType:"Canvas"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"表格-常用功能示例--表格排序-单列",mdxType:"Story"})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"进阶用法--树状排序"},"进阶用法 —— 树状排序"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"makeSortTransform")," 默认就支持了树状排序，即对于树中的某一个父节点，对其子节点进行排序。使用时注意 transform 的调用顺序。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-javascript"}),"const renderData = applyTransforms(\n  input,\n  makeBuildTreeTransform(args),\n  makeSortTransform(sortOptions), // 注意 sort 需要放在 makeTreeModeTransform 之前\n  makeTreeModeTransform(treeModeOptions),\n)\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Canvas,{mdxType:"Canvas"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"表格-常用功能示例--树状模式与层级排序",mdxType:"Story"})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"进阶用法--自定义比较函数"},"进阶用法 —— 自定义比较函数"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"当为某一列设置 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"features.sortable = true")," 时，该列默认会按照自然序（对于数字）或字典序（对于字符串）进行排序。\n我们可以为 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"features.sortable")," 设置一个函数来自定义某一列的比较规则，该函数将被作为 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"Array#sort")," 的参数。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"如果只想使用 sort 提供的交互与 UI，但不想让 sort 改变 dataSource，可以设置 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"options.keepDataSource = true"),"。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"进阶功能--自定义切换顺序"},"进阶功能 —— 自定义切换顺序"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"SortOptions#orders")," 可以用来指定排序切换顺序。该选项的默认值为 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"['desc', 'asc', 'none']"),"，即连续点击某一列的表头时，先按降序排序，然后按升序排序，最后取消排序；传入自定义的 orders 可以覆盖默认的切换顺序。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"进阶用法--自定义排序列表头渲染"},"进阶用法 —— 自定义排序列表头渲染"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"SortOptions#SortHeaderCell")," 可用于自定义排序表头的内容和样式，组件接口如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"interface SortHeaderCellProps {\n  /** 调用 makeSortTransform(...) 时的参数 */\n  sortOptions: Required<Omit<SortOptions, 'SortHeaderCell'>>\n\n  /** 在添加排序相关的内容之前 表头原有的渲染内容 */\n  children: ReactNode\n\n  /** 当前排序 */\n  sortOrder: SortOrder\n\n  /** 多列排序下，sortIndex 指明了当前排序字段起作用的顺序. 当 sortOrder 为 none 时，sortIndex 为 -1 */\n  sortIndex: number\n\n  /** 当前列的配置 */\n  column: ArtColumn\n\n  /** 切换排序的回调 */\n  onToggle(): void\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Canvas,{mdxType:"Canvas"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"表格-常用功能示例--自定义样式的排序表头",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"表格 / 常用功能 / 排序",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2153:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9);__webpack_require__(51);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"表格 / 常用功能 / 单元格自动合并",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"单元格自动合并"},"单元格自动合并"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"autorowspan-自动单元格合并"},"autoRowSpan 自动单元格合并"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"makeAutoRowSpanTransform()"),"：根据上下单元格的值 是否相等 自动合并单元格。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"在设置 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"column.feature.autoRowSpan")," 之后，如果该列上下两个单元格中的值相等，则自动合并这两个单元格。如果连续的多个单元格的值都相等，则合并所有这些单元格。 该 transform 会覆盖列中原有的 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"getSpanRect"),"，注意避免与其他 transform 的冲突。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"column.feature.autoRowSpan")," 也可以设置为一个比较函数，用来自定义「两个单元格中的值相等」的判断逻辑。其函数签名为 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"(val1: any, val2: any) => boolean")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Canvas,{mdxType:"Canvas"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"表格-常用功能示例--单元格自动合并",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"表格 / 常用功能 / 单元格自动合并",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2154:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9);__webpack_require__(51);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"表格 / 常用功能 / 列高亮",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"列高亮"},"列高亮"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"columnhover-列高亮"},"columnHover 列高亮"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"makeColumnHoverTransform(options: ColumnHoverOptions): TableTransform")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"这是一个只会对 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"columns")," 进行更新的 transform"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"如果某一列的 colIndex 与 options.hoverColIndex 匹配，该 transform 会将该列单元格的背景色设置为 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"options.hoverColor"),"，默认为 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"'#f5f5f5'"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"type ColumnHoverOptions = {\n  hoverColor?: string\n  hoverColIndex: number\n  onChangeHoverColIndex(nextColIndex: number): void\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Canvas,{mdxType:"Canvas"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"表格-常用功能示例--列高亮",mdxType:"Story"})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"columnrangehover-列范围高亮"},"columnRangeHover 列范围高亮"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"makeColumnRangeHoverTransform(options: ColumnRangeHoverOptions): TableTransform")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"这是一个只会对 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"columns")," 进行更新的 transform"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"如果某一列的 colIndex 与 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"options.hoverColor")," 匹配...",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"该 transform 会将该列单元格的背景色设置为 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"options.hoverColor"),"，默认为 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"'#f5f5f5'")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"该 transform 会将该列表头的背景色设置为 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"options.headerHoverColor"),"，默认为 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"'#ddd'"))))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"type ColumnHoverOptions = {\n  hoverColor?: string\n  headerHoverColor?: string\n  hoverRange: { start: number; end: number }\n  onChangeHoverRange(nextColIndexRange: { start: number; end: number }): void\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Canvas,{mdxType:"Canvas"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"表格-常用功能示例--列的范围高亮",mdxType:"Story"})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"非受控用法"},"非受控用法"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"ali-react-table 也提供了非受控的使用方式：useColumnHoverTransform。两者与受控用法类似，但移除了 hoverColIndex/onChangeHoverColIndex，同时增加了 defaultHoverColIndex."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-javascript"}),"import { useColumnHoverTransform } from 'ali-react-table'\n\nfunction MyComponent() {\n  const columnHover = useColumnHoverTransform()\n  const renderData = applyTransforms({ columns: inputColumns, dataSource: inputDataSource }, columnHover)\n\n  return <BaseTable dataSource={renderData.dataSource} columns={renderData.columns} />\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"非受控列范围高亮 useColumnRangeHoverTransform：useColumnHoverRangeTransform 在受控用法的基础上移除了 hoverRange/onChangeHoverRange，增加了 defaultHoverRange."))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"表格 / 常用功能 / 列高亮",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2155:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9);__webpack_require__(51);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"表格 / 常用功能 / 拖拽调整列宽",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"拖拽调整列宽"},"拖拽调整列宽"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"makeColumnResizeTransform(options: ColumnResizeOptions): TableTransform")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"根据 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"options.sizes")," 重新设置每一列的宽度，并在每一列的表头右侧渲染一个 span，作为拖拽排序的 handle。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"interface ColumnResizeOptions {\n  /** 每一列的宽度 */\n  sizes: number[]\n\n  /** 修改宽度的回调函数 */\n  onChangeSizes(nextSizes: number[]): void\n\n  // 以下为可选参数\n\n  /** 列的最小宽度，默认为 40 */\n  minSize?: number\n  /** 列的最大宽度，默认为 Infinity */\n  maxSize?: number\n  /** 是否在列的末尾追加可伸缩列，默认为 false */\n  appendExpander?: boolean\n  /** 是否在调整列宽时禁用 user-select，默认为 false */\n  disableUserSelectWhenResizing?: boolean\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Canvas,{mdxType:"Canvas"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"表格-常用功能示例--拖拽调整列宽",mdxType:"Story"})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"非受控用法"},"非受控用法"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"ali-react-table 也提供了非受控的用法，useColumnResizeTransform 在受控的基础上移除了 sizes/onChangeSizes，同时新增了 defaultSizes 参数。"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"表格 / 常用功能 / 拖拽调整列宽",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2156:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9);__webpack_require__(51);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"表格 / 常用功能 / 其他功能",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"flatten-「压平」分组"},"flatten 「压平」分组"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"makeFlattenTransform()")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"当分组的 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"features.flatten")," 为 true 时，将分组「压平」；即移除父节点，并将子节点数组展开后放在原来父节点的位置上"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"这是一个只会对 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"columns")," 进行更新的 transform")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"orderfield-序号列"},"orderField 序号列"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"makeOrderFieldTransform(startOrder?: number)"),"：序号列"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"当列的 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"features.order")," 为 true 或是 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"features.orderField")," 为 true 时，覆盖该列的 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"getValue")," 方法，使其总是展示序号"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"这是一个只会对 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"columns")," 进行更新的 transform")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"tips-提示气泡"},"tips 提示气泡"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"makeTipsTransform(components: { Balloon: any })"),"：提示气泡",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"这是一个只会对 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"columns")," 进行更新的 transform"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"在列标题旁边展示一个 ℹ 符号，鼠标悬停时展示提示气泡，气泡内容由 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"columns.features.tips")," 提供")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Canvas,{mdxType:"Canvas"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"表格-常用功能示例--列气泡提示",mdxType:"Story"})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"visible-调整可见列"},"visible 调整可见列"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"makeVisibleTransform(visibleCodes: string[]): TableTransform")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"该 transform 不常用，一般情况下开发者可以基于 traverseColumn 自行实现可见列的逻辑")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"表格 / 常用功能 / 其他功能",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2157:function(module,exports,__webpack_require__){var map={"./transforms-examples.stories.tsx":2194};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2157},2159:function(module,exports,__webpack_require__){var map={"./utils.stories.mdx":894};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2159},2160:function(module,exports,__webpack_require__){var map={"./internal-getters.stories.mdx":2161,"./proto.stories.mdx":2162,"./utils.stories.mdx":894};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2160},2161:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"工具 / internal getters",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"internal-getters"},"Internal Getters"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"对表格进行封装时，可能需要用到一些表格内部的数据处理方法，使得上层封装的功能和表格内部保持一致。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"ali-react-table 导出的内部方法如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"safeRenderHeader(column) 获取表头的渲染内容"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"safeGetValue(column, record, rowIndex) 获取单元格的值"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"safeGetRowKey(primaryKey, record, rowIndex) 获取某一行的 key"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"safeGetCellProps(column, record, rowIndex) 获取单元格的 props"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"safeRender(column, record, rowIndex) 获取单元格的渲染内容")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"使用示例："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-javascript"}),"import { internals } from 'ali-react-table'\n\nconst column = { code: 'hello', name: 'world' }\nconst rowIndex = 3\nconst record = dataSource[rowIndex]\n\nconst cellProps = internals.safeRender(column, record, rowIndex)\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"每个内部的数据方法的实现其实都很简单，详见 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"p"},{href:"https://github.com/alibaba/ali-react-table/blob/master/src/internals.ts",target:"_blank",rel:"nofollow noopener noreferrer"}),"源码"),"."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"注意在表格的内部实现中，可能并没有实际调用这些内部方法（在表格内部调用这些方法会产生很多的冗余计算），但表格内部的数据处理和这些方法是保持一致的。"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"工具 / internal getters",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2162:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"工具 / proto",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"proto"},"proto"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"在实际开发中过程中，一个表格可能会包含大量维度和指标（在盒马内部，超过 50 列的表格十分常见），列配置的书写工作量会很大。这其中很多的列往往具有相同的宽度、对齐方向或是类似的格式化方法，重复配置较多。",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"ali-react-table")," 导出了 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"proto")," 来简化这些重复配置的书写，有效减少列配置的工作量。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"注：本页文档中，「原型」指的是使用 proto 创建出来的函数，而不是指 JavaScript 中的函数原型。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"创建对象原型"},"创建对象原型"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"proto.object(baseObject)")," 是一个工厂方法，接受一个基础对象 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"baseRecord"),"，返回一个函数；调用该函数时，将以 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"baseRecord")," 为「原型」并根据输入的参数来创建一个新的对象。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"在下面的例子中，我们创建了 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"columnProto"),"，并用 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"columnProto")," 来生成其他的列，避免书写相同的默认配置。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-js"}),"import { proto } from 'ali-react-table'\n\nconst columnProto = proto.object({ width: 120, align: 'right' })\n\nconst col1 = columnProto({})\n// 参数为空对象，则所有字段都来自于 baseRecord\n// { width: 120, align: 'right' }\n\nconst col2 = columnProto({ width: 150 })\n// 参数提供了 width 字段，其他字段来自于 baseRecord\n// { width: 150, align: 'right' }\n\nconst col3 = columnProto({ code: 'code-1', align: 'left', lock: false })\n// { code: 'code-1', align: 'left', lock: false, width: 120 }\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"创建数组原型"},"创建数组原型"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"proto.array(baseRecord)")," 与 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"proto.object")," 非常类似，也会生成一个函数，但函数的输入参数为一个数组。该函数被调用时，会遍历输入的数组，并根据 baseRecord 来生成对象。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-js"}),"import { proto } from 'ali-react-table'\n\nconst columnProto = proto.array({ width: 120, align: 'right', format: amount })\n\nconst columns = columnProto([\n  { code: 'code-1' },\n  { code: 'code-2' },\n  { code: 'code-3', width: 200 },\n  { code: 'code-4', align: 'left' },\n])\n// [\n//   { code: 'code-1', width: 120, align: 'right', format: amount },\n//   { code: 'code-2', width: 120, align: 'right', format: amount },\n//   { code: 'code-3', width: 200, align: 'right', format: amount },\n//   { code: 'code-4', width: 120, align: 'left',  format: amount }\n// ]\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"嵌套原型"},"嵌套原型"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"在生成对象原型或数组原型时，baseRecord 中的字段值(",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"subProto"),")也可以为一个对象原型或数组原型，生成新对象时 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"subProto")," 将被调用用于对应字段的值。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-js"}),"const columnProto = proto.array({\n  width: 120,\n  align: 'right',\n  features: proto.object({ defaultVisible: true }),\n})\n\nconst columns = columnProto([\n  { code: 'code-1' },\n  { code: 'code-2', features: { defaultVisible: false } },\n  { code: 'code-3', features: { sortable: true } },\n])\n// [\n//   { code: 'code-1', width: 120, align: 'right', features: { defaultVisible: true } },\n//   { code: 'code-2', width: 120, align: 'right', features: { defaultVisible: false } },\n//   { code: 'code-3', width: 120, align: 'right', features: { defaultVisible: true, sortable: true } },\n// ]\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"protostring-与-protonumber"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h2"},"proto.string")," 与 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h2"},"proto.number")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"有的时候某个字段并没有默认值，但我们又希望创建出来的对象必须包含某个对象，此时可以使用 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"proto.string")," 或 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"proto.number")," 来创建原型。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-js"}),"const columnProto = proto.array({\n  code: proto.string,\n  width: proto.number,\n  align: 'right',\n})\n\n// 调用 columnProto 时，输入参数中的 code 字段必须为字符串，width 字段必须为数字\nconst columns = columnProto([\n  { code: 'code-1', width: 100 },\n  { code: 'code-2', width: 120, features: { defaultVisible: false } },\n  { code: 'code-3', width: 120, features: { sortable: true } },\n])\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"此外，",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"proto.notNull")," 用于确保输入参数中某个字段不能为 null/undefine。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"原型的继承"},"原型的继承"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"通过 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"proto.object")," / ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"proto.array")," 生成的对象上有一个 extends 的方法，可以在已有的原型基础上生成新的原型。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-js"}),"const column = proto.object({ width: 120, align: 'left' })\nconst alignRightColumn = column.extends({ align: 'right' })\nconst wideColumn = column.extends({ width: 200 })\n\nconst col1 = alignRightColumn({}) // { align: \"right\", width: 120 }\n\nconst col2 = wideColumn({}) // { width: 200, align: \"left\" }\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"用继承的原型生成最终的对象时，会先根据继承的配置处理数据，然后调用基础的配置处理数据。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"protoempty"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h2"},"proto.empty")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"proto.empty")," 是一个特殊的 symbol，其作用是从结果中移除特定字段。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-js"}),"const columnProto = proto.array({\n  width: 120,\n  align: 'right',\n  features: proto.object({ defaultVisible: true }),\n})\n\nconst columns = columnProto([\n  { code: 'code-1' },\n  { code: 'code-2', align: proto.empty },\n  { code: 'code-3', features: proto.empty },\n])\n// [\n//   { code: 'code-1', width: 120, align: 'right', features: { defaultVisible: true } },\n//   { code: 'code-2', width: 120, features: { defaultVisible: true } },\n//   { code: 'code-3', width: 120, align: 'right' },\n// ]\n")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"工具 / proto",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2163:function(module,exports,__webpack_require__){var map={"./big-data.stories.tsx":2164,"./biz/ROI-analysis-table.stories.tsx":2165,"./biz/data-report.stories.tsx":2166,"./biz/rank-table.stories.tsx":2170,"./biz/remain-matrix.stories.tsx":2171,"./components/CustomColumnsDialog.stories.mdx":2172,"./components/custom-columns-dialog.stories.tsx":2173,"./components/operation-bar.stories.mdx":2174,"./components/table-operation-bar.stories.tsx":2196,"./interactions/async-loading-tree-table.stories.tsx":2179,"./interactions/filter.stories.tsx":2180,"./interactions/select.stories.tsx":2199,"./interactions/tree-table-with-last-open-mark.stories.tsx":2181};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2163},2164:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"滚动容器为window",(function(){return 滚动容器为window})),__webpack_require__.d(__webpack_exports__,"滚动容器为指定高度的div",(function(){return 滚动容器为指定高度的div})),__webpack_require__.d(__webpack_exports__,"双向虚拟滚动",(function(){return 双向虚拟滚动}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(33),__webpack_require__(337),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(23),__webpack_require__(338),__webpack_require__(28),__webpack_require__(10),__webpack_require__(7),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);var ali_react_table__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(55),react__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_18___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_18__),_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(18);function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={title:"示例 / 大数据测试",parameters:{storySource:{source:"import { BaseTable, ArtColumn } from 'ali-react-table'\nimport React from 'react'\nimport { cols, useAllDataSource } from '../assets/ncov19-assets'\n\nexport default {\n  title: '示例 / 大数据测试',\n  parameters: {\n    docs: {\n      page() {\n        return (\n          <div\n            style={{\n              margin: 'auto',\n              background: 'rgba(0, 0, 0, 0.03)',\n              borderRadius: 10,\n              padding: 30,\n            }}\n          >\n            示例过多，docs page 已在此处禁用，请在页面上方切换到「Canvas」模式\n          </div>\n        )\n      },\n    },\n  },\n}\n\nexport function 滚动容器为window() {\n  const { dataSource, isLoading } = useAllDataSource()\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      dataSource={dataSource}\n      columns={[\n        {\n          lock: true,\n          width: 80,\n          name: 'index',\n          getValue(record: any, rowIndex: number) {\n            return rowIndex\n          },\n        },\n        cols.updateTime,\n        cols.provinceName,\n        cols.cityName,\n        ...cols.indCols,\n      ]}\n    />\n  )\n}\n\nexport function 滚动容器为指定高度的div() {\n  const { dataSource, isLoading } = useAllDataSource()\n  return (\n    <BaseTable\n      style={{ height: 400, overflow: 'auto' }}\n      useOuterBorder\n      isLoading={isLoading}\n      dataSource={dataSource}\n      columns={[\n        {\n          lock: true,\n          width: 80,\n          name: 'index',\n          getValue(record: any, rowIndex: number) {\n            return rowIndex\n          },\n        },\n        cols.updateTime,\n        cols.provinceName,\n        cols.cityName,\n        ...cols.indCols,\n      ]}\n    />\n  )\n}\n\nexport function 双向虚拟滚动() {\n  const { dataSource, isLoading } = useAllDataSource()\n  const repeatedColumns: ArtColumn[] = []\n\n  for (let i = 0; i < 1000; i++) {\n    for (const col of cols.indCols) {\n      repeatedColumns.push({ ...col, name: `copy-${i} ${col.name}` })\n    }\n  }\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      useVirtual={true}\n      dataSource={[dataSource, dataSource, dataSource, dataSource, dataSource].flat()}\n      columns={[\n        {\n          lock: true,\n          width: 80,\n          name: 'index',\n          getValue(record: any, rowIndex: number) {\n            return rowIndex\n          },\n        },\n        cols.updateTime,\n        cols.provinceName,\n        cols.cityName,\n        ...repeatedColumns,\n      ]}\n    />\n  )\n}\n",locationsMap:{"滚动容器为window":{startLoc:{col:7,line:27},endLoc:{col:1,line:49},startBody:{col:7,line:27},endBody:{col:1,line:49}},"滚动容器为指定高度的div":{startLoc:{col:7,line:51},endLoc:{col:1,line:75},startBody:{col:7,line:51},endBody:{col:1,line:75}},"双向虚拟滚动":{startLoc:{col:7,line:77},endLoc:{col:1,line:108},startBody:{col:7,line:77},endBody:{col:1,line:108}}}},docs:{page:function page(){return react__WEBPACK_IMPORTED_MODULE_18___default.a.createElement("div",{style:{margin:"auto",background:"rgba(0, 0, 0, 0.03)",borderRadius:10,padding:30}},"示例过多，docs page 已在此处禁用，请在页面上方切换到「Canvas」模式")}}}};var 滚动容器为window=function 滚动容器为window(){var _useAllDataSource=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_19__.c)(),dataSource=_useAllDataSource.dataSource,isLoading=_useAllDataSource.isLoading;return react__WEBPACK_IMPORTED_MODULE_18___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_17__.a,{isLoading:isLoading,dataSource:dataSource,columns:[{lock:!0,width:80,name:"index",getValue:function getValue(record,rowIndex){return rowIndex}},_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_19__.a.updateTime,_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_19__.a.provinceName,_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_19__.a.cityName].concat(_toConsumableArray(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_19__.a.indCols))})};滚动容器为window.displayName="滚动容器为window";var 滚动容器为指定高度的div=function 滚动容器为指定高度的div(){var _useAllDataSource2=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_19__.c)(),dataSource=_useAllDataSource2.dataSource,isLoading=_useAllDataSource2.isLoading;return react__WEBPACK_IMPORTED_MODULE_18___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_17__.a,{style:{height:400,overflow:"auto"},useOuterBorder:!0,isLoading:isLoading,dataSource:dataSource,columns:[{lock:!0,width:80,name:"index",getValue:function getValue(record,rowIndex){return rowIndex}},_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_19__.a.updateTime,_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_19__.a.provinceName,_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_19__.a.cityName].concat(_toConsumableArray(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_19__.a.indCols))})};滚动容器为指定高度的div.displayName="滚动容器为指定高度的div";var 双向虚拟滚动=function 双向虚拟滚动(){for(var _useAllDataSource3=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_19__.c)(),dataSource=_useAllDataSource3.dataSource,isLoading=_useAllDataSource3.isLoading,repeatedColumns=[],i=0;i<1e3;i++){var _step,_iterator=_createForOfIteratorHelper(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_19__.a.indCols);try{for(_iterator.s();!(_step=_iterator.n()).done;){var col=_step.value;repeatedColumns.push(Object.assign({},col,{name:"copy-".concat(i," ").concat(col.name)}))}}catch(err){_iterator.e(err)}finally{_iterator.f()}}return react__WEBPACK_IMPORTED_MODULE_18___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_17__.a,{isLoading:isLoading,useVirtual:!0,dataSource:[dataSource,dataSource,dataSource,dataSource,dataSource].flat(),columns:[{lock:!0,width:80,name:"index",getValue:function getValue(record,rowIndex){return rowIndex}},_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_19__.a.updateTime,_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_19__.a.provinceName,_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_19__.a.cityName].concat(repeatedColumns)})};双向虚拟滚动.displayName="双向虚拟滚动",滚动容器为window.parameters=Object.assign({storySource:{source:"function 滚动容器为window() {\n  const { dataSource, isLoading } = useAllDataSource()\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      dataSource={dataSource}\n      columns={[\n        {\n          lock: true,\n          width: 80,\n          name: 'index',\n          getValue(record: any, rowIndex: number) {\n            return rowIndex\n          },\n        },\n        cols.updateTime,\n        cols.provinceName,\n        cols.cityName,\n        ...cols.indCols,\n      ]}\n    />\n  )\n}"}},滚动容器为window.parameters),滚动容器为指定高度的div.parameters=Object.assign({storySource:{source:"function 滚动容器为指定高度的div() {\n  const { dataSource, isLoading } = useAllDataSource()\n  return (\n    <BaseTable\n      style={{ height: 400, overflow: 'auto' }}\n      useOuterBorder\n      isLoading={isLoading}\n      dataSource={dataSource}\n      columns={[\n        {\n          lock: true,\n          width: 80,\n          name: 'index',\n          getValue(record: any, rowIndex: number) {\n            return rowIndex\n          },\n        },\n        cols.updateTime,\n        cols.provinceName,\n        cols.cityName,\n        ...cols.indCols,\n      ]}\n    />\n  )\n}"}},滚动容器为指定高度的div.parameters),双向虚拟滚动.parameters=Object.assign({storySource:{source:"function 双向虚拟滚动() {\n  const { dataSource, isLoading } = useAllDataSource()\n  const repeatedColumns: ArtColumn[] = []\n\n  for (let i = 0; i < 1000; i++) {\n    for (const col of cols.indCols) {\n      repeatedColumns.push({ ...col, name: `copy-${i} ${col.name}` })\n    }\n  }\n\n  return (\n    <BaseTable\n      isLoading={isLoading}\n      useVirtual={true}\n      dataSource={[dataSource, dataSource, dataSource, dataSource, dataSource].flat()}\n      columns={[\n        {\n          lock: true,\n          width: 80,\n          name: 'index',\n          getValue(record: any, rowIndex: number) {\n            return rowIndex\n          },\n        },\n        cols.updateTime,\n        cols.provinceName,\n        cols.cityName,\n        ...repeatedColumns,\n      ]}\n    />\n  )\n}"}},双向虚拟滚动.parameters)},2165:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"投入产出分析表格",(function(){return 投入产出分析表格}));__webpack_require__(33),__webpack_require__(44),__webpack_require__(7);var _alifd_next__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(282),ali_react_table__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(151),ali_react_table__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(55),ali_react_table__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(244),ali_react_table__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(525),react__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_8___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_8__),styled_components__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(40),_assets_format__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(12),_assets_fusion_style__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(63),HintDiv=styled_components__WEBPACK_IMPORTED_MODULE_9__.b.div.withConfig({displayName:"ROI-analysis-tablestories__HintDiv",componentId:"nlx0c4-0"})(["margin-bottom:16px;font-size:16px;color:darkred;"]);var pbp=ali_react_table__WEBPACK_IMPORTED_MODULE_4__.a.array({align:"right",render:_assets_format__WEBPACK_IMPORTED_MODULE_10__.c,width:100,features:ali_react_table__WEBPACK_IMPORTED_MODULE_4__.a.object({pbp:!0,dateOrder:ali_react_table__WEBPACK_IMPORTED_MODULE_4__.a.number})}),PbpRatioCell=styled_components__WEBPACK_IMPORTED_MODULE_9__.b.div.withConfig({displayName:"ROI-analysis-tablestories__PbpRatioCell",componentId:"nlx0c4-1"})(["width:100%;height:100%;display:flex;align-items:center;justify-content:flex-end;cursor:pointer;padding-right:12px;user-select:none;:hover{background:#d6d6d6;}"]);function redIfSmallerThanZero(v){if(v<0)return{style:{background:"#f9cace"}}}function rowRender(value,row,rowIndex){return row.render(value,row,rowIndex)}function pbpRatioRender(v,col,row){if(isNaN(v)||null==v)return null;var dateOrder=col.features.dateOrder,getTableRow=function getTableRow(codePrefix,name,render){var current=row["".concat(codePrefix,"day").concat(dateOrder)],left1=row["".concat(codePrefix,"day").concat(dateOrder-1)];return{name:name,current:current,left1:left1,left2:row["".concat(codePrefix,"day").concat(dateOrder-2)],lfl:(current-left1)/left1,render:render}},pbp_rate=getTableRow("pbp_rate_","回本率",_assets_format__WEBPACK_IMPORTED_MODULE_10__.c),app_trd_amt=getTableRow("app_trd_amt_","线上GMV",_assets_format__WEBPACK_IMPORTED_MODULE_10__.a),pos_trd_amt=getTableRow("pos_trd_amt_","线下GMV",_assets_format__WEBPACK_IMPORTED_MODULE_10__.a),market_cost=getTableRow("market_cost_","营销费用",_assets_format__WEBPACK_IMPORTED_MODULE_10__.a),net_profit=getTableRow("net_profit_","净利额",_assets_format__WEBPACK_IMPORTED_MODULE_10__.a),currentCol={name:"第".concat(dateOrder,"天"),code:"current",align:"right",getCellProps:redIfSmallerThanZero,render:rowRender},left1Col={name:"第".concat(dateOrder-1,"天"),code:"left1",align:"right",getCellProps:redIfSmallerThanZero,render:rowRender},left2Col={name:"第".concat(dateOrder-2,"天"),code:"left2",align:"right",getCellProps:redIfSmallerThanZero,render:rowRender},lflCol={name:"对比第".concat(dateOrder-1,"天"),code:"lfl",align:"right",render:_assets_format__WEBPACK_IMPORTED_MODULE_10__.b},dataSource=[pbp_rate,app_trd_amt,pos_trd_amt,market_cost,net_profit];return react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_3__.a,{trigger:react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(PbpRatioCell,null,Object(_assets_format__WEBPACK_IMPORTED_MODULE_10__.c)(v)),closable:!1,triggerType:"click",style:{maxWidth:"none",width:500}},react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_5__.a,{columns:[{name:"明细",code:"name"},{name:"".concat(row.stat_date," 第").concat(dateOrder,"天"),align:"center",children:[currentCol,dateOrder>=2&&lflCol].filter(Boolean)},dateOrder>=2&&left1Col,dateOrder>=3&&left2Col].filter(Boolean),dataSource:dataSource}))}pbpRatioRender.displayName="pbpRatioRender",__webpack_exports__.default={parameters:{storySource:{source:"import * as hippo from '@alifd/next'\nimport { applyTransforms, ArtColumn, BaseTable, proto, traverseColumn } from 'ali-react-table'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { amount, lfl, ratio } from '../../assets/format'\nimport { FusionStyles } from '../../assets/fusion-style'\n\nconst HintDiv = styled.div`\n  margin-bottom: 16px;\n  font-size: 16px;\n  color: darkred;\n`\n\nfunction generateRandomData() {\n  const mockData: any[] = []\n\n  const randomPbpRate = () => {\n    const array = [0.3, 0.4, 0.5, 0.6]\n    return array[Math.floor(Math.random() * array.length)]\n  }\n\n  const randomAppTrdAmt = () => {\n    const array = [300, 400, 500, 600]\n    return array[Math.floor(Math.random() * array.length)]\n  }\n\n  const randomPosTrdAmt = () => {\n    const array = [400, 500, 600, 800]\n    return array[Math.floor(Math.random() * array.length)]\n  }\n\n  const randomMarketCost = () => {\n    const array = [100, 200, 300, 500]\n    return array[Math.floor(Math.random() * array.length)]\n  }\n\n  const randomNetProfit = () => {\n    const array = [100, 200, 300]\n    return array[Math.floor(Math.random() * array.length)]\n  }\n\n  for (let i = 1; i <= 11; i++) {\n    const item: any = {\n      stat_date: `3月${i}号`,\n      pbp_rate_stage1: 0.4,\n      pbp_rate_stage2: 0.5,\n      pbp_rate_stage3: 0.6,\n    }\n\n    for (let d = 1; d <= 10; d++) {\n      if (d + i <= 11) {\n        item[`pbp_rate_day${d}`] = randomPbpRate()\n        item[`app_trd_amt_day${d}`] = randomAppTrdAmt()\n        item[`pos_trd_amt_day${d}`] = randomPosTrdAmt()\n        item[`market_cost_day${d}`] = randomMarketCost()\n        item[`net_profit_day${d}`] = randomNetProfit()\n      }\n    }\n\n    mockData.push(item)\n  }\n\n  return mockData\n}\n\nconst pbp = proto.array<ArtColumn>({\n  align: 'right',\n  render: ratio,\n  width: 100,\n  features: proto.object({\n    pbp: true,\n    dateOrder: proto.number,\n  }),\n})\n\nconst PbpRatioCell = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  cursor: pointer;\n  padding-right: 12px;\n  user-select: none;\n\n  :hover {\n    background: #d6d6d6;\n  }\n`\n\nfunction redIfSmallerThanZero(v: number) {\n  if (v < 0) {\n    return { style: { background: '#f9cace' } }\n  }\n}\n\n/** 使用 row.render 来渲染单元格 */\nfunction rowRender(value: any, row: any, rowIndex: number) {\n  return row.render(value, row, rowIndex)\n}\n\nfunction pbpRatioRender(v: number, col: ArtColumn, row: any) {\n  if (isNaN(v) || v == null) {\n    return null\n  }\n\n  const dateOrder = col.features.dateOrder\n\n  const getTableRow = (codePrefix: string, name: string, render: any) => {\n    const current = row[`${codePrefix}day${dateOrder}`]\n    const left1 = row[`${codePrefix}day${dateOrder - 1}`]\n    const left2 = row[`${codePrefix}day${dateOrder - 2}`]\n    const lfl = (current - left1) / left1\n    return { name, current, left1, left2, lfl, render }\n  }\n\n  const pbp_rate = getTableRow('pbp_rate_', '回本率', ratio)\n  const app_trd_amt = getTableRow('app_trd_amt_', '线上GMV', amount)\n  const pos_trd_amt = getTableRow('pos_trd_amt_', '线下GMV', amount)\n  const market_cost = getTableRow('market_cost_', '营销费用', amount)\n  const net_profit = getTableRow('net_profit_', '净利额', amount)\n\n  const currentCol = {\n    name: `第${dateOrder}天`,\n    code: 'current',\n    align: 'right' as const,\n    getCellProps: redIfSmallerThanZero,\n    render: rowRender,\n  }\n  const left1Col = {\n    name: `第${dateOrder - 1}天`,\n    code: 'left1',\n    align: 'right' as const,\n    getCellProps: redIfSmallerThanZero,\n    render: rowRender,\n  }\n  const left2Col = {\n    name: `第${dateOrder - 2}天`,\n    code: 'left2',\n    align: 'right' as const,\n    getCellProps: redIfSmallerThanZero,\n    render: rowRender,\n  }\n  const lflCol = {\n    name: `对比第${dateOrder - 1}天`,\n    code: 'lfl',\n    align: 'right' as const,\n    render: lfl,\n  }\n\n  const dataSource = [pbp_rate, app_trd_amt, pos_trd_amt, market_cost, net_profit]\n\n  return (\n    <hippo.Balloon\n      trigger={<PbpRatioCell>{ratio(v)}</PbpRatioCell>}\n      closable={false}\n      triggerType=\"click\"\n      style={{ maxWidth: 'none', width: 500 }}\n    >\n      <BaseTable\n        columns={[\n          { name: '明细', code: 'name' },\n          {\n            name: `${row.stat_date} 第${dateOrder}天`,\n            align: 'center' as const,\n            children: [currentCol, dateOrder >= 2 && lflCol].filter(Boolean),\n          },\n          dateOrder >= 2 && left1Col,\n          dateOrder >= 3 && left2Col,\n        ].filter(Boolean)}\n        dataSource={dataSource}\n      />\n    </hippo.Balloon>\n  )\n}\n\nexport default { title: '示例 / 业务示例 / 投入产出分析表格' }\n\nexport function 投入产出分析表格() {\n  const dataSource = useMemo(() => generateRandomData(), [])\n\n  const columnProto = proto.array<ArtColumn>({ width: 100, align: 'right' })\n\n  const columns = columnProto([\n    { lock: true, code: 'stat_date', name: '日期' },\n    {\n      name: '阶段情况',\n      align: 'left',\n      children: columnProto([\n        { code: 'pbp_rate_stage1', name: '阶段1回本率', render: ratio },\n        { code: 'pbp_rate_stage2', name: '阶段2回本率', render: ratio },\n        { code: 'pbp_rate_stage3', name: '阶段3回本率', render: ratio },\n      ]),\n    },\n    {\n      name: '分日情况',\n      align: 'left',\n      children: pbp([\n        { code: 'pbp_rate_day1', name: '第1天回本率', features: { dateOrder: 1 } },\n        { code: 'pbp_rate_day2', name: '第2天回本率', features: { dateOrder: 2 } },\n        { code: 'pbp_rate_day3', name: '第3天回本率', features: { dateOrder: 3 } },\n        { code: 'pbp_rate_day4', name: '第4天回本率', features: { dateOrder: 4 } },\n        { code: 'pbp_rate_day5', name: '第5天回本率', features: { dateOrder: 5 } },\n        { code: 'pbp_rate_day6', name: '第6天回本率', features: { dateOrder: 6 } },\n        { code: 'pbp_rate_day7', name: '第7天回本率', features: { dateOrder: 7 } },\n        { code: 'pbp_rate_day8', name: '第8天回本率', features: { dateOrder: 8 } },\n        { code: 'pbp_rate_day9', name: '第9天回本率', features: { dateOrder: 9 } },\n        { code: 'pbp_rate_day10', name: '第10天回本率', features: { dateOrder: 10 } },\n      ]),\n    },\n  ])\n\n  const renderData = applyTransforms(\n    { dataSource: dataSource, columns },\n    traverseColumn((col) => {\n      if (!col.features?.pbp) {\n        return col\n      }\n      return {\n        ...col,\n        getCellProps() {\n          return { style: { padding: 0 } }\n        },\n        render(v: number, row: any) {\n          return pbpRatioRender(v, col, row)\n        },\n      }\n    }),\n  )\n\n  return (\n    <div>\n      <FusionStyles />\n      <HintDiv>交互提示：点击分日情况单元格 查看详细数据</HintDiv>\n      <BaseTable columns={renderData.columns} dataSource={renderData.dataSource} />\n    </div>\n  )\n}\n",locationsMap:{"投入产出分析表格":{startLoc:{col:7,line:179},endLoc:{col:1,line:238},startBody:{col:7,line:179},endBody:{col:1,line:238}}}}},title:"示例 / 业务示例 / 投入产出分析表格"};var 投入产出分析表格=function 投入产出分析表格(){var dataSource=Object(react__WEBPACK_IMPORTED_MODULE_8__.useMemo)((function(){return function generateRandomData(){for(var mockData=[],randomPbpRate=function randomPbpRate(){var array=[.3,.4,.5,.6];return array[Math.floor(Math.random()*array.length)]},randomAppTrdAmt=function randomAppTrdAmt(){var array=[300,400,500,600];return array[Math.floor(Math.random()*array.length)]},randomPosTrdAmt=function randomPosTrdAmt(){var array=[400,500,600,800];return array[Math.floor(Math.random()*array.length)]},randomMarketCost=function randomMarketCost(){var array=[100,200,300,500];return array[Math.floor(Math.random()*array.length)]},randomNetProfit=function randomNetProfit(){var array=[100,200,300];return array[Math.floor(Math.random()*array.length)]},i=1;i<=11;i++){for(var item={stat_date:"3月".concat(i,"号"),pbp_rate_stage1:.4,pbp_rate_stage2:.5,pbp_rate_stage3:.6},d=1;d<=10;d++)d+i<=11&&(item["pbp_rate_day".concat(d)]=randomPbpRate(),item["app_trd_amt_day".concat(d)]=randomAppTrdAmt(),item["pos_trd_amt_day".concat(d)]=randomPosTrdAmt(),item["market_cost_day".concat(d)]=randomMarketCost(),item["net_profit_day".concat(d)]=randomNetProfit());mockData.push(item)}return mockData}()}),[]),columnProto=ali_react_table__WEBPACK_IMPORTED_MODULE_4__.a.array({width:100,align:"right"}),columns=columnProto([{lock:!0,code:"stat_date",name:"日期"},{name:"阶段情况",align:"left",children:columnProto([{code:"pbp_rate_stage1",name:"阶段1回本率",render:_assets_format__WEBPACK_IMPORTED_MODULE_10__.c},{code:"pbp_rate_stage2",name:"阶段2回本率",render:_assets_format__WEBPACK_IMPORTED_MODULE_10__.c},{code:"pbp_rate_stage3",name:"阶段3回本率",render:_assets_format__WEBPACK_IMPORTED_MODULE_10__.c}])},{name:"分日情况",align:"left",children:pbp([{code:"pbp_rate_day1",name:"第1天回本率",features:{dateOrder:1}},{code:"pbp_rate_day2",name:"第2天回本率",features:{dateOrder:2}},{code:"pbp_rate_day3",name:"第3天回本率",features:{dateOrder:3}},{code:"pbp_rate_day4",name:"第4天回本率",features:{dateOrder:4}},{code:"pbp_rate_day5",name:"第5天回本率",features:{dateOrder:5}},{code:"pbp_rate_day6",name:"第6天回本率",features:{dateOrder:6}},{code:"pbp_rate_day7",name:"第7天回本率",features:{dateOrder:7}},{code:"pbp_rate_day8",name:"第8天回本率",features:{dateOrder:8}},{code:"pbp_rate_day9",name:"第9天回本率",features:{dateOrder:9}},{code:"pbp_rate_day10",name:"第10天回本率",features:{dateOrder:10}}])}]),renderData=Object(ali_react_table__WEBPACK_IMPORTED_MODULE_6__.a)({dataSource:dataSource,columns:columns},Object(ali_react_table__WEBPACK_IMPORTED_MODULE_7__.a)((function(col){var _col$features;return(null===(_col$features=col.features)||void 0===_col$features?void 0:_col$features.pbp)?Object.assign({},col,{getCellProps:function getCellProps(){return{style:{padding:0}}},render:function render(v,row){return pbpRatioRender(v,col,row)}}):col})));return react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(_assets_fusion_style__WEBPACK_IMPORTED_MODULE_11__.a,null),react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(HintDiv,null,"交互提示：点击分日情况单元格 查看详细数据"),react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_5__.a,{columns:renderData.columns,dataSource:renderData.dataSource}))};投入产出分析表格.displayName="投入产出分析表格",投入产出分析表格.parameters=Object.assign({storySource:{source:"function 投入产出分析表格() {\n  const dataSource = useMemo(() => generateRandomData(), [])\n\n  const columnProto = proto.array<ArtColumn>({ width: 100, align: 'right' })\n\n  const columns = columnProto([\n    { lock: true, code: 'stat_date', name: '日期' },\n    {\n      name: '阶段情况',\n      align: 'left',\n      children: columnProto([\n        { code: 'pbp_rate_stage1', name: '阶段1回本率', render: ratio },\n        { code: 'pbp_rate_stage2', name: '阶段2回本率', render: ratio },\n        { code: 'pbp_rate_stage3', name: '阶段3回本率', render: ratio },\n      ]),\n    },\n    {\n      name: '分日情况',\n      align: 'left',\n      children: pbp([\n        { code: 'pbp_rate_day1', name: '第1天回本率', features: { dateOrder: 1 } },\n        { code: 'pbp_rate_day2', name: '第2天回本率', features: { dateOrder: 2 } },\n        { code: 'pbp_rate_day3', name: '第3天回本率', features: { dateOrder: 3 } },\n        { code: 'pbp_rate_day4', name: '第4天回本率', features: { dateOrder: 4 } },\n        { code: 'pbp_rate_day5', name: '第5天回本率', features: { dateOrder: 5 } },\n        { code: 'pbp_rate_day6', name: '第6天回本率', features: { dateOrder: 6 } },\n        { code: 'pbp_rate_day7', name: '第7天回本率', features: { dateOrder: 7 } },\n        { code: 'pbp_rate_day8', name: '第8天回本率', features: { dateOrder: 8 } },\n        { code: 'pbp_rate_day9', name: '第9天回本率', features: { dateOrder: 9 } },\n        { code: 'pbp_rate_day10', name: '第10天回本率', features: { dateOrder: 10 } },\n      ]),\n    },\n  ])\n\n  const renderData = applyTransforms(\n    { dataSource: dataSource, columns },\n    traverseColumn((col) => {\n      if (!col.features?.pbp) {\n        return col\n      }\n      return {\n        ...col,\n        getCellProps() {\n          return { style: { padding: 0 } }\n        },\n        render(v: number, row: any) {\n          return pbpRatioRender(v, col, row)\n        },\n      }\n    }),\n  )\n\n  return (\n    <div>\n      <FusionStyles />\n      <HintDiv>交互提示：点击分日情况单元格 查看详细数据</HintDiv>\n      <BaseTable columns={renderData.columns} dataSource={renderData.dataSource} />\n    </div>\n  )\n}"}},投入产出分析表格.parameters)},2166:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"典型数据报表",(function(){return 典型数据报表}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(33),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(167),__webpack_require__(2167),__webpack_require__(7),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);var ali_react_table__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(244),ali_react_table__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(523),ali_react_table__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(55),ali_react_table__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(58),ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(243),ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__(924),react__WEBPACK_IMPORTED_MODULE_23__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_23___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_23__),rxjs__WEBPACK_IMPORTED_MODULE_24__=__webpack_require__(279),_assets_cdn_data__WEBPACK_IMPORTED_MODULE_25__=__webpack_require__(80);function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={parameters:{storySource:{source:"import { applyTransforms, ArtColumn, BaseTable, isLeafNode, makeTreeModeTransform } from 'ali-react-table'\nimport { buildDrillTree, buildRecordMap, DrillNode } from 'ali-react-table/pivot'\nimport React, { useEffect, useState } from 'react'\nimport { identity } from 'rxjs'\nimport { getAppTrafficData } from '../../assets/cdn-data'\n\nexport default { title: '示例 / 业务示例 / 典型数据报表' }\n\nconst amount = (v: any) => Number(v).toFixed(2)\nconst ratio = (v: any) => `${(Number(v) * 100).toFixed(2)}%`\n\nexport function 典型数据报表() {\n  const indicatorTree: ArtColumn[] = [\n    {\n      name: 'APP指标',\n      code: 'app_qty_pbt',\n      render: String,\n      children: [\n        { code: 'imp_uv_dau_pct', name: '曝光UV占DAU比例', render: ratio },\n        {\n          code: 'all_app_trd_amt_1d',\n          name: 'APP成交金额汇总',\n          render(value: any, record: any, recordIndex: number) {\n            return amount(value)\n          },\n          getCellProps(value: any, record: any, recordIndex: number) {\n            if (value > 30) {\n              return { style: { color: 'red' } }\n            }\n          },\n        },\n        { code: 'app_trd_usr_cnt_1d', name: 'APP成交用户数', render: amount },\n      ],\n    },\n    {\n      name: '转换率',\n      code: 'all_imp2pay_rate',\n      render: ratio,\n      children: [\n        { code: 'all_imp2pay_rate', name: '整体曝光至成交转化率', render: ratio },\n        { code: 'search_imp2pay_rate', name: '搜索曝光至成交转化率', render: ratio },\n        { code: 'classis_imp2pay_rate', name: '分类曝光至成交转化率', render: ratio },\n        { code: 'cart_imp2pay_rate', name: '购物车曝光至成交转化率', render: ratio },\n      ],\n    },\n  ]\n\n  const mainCol: ArtColumn = {\n    name: '指标',\n    width: 200,\n    lock: true,\n    render(value: any, record: any, recordIndex: number) {\n      return record.name\n    },\n  }\n\n  const [state, setState] = useState({\n    isLoading: true,\n    columns: [] as ArtColumn[],\n  })\n\n  useEffect(() => {\n    getAppTrafficData().then((data) => {\n      const codes = ['city_name', 'shop_name']\n      const topTree = buildDrillTree(data, codes)\n      const recordMap = buildRecordMap({ data, codes })\n\n      // 动态生成表格列\n      const columns = convertDrillTreeToColumns(recordMap, topTree)\n      setState({ isLoading: false, columns })\n    })\n  }, [])\n\n  const [openKeys, onChangeOpenKeys] = useState(['APP指标', '转换率'])\n\n  const renderData = applyTransforms(\n    // 使用 indicatorTree 作为 dataSource，因为现在表格行和指标树是对应的\n    { columns: [mainCol, ...state.columns], dataSource: indicatorTree },\n    makeTreeModeTransform({ primaryKey: 'name', openKeys, onChangeOpenKeys, indentSize: 20 }),\n  )\n\n  return <BaseTable dataSource={renderData.dataSource} columns={renderData.columns} isLoading={state.isLoading} />\n\n  function convertDrillTreeToColumns(recordMap: Map<string, any>, nodes: DrillNode[]): ArtColumn[] {\n    const result: ArtColumn[] = []\n    for (const node of nodes) {\n      result.push({\n        name: node.value,\n        code: node.key,\n        render(_v, { code, render }) {\n          const record = recordMap.get(node.key)\n          return (render ?? identity)(record?.[code])\n        },\n        getCellProps(_v, { code, getCellProps }) {\n          const record = recordMap.get(node.key)\n          if (getCellProps != null) {\n            return getCellProps(record?.[code])\n          }\n        },\n        width: 150,\n        children: isLeafNode(node) ? null : convertDrillTreeToColumns(recordMap, node.children),\n      })\n    }\n    return result\n  }\n}\n",locationsMap:{"典型数据报表":{startLoc:{col:7,line:12},endLoc:{col:1,line:106},startBody:{col:7,line:12},endBody:{col:1,line:106}}}}},title:"示例 / 业务示例 / 典型数据报表"};var amount=function amount(v){return Number(v).toFixed(2)},ratio=function ratio(v){return"".concat((100*Number(v)).toFixed(2),"%")},典型数据报表=function 典型数据报表(){var indicatorTree=[{name:"APP指标",code:"app_qty_pbt",render:String,children:[{code:"imp_uv_dau_pct",name:"曝光UV占DAU比例",render:ratio},{code:"all_app_trd_amt_1d",name:"APP成交金额汇总",render:function render(value,record,recordIndex){return amount(value)},getCellProps:function getCellProps(value,record,recordIndex){if(value>30)return{style:{color:"red"}}}},{code:"app_trd_usr_cnt_1d",name:"APP成交用户数",render:amount}]},{name:"转换率",code:"all_imp2pay_rate",render:ratio,children:[{code:"all_imp2pay_rate",name:"整体曝光至成交转化率",render:ratio},{code:"search_imp2pay_rate",name:"搜索曝光至成交转化率",render:ratio},{code:"classis_imp2pay_rate",name:"分类曝光至成交转化率",render:ratio},{code:"cart_imp2pay_rate",name:"购物车曝光至成交转化率",render:ratio}]}],_useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_23__.useState)({isLoading:!0,columns:[]}),2),state=_useState2[0],setState=_useState2[1];Object(react__WEBPACK_IMPORTED_MODULE_23__.useEffect)((function(){Object(_assets_cdn_data__WEBPACK_IMPORTED_MODULE_25__.a)().then((function(data){var codes=["city_name","shop_name"],topTree=Object(ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_21__.a)(data,codes),columns=function convertDrillTreeToColumns(recordMap,nodes){var _step,result=[],_loop=function _loop(node){result.push({name:node.value,code:node.key,render:function render(_v,_ref){var code=_ref.code,_render=_ref.render,record=recordMap.get(node.key);return(null!=_render?_render:rxjs__WEBPACK_IMPORTED_MODULE_24__.a)(null==record?void 0:record[code])},getCellProps:function getCellProps(_v,_ref2){var code=_ref2.code,_getCellProps=_ref2.getCellProps,record=recordMap.get(node.key);if(null!=_getCellProps)return _getCellProps(null==record?void 0:record[code])},width:150,children:Object(ali_react_table__WEBPACK_IMPORTED_MODULE_20__.a)(node)?null:convertDrillTreeToColumns(recordMap,node.children)})},_iterator=function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e2){throw _e2},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e3){didErr=!0,err=_e3},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}(nodes);try{for(_iterator.s();!(_step=_iterator.n()).done;){var node=_step.value;_loop(node)}}catch(err){_iterator.e(err)}finally{_iterator.f()}return result}(Object(ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_22__.a)({data:data,codes:codes}),topTree);setState({isLoading:!1,columns:columns})}))}),[]);var _useState4=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_23__.useState)(["APP指标","转换率"]),2),openKeys=_useState4[0],onChangeOpenKeys=_useState4[1],renderData=Object(ali_react_table__WEBPACK_IMPORTED_MODULE_17__.a)({columns:[{name:"指标",width:200,lock:!0,render:function render(value,record,recordIndex){return record.name}}].concat(_toConsumableArray(state.columns)),dataSource:indicatorTree},Object(ali_react_table__WEBPACK_IMPORTED_MODULE_18__.a)({primaryKey:"name",openKeys:openKeys,onChangeOpenKeys:onChangeOpenKeys,indentSize:20}));return react__WEBPACK_IMPORTED_MODULE_23___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_19__.a,{dataSource:renderData.dataSource,columns:renderData.columns,isLoading:state.isLoading})};典型数据报表.parameters=Object.assign({storySource:{source:"function 典型数据报表() {\n  const indicatorTree: ArtColumn[] = [\n    {\n      name: 'APP指标',\n      code: 'app_qty_pbt',\n      render: String,\n      children: [\n        { code: 'imp_uv_dau_pct', name: '曝光UV占DAU比例', render: ratio },\n        {\n          code: 'all_app_trd_amt_1d',\n          name: 'APP成交金额汇总',\n          render(value: any, record: any, recordIndex: number) {\n            return amount(value)\n          },\n          getCellProps(value: any, record: any, recordIndex: number) {\n            if (value > 30) {\n              return { style: { color: 'red' } }\n            }\n          },\n        },\n        { code: 'app_trd_usr_cnt_1d', name: 'APP成交用户数', render: amount },\n      ],\n    },\n    {\n      name: '转换率',\n      code: 'all_imp2pay_rate',\n      render: ratio,\n      children: [\n        { code: 'all_imp2pay_rate', name: '整体曝光至成交转化率', render: ratio },\n        { code: 'search_imp2pay_rate', name: '搜索曝光至成交转化率', render: ratio },\n        { code: 'classis_imp2pay_rate', name: '分类曝光至成交转化率', render: ratio },\n        { code: 'cart_imp2pay_rate', name: '购物车曝光至成交转化率', render: ratio },\n      ],\n    },\n  ]\n\n  const mainCol: ArtColumn = {\n    name: '指标',\n    width: 200,\n    lock: true,\n    render(value: any, record: any, recordIndex: number) {\n      return record.name\n    },\n  }\n\n  const [state, setState] = useState({\n    isLoading: true,\n    columns: [] as ArtColumn[],\n  })\n\n  useEffect(() => {\n    getAppTrafficData().then((data) => {\n      const codes = ['city_name', 'shop_name']\n      const topTree = buildDrillTree(data, codes)\n      const recordMap = buildRecordMap({ data, codes })\n\n      // 动态生成表格列\n      const columns = convertDrillTreeToColumns(recordMap, topTree)\n      setState({ isLoading: false, columns })\n    })\n  }, [])\n\n  const [openKeys, onChangeOpenKeys] = useState(['APP指标', '转换率'])\n\n  const renderData = applyTransforms(\n    // 使用 indicatorTree 作为 dataSource，因为现在表格行和指标树是对应的\n    { columns: [mainCol, ...state.columns], dataSource: indicatorTree },\n    makeTreeModeTransform({ primaryKey: 'name', openKeys, onChangeOpenKeys, indentSize: 20 }),\n  )\n\n  return <BaseTable dataSource={renderData.dataSource} columns={renderData.columns} isLoading={state.isLoading} />\n\n  function convertDrillTreeToColumns(recordMap: Map<string, any>, nodes: DrillNode[]): ArtColumn[] {\n    const result: ArtColumn[] = []\n    for (const node of nodes) {\n      result.push({\n        name: node.value,\n        code: node.key,\n        render(_v, { code, render }) {\n          const record = recordMap.get(node.key)\n          return (render ?? identity)(record?.[code])\n        },\n        getCellProps(_v, { code, getCellProps }) {\n          const record = recordMap.get(node.key)\n          if (getCellProps != null) {\n            return getCellProps(record?.[code])\n          }\n        },\n        width: 150,\n        children: isLeafNode(node) ? null : convertDrillTreeToColumns(recordMap, node.children),\n      })\n    }\n    return result\n  }\n}"}},典型数据报表.parameters)},2170:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"RankTable",(function(){return RankTable}));__webpack_require__(7);var ali_react_table__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(55),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__),styled_components__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(40),_assets_format__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(12);__webpack_exports__.default={parameters:{storySource:{source:"import { BaseTable } from 'ali-react-table'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { amount, lfl } from '../../assets/format'\n\nexport default { title: '示例 / 业务示例 / 商品排行榜' }\n\nconst StyledBaseTable = styled(BaseTable)`\n  --border-color: none;\n  --header-bgcolor: none;\n  --row-height: 36px;\n\n  .art-table-header {\n    border-top: 1px solid #dfe3e8;\n    border-bottom: 1px solid #dfe3e8;\n  }\n\n  .art-table-header-cell {\n    height: 48px;\n  }\n`\n\nexport function RankTable() {\n  return (\n    <StyledBaseTable\n      style={{ paddingRight: 16 }}\n      columns={[\n        { name: '排名', code: 'rank', width: 50 },\n        { name: '商品名称', code: 'sku_name' },\n        { name: '指标', code: 'value', render: amount, width: 100, align: 'right' },\n        { name: '环比', code: 'rated', render: lfl, width: 100, align: 'right' },\n        { name: '周比', code: 'ratew', render: lfl, width: 100, align: 'right' },\n      ]}\n      dataSource={[\n        { rank: 1, sku_name: '青浦白鹤红颜草莓300g', value: 1234567, rated: 0.0123456, ratew: 0.087654 },\n        { rank: 2, sku_name: '凤达草鸡蛋12枚', value: 1234567, rated: 0.0123456, ratew: 0.087654 },\n        { rank: 3, sku_name: 'Dole进口甜香蕉650g', value: 1234567, rated: 0, ratew: -0.087654 },\n        { rank: 4, sku_name: '崇明芦笋350g', value: 1234567, rated: 0.0123456, ratew: 0.087654 },\n        { rank: 5, sku_name: '北海道原味吐司面包210g', value: 1234567, rated: -0.0123456, ratew: -0.087654 },\n        { rank: 6, sku_name: '盒马珍珠生虾仁150g', value: 1234567, rated: 0.0123456, ratew: 0.087654 },\n        { rank: 7, sku_name: '洛川红富士苹果4个', value: 1234567, rated: -0.0123456, ratew: -0.087654 },\n        { rank: 8, sku_name: '湾仔码头大白菜猪肉水饺300g', value: 1234567, rated: 0.0123456, ratew: 0.087654 },\n        { rank: 9, sku_name: '牛奶小蛋糕', value: 1234567, rated: 0.0123456, ratew: 0 },\n        { rank: 10, sku_name: '六记雄潮汕牛肉丸250g', value: 1234567, rated: 0.0123456, ratew: 0.087654 },\n      ]}\n    />\n  )\n}\n",locationsMap:{"rank-table":{startLoc:{col:7,line:23},endLoc:{col:1,line:48},startBody:{col:7,line:23},endBody:{col:1,line:48}}}}},title:"示例 / 业务示例 / 商品排行榜"};var StyledBaseTable=Object(styled_components__WEBPACK_IMPORTED_MODULE_3__.b)(ali_react_table__WEBPACK_IMPORTED_MODULE_1__.a).withConfig({displayName:"rank-tablestories__StyledBaseTable",componentId:"sc-1n8nyzt-0"})(["--border-color:none;--header-bgcolor:none;--row-height:36px;.art-table-header{border-top:1px solid #dfe3e8;border-bottom:1px solid #dfe3e8;}.art-table-header-cell{height:48px;}"]),RankTable=function RankTable(){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(StyledBaseTable,{style:{paddingRight:16},columns:[{name:"排名",code:"rank",width:50},{name:"商品名称",code:"sku_name"},{name:"指标",code:"value",render:_assets_format__WEBPACK_IMPORTED_MODULE_4__.a,width:100,align:"right"},{name:"环比",code:"rated",render:_assets_format__WEBPACK_IMPORTED_MODULE_4__.b,width:100,align:"right"},{name:"周比",code:"ratew",render:_assets_format__WEBPACK_IMPORTED_MODULE_4__.b,width:100,align:"right"}],dataSource:[{rank:1,sku_name:"青浦白鹤红颜草莓300g",value:1234567,rated:.0123456,ratew:.087654},{rank:2,sku_name:"凤达草鸡蛋12枚",value:1234567,rated:.0123456,ratew:.087654},{rank:3,sku_name:"Dole进口甜香蕉650g",value:1234567,rated:0,ratew:-.087654},{rank:4,sku_name:"崇明芦笋350g",value:1234567,rated:.0123456,ratew:.087654},{rank:5,sku_name:"北海道原味吐司面包210g",value:1234567,rated:-.0123456,ratew:-.087654},{rank:6,sku_name:"盒马珍珠生虾仁150g",value:1234567,rated:.0123456,ratew:.087654},{rank:7,sku_name:"洛川红富士苹果4个",value:1234567,rated:-.0123456,ratew:-.087654},{rank:8,sku_name:"湾仔码头大白菜猪肉水饺300g",value:1234567,rated:.0123456,ratew:.087654},{rank:9,sku_name:"牛奶小蛋糕",value:1234567,rated:.0123456,ratew:0},{rank:10,sku_name:"六记雄潮汕牛肉丸250g",value:1234567,rated:.0123456,ratew:.087654}]})};RankTable.displayName="RankTable",RankTable.parameters=Object.assign({storySource:{source:"function RankTable() {\n  return (\n    <StyledBaseTable\n      style={{ paddingRight: 16 }}\n      columns={[\n        { name: '排名', code: 'rank', width: 50 },\n        { name: '商品名称', code: 'sku_name' },\n        { name: '指标', code: 'value', render: amount, width: 100, align: 'right' },\n        { name: '环比', code: 'rated', render: lfl, width: 100, align: 'right' },\n        { name: '周比', code: 'ratew', render: lfl, width: 100, align: 'right' },\n      ]}\n      dataSource={[\n        { rank: 1, sku_name: '青浦白鹤红颜草莓300g', value: 1234567, rated: 0.0123456, ratew: 0.087654 },\n        { rank: 2, sku_name: '凤达草鸡蛋12枚', value: 1234567, rated: 0.0123456, ratew: 0.087654 },\n        { rank: 3, sku_name: 'Dole进口甜香蕉650g', value: 1234567, rated: 0, ratew: -0.087654 },\n        { rank: 4, sku_name: '崇明芦笋350g', value: 1234567, rated: 0.0123456, ratew: 0.087654 },\n        { rank: 5, sku_name: '北海道原味吐司面包210g', value: 1234567, rated: -0.0123456, ratew: -0.087654 },\n        { rank: 6, sku_name: '盒马珍珠生虾仁150g', value: 1234567, rated: 0.0123456, ratew: 0.087654 },\n        { rank: 7, sku_name: '洛川红富士苹果4个', value: 1234567, rated: -0.0123456, ratew: -0.087654 },\n        { rank: 8, sku_name: '湾仔码头大白菜猪肉水饺300g', value: 1234567, rated: 0.0123456, ratew: 0.087654 },\n        { rank: 9, sku_name: '牛奶小蛋糕', value: 1234567, rated: 0.0123456, ratew: 0 },\n        { rank: 10, sku_name: '六记雄潮汕牛肉丸250g', value: 1234567, rated: 0.0123456, ratew: 0.087654 },\n      ]}\n    />\n  )\n}"}},RankTable.parameters)},2171:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"RemainMatrix",(function(){return RemainMatrix}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(33),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(32),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(7),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);var ali_react_table__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__(55),ali_react_table__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(41),ali_react_table__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(151),d3__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(364),react__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_20___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_20__),styled_components__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(40),_assets_format__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__(12);function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var COLORS=["#E8F3FF","#D6E9FF","#ADD1FF","#85B6FF","#5790F2","#2E6BE6","#1D4DBF","#0F3499","#061F73","#03124D"],data=[{date:"1月04号",user_cnt:300,day1:.4,day2:.4,day3:.35,day4:.4,day5:.35,day6:.3,day7:.25},{date:"1月05号",user_cnt:350,day1:.4,day2:.36,day3:.45,day4:.3,day5:.3,day6:.2,day7:-1},{date:"1月06号",user_cnt:400,day1:.4,day2:.4,day3:.5,day4:.4,day5:.3,day6:-1,day7:-1},{date:"1月07号",user_cnt:350,day1:.45,day2:.4,day3:.3,day4:.2,day5:-1,day6:-1,day7:-1},{date:"1月08号",user_cnt:400,day1:.5,day2:.5,day3:.4,day4:-1,day5:-1,day6:-1,day7:-1},{date:"1月09号",user_cnt:500,day1:.6,day2:.48,day3:-1,day4:-1,day5:-1,day6:-1,day7:-1},{date:"1月10号",user_cnt:400,day1:.52,day2:-1,day3:-1,day4:-1,day5:-1,day6:-1,day7:-1}],colorIdx=d3__WEBPACK_IMPORTED_MODULE_19__.b().domain([.2,.6]).range(COLORS.map((function(c,i){return i})));__webpack_exports__.default={parameters:{storySource:{source:"import { ArtColumn, BaseTable, Classes, proto } from 'ali-react-table'\nimport * as d3 from 'd3'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { amount, ratio } from '../../assets/format'\n\nconst COLORS = [\n  '#E8F3FF',\n  '#D6E9FF',\n  '#ADD1FF',\n  '#85B6FF',\n  '#5790F2',\n  // 从这里开始字体颜色要变为白色\n  '#2E6BE6',\n  '#1D4DBF',\n  '#0F3499',\n  '#061F73',\n  '#03124D',\n]\n\nconst data = [\n  { date: '1月04号', user_cnt: 300, day1: 0.4, day2: 0.4, day3: 0.35, day4: 0.4, day5: 0.35, day6: 0.3, day7: 0.25 },\n  { date: '1月05号', user_cnt: 350, day1: 0.4, day2: 0.36, day3: 0.45, day4: 0.3, day5: 0.3, day6: 0.2, day7: -1 },\n  { date: '1月06号', user_cnt: 400, day1: 0.4, day2: 0.4, day3: 0.5, day4: 0.4, day5: 0.3, day6: -1, day7: -1 },\n  { date: '1月07号', user_cnt: 350, day1: 0.45, day2: 0.4, day3: 0.3, day4: 0.2, day5: -1, day6: -1, day7: -1 },\n  { date: '1月08号', user_cnt: 400, day1: 0.5, day2: 0.5, day3: 0.4, day4: -1, day5: -1, day6: -1, day7: -1 },\n  { date: '1月09号', user_cnt: 500, day1: 0.6, day2: 0.48, day3: -1, day4: -1, day5: -1, day6: -1, day7: -1 },\n  { date: '1月10号', user_cnt: 400, day1: 0.52, day2: -1, day3: -1, day4: -1, day5: -1, day6: -1, day7: -1 },\n]\n\nconst colorIdx = d3\n  .scaleQuantize()\n  .domain([0.2, 0.6])\n  .range(COLORS.map((c, i) => i))\n\nexport default { title: '示例 / 业务示例 / 用户留存矩阵' }\n\nconst StyledBaseTable = styled(BaseTable)`\n  --border-color: none;\n  --header-bgcolor: none;\n\n  .${Classes.tableHeader} {\n    border-top: 1px solid #dfe3e8;\n    border-bottom: 1px solid #dfe3e8;\n  }\n\n  .${Classes.tableHeaderCell} {\n    height: 48px;\n  }\n`\n\nexport function RemainMatrix() {\n  const remainCol = proto.array<ArtColumn>({\n    align: 'right',\n    render: remainRateWithCount,\n    getCellProps: getRemainCellProps,\n  })\n  return (\n    <StyledBaseTable\n      defaultColumnWidth={100}\n      columns={[\n        { code: 'date', name: '日期' },\n        { code: 'user_cnt', name: '用户数' },\n        ...remainCol([\n          { code: 'day1', name: '第一日' },\n          { code: 'day2', name: '第二日' },\n          { code: 'day3', name: '第三日' },\n          { code: 'day4', name: '第四日' },\n          { code: 'day5', name: '第五日' },\n          { code: 'day6', name: '第六日' },\n          { code: 'day7', name: '第七日' },\n        ]),\n      ]}\n      dataSource={data}\n    />\n  )\n\n  function getRemainCellProps(rate: any) {\n    if (rate == -1) {\n      return\n    }\n    const i = colorIdx(rate)\n    return {\n      style: {\n        backgroundColor: COLORS[i],\n        color: i <= 4 ? '#03124D' : 'white',\n      },\n    }\n  }\n\n  function remainRateWithCount(rate: any, record: any) {\n    if (rate == -1) {\n      return null\n    }\n    return (\n      <div style={{ lineHeight: '20px' }}>\n        <div>{ratio(rate)}</div>\n        <div>{amount(rate * record.user_cnt)}</div>\n      </div>\n    )\n  }\n}\n",locationsMap:{"remain-matrix":{startLoc:{col:7,line:52},endLoc:{col:1,line:102},startBody:{col:7,line:52},endBody:{col:1,line:102}}}}},title:"示例 / 业务示例 / 用户留存矩阵"};var StyledBaseTable=Object(styled_components__WEBPACK_IMPORTED_MODULE_21__.b)(ali_react_table__WEBPACK_IMPORTED_MODULE_16__.a).withConfig({displayName:"remain-matrixstories__StyledBaseTable",componentId:"sc-2c1y9k-0"})(["--border-color:none;--header-bgcolor:none;.","{border-top:1px solid #dfe3e8;border-bottom:1px solid #dfe3e8;}.","{height:48px;}"],ali_react_table__WEBPACK_IMPORTED_MODULE_17__.a.tableHeader,ali_react_table__WEBPACK_IMPORTED_MODULE_17__.a.tableHeaderCell),RemainMatrix=function RemainMatrix(){var remainCol=ali_react_table__WEBPACK_IMPORTED_MODULE_18__.a.array({align:"right",render:function remainRateWithCount(rate,record){if(-1==rate)return null;return react__WEBPACK_IMPORTED_MODULE_20___default.a.createElement("div",{style:{lineHeight:"20px"}},react__WEBPACK_IMPORTED_MODULE_20___default.a.createElement("div",null,Object(_assets_format__WEBPACK_IMPORTED_MODULE_22__.c)(rate)),react__WEBPACK_IMPORTED_MODULE_20___default.a.createElement("div",null,Object(_assets_format__WEBPACK_IMPORTED_MODULE_22__.a)(rate*record.user_cnt)))},getCellProps:function getRemainCellProps(rate){if(-1==rate)return;var i=colorIdx(rate);return{style:{backgroundColor:COLORS[i],color:i<=4?"#03124D":"white"}}}});return react__WEBPACK_IMPORTED_MODULE_20___default.a.createElement(StyledBaseTable,{defaultColumnWidth:100,columns:[{code:"date",name:"日期"},{code:"user_cnt",name:"用户数"}].concat(_toConsumableArray(remainCol([{code:"day1",name:"第一日"},{code:"day2",name:"第二日"},{code:"day3",name:"第三日"},{code:"day4",name:"第四日"},{code:"day5",name:"第五日"},{code:"day6",name:"第六日"},{code:"day7",name:"第七日"}]))),dataSource:data})};RemainMatrix.parameters=Object.assign({storySource:{source:"function RemainMatrix() {\n  const remainCol = proto.array<ArtColumn>({\n    align: 'right',\n    render: remainRateWithCount,\n    getCellProps: getRemainCellProps,\n  })\n  return (\n    <StyledBaseTable\n      defaultColumnWidth={100}\n      columns={[\n        { code: 'date', name: '日期' },\n        { code: 'user_cnt', name: '用户数' },\n        ...remainCol([\n          { code: 'day1', name: '第一日' },\n          { code: 'day2', name: '第二日' },\n          { code: 'day3', name: '第三日' },\n          { code: 'day4', name: '第四日' },\n          { code: 'day5', name: '第五日' },\n          { code: 'day6', name: '第六日' },\n          { code: 'day7', name: '第七日' },\n        ]),\n      ]}\n      dataSource={data}\n    />\n  )\n\n  function getRemainCellProps(rate: any) {\n    if (rate == -1) {\n      return\n    }\n    const i = colorIdx(rate)\n    return {\n      style: {\n        backgroundColor: COLORS[i],\n        color: i <= 4 ? '#03124D' : 'white',\n      },\n    }\n  }\n\n  function remainRateWithCount(rate: any, record: any) {\n    if (rate == -1) {\n      return null\n    }\n    return (\n      <div style={{ lineHeight: '20px' }}>\n        <div>{ratio(rate)}</div>\n        <div>{amount(rate * record.user_cnt)}</div>\n      </div>\n    )\n  }\n}"}},RemainMatrix.parameters)},2172:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"示例 / 其他组件 / 自定义列对话框",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"customcolumnsdialog"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h1"},"CustomColumnsDialog")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"p"},"这是一个已经在 1.0 被移除的组件，1.0 版本之后无法使用")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"自定义列对话框组件。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Canvas,{mdxType:"Canvas"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"示例-其他组件-自定义列对话框组件--自定义列对话框组件",mdxType:"Story"})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"必传的-props-列表"},"必传的 props 列表"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("table",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("thead",{parentName:"table"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"thead"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null}),"字段"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null}),"类型"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null}),"说明"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tbody",{parentName:"table"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"trigger")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"(onOpen: () => void)=> ReactNode")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"渲染自定列对话框的打开按钮/触发控件")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"checkedCodes")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"string[]")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"当前勾选的 code 列表")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"onChangeCheckedCodes")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"(nextCodes: string[])=> void")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"勾选 code 列表被改变时的回调函数")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"columns")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"ArtColumn[]")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"表格的列配置")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"components")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"typeof import('@alifd/next')")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"自定义列对话框使用的组件")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"可选的-props-列表"},"可选的 props 列表"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("table",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("thead",{parentName:"table"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"thead"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null}),"字段"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null}),"类型"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("th",_extends({parentName:"tr"},{align:null}),"说明"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tbody",{parentName:"table"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"defaultCheckedCodes")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"string[]")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"默认勾选的 code 列表")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"defaultVisible")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"boolean")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"自定义列对话框是否默认可见")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"style")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"React.CSSProperties")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"自定义样式")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"className")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"string")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"自定义 CSS 类名")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"enforceCheckedCodes")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"string[]")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"总是被选中的 字段列表")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"drawerProps")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"any")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"透传给 Drawer 组件的 props")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"showCheckAll")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"boolean")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"是否展示「全选」按钮")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"showUncheckAll")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"boolean")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"是否展示「全不选」按钮")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("tr",{parentName:"tbody"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"drawerComponent")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"td"},"React.ComponentType")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("td",_extends({parentName:"tr"},{align:null}),"优先使用的 Drawer 组件")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"使用说明"},"使用说明"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"components")," 目前支持 fusion v0/v1（对应 hippo v1/v2），使用时选择其中一个组件库即可。",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"自定义列对话框并没有用到所有的 fusion/hippo 组件，实际用到的组件如下：Button, Checkbox, PageDialog/Drawer"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"defaultCheckedCodes")," 并不是 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"checkedCodes")," 的默认值，而是指点击「恢复默认」按钮时调用 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"onChangeCheckedCodes(...)")," 时的参数的值",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"当 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"defaultCheckedCodes")," 非空时，「恢复默认」的按钮才会被渲染"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"columns")," 一般对应的表格的列配置",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"自定义列对话框只用到了列配置中的三个字段： code, name, children"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"通过 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"style['--action-color']")," 可以调整「全选」、「全不选」的颜色"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"配合 styled-components v3 使用时，需要手动传入 drawerComponent 属性，具体传入方式如下：")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-js"}),"import { Drawer } from '@alifd/next'\n\nconst StyledDrawer = CustomColumnsDialog.makeStyledDrawer(Drawer)\n// 或是 const StyledDrawer = CustomColumnsDialog.makeStyledDrawer(PageDialog)\n\n// 然后将 StyledDrawer 传递给 CustomColumnsDialog 组件：\n<CustomColumnsDialog drawerComponent={StyledDrawer} {...othersProps} />\n\n// 如果你是通过表格操作栏使用自定义列对话框组件，那么要在 feature 中设置 drawerComponent：\nconst features = [ { type: 'custom-columns', drawerComponent: StyledDrawer } ]\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"styled-components 目前的最新版本为 v5，推荐使用最新的版本")))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"示例 / 其他组件 / 自定义列对话框",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2173:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"自定义列对话框组件",(function(){return 自定义列对话框组件}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(44),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(32),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(7),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);var _alifd_next__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__(53),ali_react_table__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(151),ali_react_table__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(370),react__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_19___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_19__),react_json_view__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(202),react_json_view__WEBPACK_IMPORTED_MODULE_20___default=__webpack_require__.n(react_json_view__WEBPACK_IMPORTED_MODULE_20__),_assets_fusion_style__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(63),_components__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__(367);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={parameters:{storySource:{source:"import { Button } from '@alifd/next'\nimport { ArtColumn, collectNodes, proto } from 'ali-react-table'\nimport React, { useState } from 'react'\nimport ReactJson from 'react-json-view'\nimport { FusionStyles } from '../../assets/fusion-style'\nimport { CustomColumnsDialog } from './components'\n\nexport default { title: '示例 / 其他组件 / 自定义列对话框组件' }\n\nexport function 自定义列对话框组件() {\n  const defaultVisibleIndProto = proto.array<ArtColumn>({\n    features: { defaultVisible: true },\n  })\n\n  const defaultHiddenIntProto = proto.array<ArtColumn>({\n    features: { defaultVisible: false },\n  })\n\n  // 列配置\n  const columns: ArtColumn[] = [\n    {\n      name: '商品信息',\n      children: defaultVisibleIndProto([\n        { code: 'order', name: '序号', features: { enforceVisible: true } },\n        { code: 'sku_code', name: 'SKU code' },\n        { code: 'sku_name', name: 'SKU名称' },\n      ]),\n    },\n    {\n      name: '机构信息',\n      children: defaultHiddenIntProto([\n        { code: 'city_name', name: '城市' },\n        { code: 'shop_name', name: '门店' },\n      ]),\n    },\n    {\n      name: '类目信息',\n      children: defaultVisibleIndProto([\n        { code: 'merge_cate_level1_name', name: '一级类目' },\n        { code: 'merge_cate_level2_name', name: '二级类目' },\n        { code: 'merge_cate_level3_name', name: '三级类目' },\n      ]),\n    },\n    {\n      name: 'APP指标',\n      children: defaultVisibleIndProto([\n        { code: 'imp_uv_dau_pct', name: '曝光UV占DAU比例' },\n        { code: 'app_trd_amt_1d', name: 'APP成交金额' },\n        { code: 'app_qty_pbt', name: 'APP件单价' },\n        { code: 'all_app_trd_amt_1d', name: 'APP成交金额汇总' },\n        { code: 'app_trd_usr_cnt_1d', name: 'APP成交用户数' },\n        { code: 'appout_shop_num', name: '缺货门店数' },\n        { code: 'all_time_len', name: '店均缺货时长' },\n        { code: 'bad_rmk_rate', name: '订单差评率' },\n      ]),\n    },\n    {\n      name: '转换率',\n      children: defaultHiddenIntProto([\n        { code: 'all_imp2pay_rate', name: '整体曝光至成交转化率' },\n        { code: 'search_imp2pay_rate', name: '搜索曝光至成交转化率' },\n        { code: 'classis_imp2pay_rate', name: '分类曝光至成交转化率' },\n        { code: 'cart_imp2pay_rate', name: '购物车曝光至成交转化率' },\n        { code: 'my_page_imp2pay_rate', name: '我的曝光至成交转化率' },\n        { code: 'pq_act_imp2pay_rate', name: '活动页曝光至成交转化率' },\n        { code: 'other_imp2pay_rate', name: '其他曝光至成交转化率' },\n      ]),\n    },\n  ]\n\n  const leafColumns = collectNodes(columns, 'leaf-only')\n\n  const defaultCheckedCodes = leafColumns.filter((col) => col.features?.defaultVisible).map((col) => col.code)\n  const enforceCheckedCodes = leafColumns.filter((col) => col.features?.enforceVisible).map((col) => col.code)\n\n  const [checkedCodes, onChangeCheckedCodes] = useState(defaultCheckedCodes)\n\n  return (\n    <>\n      <CustomColumnsDialog\n        columns={columns}\n        checkedCodes={checkedCodes}\n        defaultCheckedCodes={defaultCheckedCodes}\n        enforceCheckedCodes={enforceCheckedCodes}\n        trigger={(onOpen) => (\n          <Button size=\"large\" type=\"primary\" onClick={onOpen}>\n            打开自定义列对话框\n          </Button>\n        )}\n        onChangeCheckedCodes={onChangeCheckedCodes}\n      />\n      <ReactJson\n        style={{ marginTop: 12 }}\n        src={columns.map((group) => ({\n          ...group,\n          children: group.children.map((col) => JSON.stringify(col, null, 1)),\n        }))}\n        name=\"对应的列配置：\"\n        collapsed={0}\n        enableClipboard={false}\n        displayDataTypes={false}\n        displayObjectSize={false}\n      />\n      <FusionStyles />\n    </>\n  )\n}\n",locationsMap:{"自定义列对话框组件":{startLoc:{col:7,line:10},endLoc:{col:1,line:107},startBody:{col:7,line:10},endBody:{col:1,line:107}}}}},title:"示例 / 其他组件 / 自定义列对话框组件"};var 自定义列对话框组件=function 自定义列对话框组件(){var defaultVisibleIndProto=ali_react_table__WEBPACK_IMPORTED_MODULE_17__.a.array({features:{defaultVisible:!0}}),defaultHiddenIntProto=ali_react_table__WEBPACK_IMPORTED_MODULE_17__.a.array({features:{defaultVisible:!1}}),columns=[{name:"商品信息",children:defaultVisibleIndProto([{code:"order",name:"序号",features:{enforceVisible:!0}},{code:"sku_code",name:"SKU code"},{code:"sku_name",name:"SKU名称"}])},{name:"机构信息",children:defaultHiddenIntProto([{code:"city_name",name:"城市"},{code:"shop_name",name:"门店"}])},{name:"类目信息",children:defaultVisibleIndProto([{code:"merge_cate_level1_name",name:"一级类目"},{code:"merge_cate_level2_name",name:"二级类目"},{code:"merge_cate_level3_name",name:"三级类目"}])},{name:"APP指标",children:defaultVisibleIndProto([{code:"imp_uv_dau_pct",name:"曝光UV占DAU比例"},{code:"app_trd_amt_1d",name:"APP成交金额"},{code:"app_qty_pbt",name:"APP件单价"},{code:"all_app_trd_amt_1d",name:"APP成交金额汇总"},{code:"app_trd_usr_cnt_1d",name:"APP成交用户数"},{code:"appout_shop_num",name:"缺货门店数"},{code:"all_time_len",name:"店均缺货时长"},{code:"bad_rmk_rate",name:"订单差评率"}])},{name:"转换率",children:defaultHiddenIntProto([{code:"all_imp2pay_rate",name:"整体曝光至成交转化率"},{code:"search_imp2pay_rate",name:"搜索曝光至成交转化率"},{code:"classis_imp2pay_rate",name:"分类曝光至成交转化率"},{code:"cart_imp2pay_rate",name:"购物车曝光至成交转化率"},{code:"my_page_imp2pay_rate",name:"我的曝光至成交转化率"},{code:"pq_act_imp2pay_rate",name:"活动页曝光至成交转化率"},{code:"other_imp2pay_rate",name:"其他曝光至成交转化率"}])}],leafColumns=Object(ali_react_table__WEBPACK_IMPORTED_MODULE_18__.a)(columns,"leaf-only"),defaultCheckedCodes=leafColumns.filter((function(col){var _col$features;return null===(_col$features=col.features)||void 0===_col$features?void 0:_col$features.defaultVisible})).map((function(col){return col.code})),enforceCheckedCodes=leafColumns.filter((function(col){var _col$features2;return null===(_col$features2=col.features)||void 0===_col$features2?void 0:_col$features2.enforceVisible})).map((function(col){return col.code})),_useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_19__.useState)(defaultCheckedCodes),2),checkedCodes=_useState2[0],onChangeCheckedCodes=_useState2[1];return react__WEBPACK_IMPORTED_MODULE_19___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_19___default.a.Fragment,null,react__WEBPACK_IMPORTED_MODULE_19___default.a.createElement(_components__WEBPACK_IMPORTED_MODULE_22__.a,{columns:columns,checkedCodes:checkedCodes,defaultCheckedCodes:defaultCheckedCodes,enforceCheckedCodes:enforceCheckedCodes,trigger:function trigger(onOpen){return react__WEBPACK_IMPORTED_MODULE_19___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_16__.a,{size:"large",type:"primary",onClick:onOpen},"打开自定义列对话框")},onChangeCheckedCodes:onChangeCheckedCodes}),react__WEBPACK_IMPORTED_MODULE_19___default.a.createElement(react_json_view__WEBPACK_IMPORTED_MODULE_20___default.a,{style:{marginTop:12},src:columns.map((function(group){return Object.assign({},group,{children:group.children.map((function(col){return JSON.stringify(col,null,1)}))})})),name:"对应的列配置：",collapsed:0,enableClipboard:!1,displayDataTypes:!1,displayObjectSize:!1}),react__WEBPACK_IMPORTED_MODULE_19___default.a.createElement(_assets_fusion_style__WEBPACK_IMPORTED_MODULE_21__.a,null))};自定义列对话框组件.parameters=Object.assign({storySource:{source:"function 自定义列对话框组件() {\n  const defaultVisibleIndProto = proto.array<ArtColumn>({\n    features: { defaultVisible: true },\n  })\n\n  const defaultHiddenIntProto = proto.array<ArtColumn>({\n    features: { defaultVisible: false },\n  })\n\n  // 列配置\n  const columns: ArtColumn[] = [\n    {\n      name: '商品信息',\n      children: defaultVisibleIndProto([\n        { code: 'order', name: '序号', features: { enforceVisible: true } },\n        { code: 'sku_code', name: 'SKU code' },\n        { code: 'sku_name', name: 'SKU名称' },\n      ]),\n    },\n    {\n      name: '机构信息',\n      children: defaultHiddenIntProto([\n        { code: 'city_name', name: '城市' },\n        { code: 'shop_name', name: '门店' },\n      ]),\n    },\n    {\n      name: '类目信息',\n      children: defaultVisibleIndProto([\n        { code: 'merge_cate_level1_name', name: '一级类目' },\n        { code: 'merge_cate_level2_name', name: '二级类目' },\n        { code: 'merge_cate_level3_name', name: '三级类目' },\n      ]),\n    },\n    {\n      name: 'APP指标',\n      children: defaultVisibleIndProto([\n        { code: 'imp_uv_dau_pct', name: '曝光UV占DAU比例' },\n        { code: 'app_trd_amt_1d', name: 'APP成交金额' },\n        { code: 'app_qty_pbt', name: 'APP件单价' },\n        { code: 'all_app_trd_amt_1d', name: 'APP成交金额汇总' },\n        { code: 'app_trd_usr_cnt_1d', name: 'APP成交用户数' },\n        { code: 'appout_shop_num', name: '缺货门店数' },\n        { code: 'all_time_len', name: '店均缺货时长' },\n        { code: 'bad_rmk_rate', name: '订单差评率' },\n      ]),\n    },\n    {\n      name: '转换率',\n      children: defaultHiddenIntProto([\n        { code: 'all_imp2pay_rate', name: '整体曝光至成交转化率' },\n        { code: 'search_imp2pay_rate', name: '搜索曝光至成交转化率' },\n        { code: 'classis_imp2pay_rate', name: '分类曝光至成交转化率' },\n        { code: 'cart_imp2pay_rate', name: '购物车曝光至成交转化率' },\n        { code: 'my_page_imp2pay_rate', name: '我的曝光至成交转化率' },\n        { code: 'pq_act_imp2pay_rate', name: '活动页曝光至成交转化率' },\n        { code: 'other_imp2pay_rate', name: '其他曝光至成交转化率' },\n      ]),\n    },\n  ]\n\n  const leafColumns = collectNodes(columns, 'leaf-only')\n\n  const defaultCheckedCodes = leafColumns.filter((col) => col.features?.defaultVisible).map((col) => col.code)\n  const enforceCheckedCodes = leafColumns.filter((col) => col.features?.enforceVisible).map((col) => col.code)\n\n  const [checkedCodes, onChangeCheckedCodes] = useState(defaultCheckedCodes)\n\n  return (\n    <>\n      <CustomColumnsDialog\n        columns={columns}\n        checkedCodes={checkedCodes}\n        defaultCheckedCodes={defaultCheckedCodes}\n        enforceCheckedCodes={enforceCheckedCodes}\n        trigger={(onOpen) => (\n          <Button size=\"large\" type=\"primary\" onClick={onOpen}>\n            打开自定义列对话框\n          </Button>\n        )}\n        onChangeCheckedCodes={onChangeCheckedCodes}\n      />\n      <ReactJson\n        style={{ marginTop: 12 }}\n        src={columns.map((group) => ({\n          ...group,\n          children: group.children.map((col) => JSON.stringify(col, null, 1)),\n        }))}\n        name=\"对应的列配置：\"\n        collapsed={0}\n        enableClipboard={false}\n        displayDataTypes={false}\n        displayObjectSize={false}\n      />\n      <FusionStyles />\n    </>\n  )\n}"}},自定义列对话框组件.parameters)},2174:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"示例 / 其他组件 / 表格操作栏 hooks",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"hooks-useoperationbar"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h1"},"hooks useOperationBar")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"p"},"这是一个已经在 1.0 被移除的组件，1.0 版本之后无法使用")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"ali-react-table/biz 提供了一个简单的表格操作栏组件，并实现了一些常见的表格操作。和 transforms 不同，hooks 可以拥有自己的状态，故 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"useOperationBar")," 内部维护了若干表格操作栏的状态。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"api"},"API"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"function useOperationBar(options): { transforms, nodes, view }")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"options.features")," 是一个配置对象的数组，每个对象表示开启一个特性，特性见下方"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"options.columns"),"：表格的列配置"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"options.components"),"：操作栏相关 UI 所使用的的组件；因为操作栏本身并没有依赖任何组件库，所以需要有由层向操作栏提供组件",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"组件库目前支持 hippo v1, hippo v2、fusion v1，任选一个即可"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"import * as hippo from '@alife/hippo'"),"，并将 hippo 传递给 components 参数"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"import * as fusion from '@alifd/next'"),"，并将 fusion 传递给 components 参数"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"options.actionColor"),"：操作按钮的颜色，默认为 hippo 的配色(",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"#23a3ff"),")")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"useOperationBar(options)")," 会返回一个对象 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"operationBar"),"，该对象包含以下三个字段："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"operation.transforms")," 是一个 transform 的数组，包含了来自 features 中的所有 transform；",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"记得使用 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"applyTransforms")," 来使用这些 transform，不然是不会生效的哟 (￣３￣)a"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"operation.nodes")," 是 features 对应的 UI，用于渲染操作栏中的功能按钮"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"operation.view")," 是一个 React 组件，提供了表格操作栏的",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"容器样式"),"，用法与普通的 div 相同")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-js"}),"function MyComponent() {\n  const operationBar = useOperationBar(options)\n\n  // 注意一定要把 operationBar.transforms 用起来\n  const renderData = applyTransforms(inputData, ...operationBar.transforms)\n\n  return (\n    <div>\n      // operationBar.view 是一个普通的 React 组件，用法与 div 相同\n      <operationBar.view>{operationBar.nodes}</operationBar.view>\n      <BaseTable\n        dataSource={renderData.dataSource}\n        columns={renderData.columns}\n        isLoading={state.isLoading}\n        stickyTop={32}\n      />\n    </div>\n  )\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"features-特性列表"},"features 特性列表"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"{ type: 'custom-columns' }"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"自定义列"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"设置自定义列时，每一列是否默认可见需要在 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"column.features.defaultVisible")," 中配置",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"设置 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"column.features.enforceVisible")," 来使得一列总是可见"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"一般来说大部分的列都应当是默认可见的，此时推荐使用 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"proto")," 工具来简化重复配置声明"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"{ type: 'export'; onExport(): void }"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"数据导出"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"注意 onExport 需要自己实现，一般情况下可以调用 ali-react-table/biz 提供的工具方法 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"exportTableAsExcel")," 来将数据导出到 Excel 文件"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"{ type: 'separator' }"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"分隔符，没有逻辑，只影响工具栏的布局样式"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("del",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"del"},"{ type: 'toggle'; key: string; title: ReactNode; transform?(checked: boolean): TableTransform }")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("del",{parentName:"li"},"在工具栏中添加一个 Checkbox；并根据 Checkbox 勾选状态生成一个 transform")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"不推荐使用 toggle，请用 custom 代替 toggle"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"{ type: 'click'; node?: ReactNode; transform?: TableTransform }"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"在工具栏中添加一个可点击的文本区域"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"{ type: 'custom'; node?: ReactNode; transform?: TableTransform }"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"自定义的文本内容或 ReactNode")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"示例"},"示例"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"这个例子展示了一个表格同时使用多个拓展功能的情况："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"表格操作工具栏"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"「展示环比」切换 —— 动态修改列的能力"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"Excel 导出功能"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"自定义列"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"展示数据量 —— 自定义工具栏的特性")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"useOperationBar")," 返回的 transform 与其他 transform 可以组合在一起，一同构建复杂表格。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-javascript"}),"/* 这是一份示例代码，不能直接运行 */\n\nimport * as fusion from '@alifd/next'\nimport { BaseTable, applyTransforms } from 'ali-react-table'\nimport { useOperationBar } from 'ali-react-table/biz'\n\nfunction MyComponent({ inputDataSource, inputColumns }) {\n  const operationBar = useOperationBar({\n    features: [\n      { type: 'toggle', key: 'lfl', title: '展示环比', transform: transformLfl },\n      { type: 'separator' },\n      { type: 'export', onExport },\n      { type: 'custom-columns' },\n      { type: 'custom', node: `共 ${state.isLoading ? '-' : state.data.length} 条数据` },\n    ],\n    components: fusion,\n    columns,\n  })\n\n  const renderData = applyTransforms(\n    { columns: inputColumns, dataSource: inputDataSource },\n    ...operationBar.transforms,\n    commonTransforms.orderField(),\n    commonTransforms.flatten(),\n  )\n\n  return (\n    <div>\n      <operationBar.view>{operationBar.nodes}</operationBar.view>\n      <BaseTable\n        dataSource={renderData.dataSource}\n        columns={renderData.columns}\n        isLoading={state.isLoading}\n        stickyTop={32}\n      />\n    </div>\n  )\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Canvas,{mdxType:"Canvas"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"示例-其他组件-表格操作栏示例--表格操作栏示例",mdxType:"Story"})))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"示例 / 其他组件 / 表格操作栏 hooks",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2177:function(module,exports){},2178:function(module,exports){},2179:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"异步数据加载树状表格",(function(){return 异步数据加载树状表格}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(33),__webpack_require__(143),__webpack_require__(44),__webpack_require__(163),__webpack_require__(30),__webpack_require__(20),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(7),__webpack_require__(48),__webpack_require__(13),__webpack_require__(162),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24),__webpack_require__(439),__webpack_require__(210);var ali_react_table__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(244),ali_react_table__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__(928),ali_react_table__WEBPACK_IMPORTED_MODULE_23__=__webpack_require__(523),ali_react_table__WEBPACK_IMPORTED_MODULE_24__=__webpack_require__(55),react__WEBPACK_IMPORTED_MODULE_25__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_25___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_25__),_assets_format__WEBPACK_IMPORTED_MODULE_26__=__webpack_require__(12);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){return void reject(error)}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise((function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)}))}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}__webpack_exports__.default={parameters:{storySource:{source:"import { applyTransforms, BaseTable, makeBuildTreeTransform, makeTreeModeTransform } from 'ali-react-table'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { amount, lfl, ratio } from '../../assets/format'\n\nexport default { title: '示例 / 表格交互 / 异步数据加载树状表格' }\n\n// prettier-ignore\nconst fullData = [\n  { key: 'key:@total@', parentKey: null, name: '总计', childCount: 1, a: 126434.47, b: 90437.96, c: 86279.48, d: 59811.81, lfl: 0.31, rate: 0.66 },\n  { key: 'key:火星', parentKey: 'key:@total@', name: '火星', childCount: 1, a: 69665.75, b: 46072.06, c: 43819.82, d: 30336.13, lfl: 0.37, rate: 0.65 },\n  { key: 'key:火星 一季度', parentKey: 'key:火星', name: '一季度', childCount: 3, a: 14438.76, b: 9822.21, c: 8724.7, d: 5929.93, lfl: 0.39, rate: 0.6 },\n  { key: 'key:火星 一季度 2022-01', parentKey: 'key:火星 一季度', name: '2022-01', childCount: 0, a: 4349.64, b: 3072.48, c: 2412.92, d: 1840.75, lfl: 0.44, rate: 0.59 },\n  { key: 'key:火星 一季度 2022-02', parentKey: 'key:火星 一季度', name: '2022-02', childCount: 0, a: 4873.01, b: 3239.29, c: 3072.48, d: 1931.65, lfl: 0.36, rate: 0.59 },\n  { key: 'key:火星 一季度 2022-03', parentKey: 'key:火星 一季度', name: '2022-03', childCount: 0, a: 5216.1, b: 3510.44, c: 3239.29, d: 2157.52, lfl: 0.37, rate: 0.61 },\n  { key: 'key:火星 二季度', parentKey: 'key:火星', name: '二季度', childCount: 3, a: 16870.42, b: 10983.12, c: 10585.88, d: 7037.24, lfl: 0.37, rate: 0.64 },\n  { key: 'key:火星 二季度 2022-04', parentKey: 'key:火星 二季度', name: '2022-04', childCount: 0, a: 5214.15, b: 3411.93, c: 3510.44, d: 2110.52, lfl: 0.32, rate: 0.61 },\n  { key: 'key:火星 二季度 2022-05', parentKey: 'key:火星 二季度', name: '2022-05', childCount: 0, a: 5749.32, b: 3663.5, c: 3411.93, d: 2376.51, lfl: 0.4, rate: 0.64 },\n  { key: 'key:火星 二季度 2022-06', parentKey: 'key:火星 二季度', name: '2022-06', childCount: 0, a: 5906.94, b: 3907.68, c: 3663.5, d: 2550.21, lfl: 0.37, rate: 0.65 },\n]\n\nfunction delay<T>(ms: number, resolvedValue: T) {\n  return new Promise<T>((resolve) => {\n    setTimeout(resolve, ms, resolvedValue)\n  })\n}\n\n/** 一个 mock 的树状数据服务，实际使用时要替换为相应的真实接口 */\nclass MockTreeDataService {\n  // 加载根节点的数据\n  async loadRootNodeData(): Promise<any> {\n    const rootDataNode = fullData.find((d) => d.parentKey == null)\n    return delay(1000, rootDataNode)\n  }\n\n  // 加载父节点的 key 加载子节点数据\n  async loadNodeDataByParentKey(parentKey: string): Promise<any[]> {\n    const slice = fullData.filter((d) => d.parentKey == parentKey)\n    return delay(500, slice)\n  }\n}\n\nexport function 异步数据加载树状表格() {\n  const [state, setState] = useState({ isLoading: true, data: [] as any[] })\n\n  const dataServiceRef = useRef<MockTreeDataService>()\n\n  useEffect(() => {\n    dataServiceRef.current = new MockTreeDataService()\n\n    dataServiceRef.current.loadRootNodeData().then((rootNodeData) => {\n      setState({ data: [rootNodeData], isLoading: false })\n    })\n  }, [])\n\n  function loadNodeDataByParentKey(parentKey: string) {\n    setState((prev) => ({ isLoading: true, data: prev.data }))\n    dataServiceRef.current.loadNodeDataByParentKey(parentKey).then((newData) => {\n      setState((prev) => {\n        return {\n          isLoading: false,\n          data: prev.data.concat(newData),\n        }\n      })\n    })\n  }\n\n  const [openKeys, onChangeOpenKeys] = useState<string[]>([])\n\n  const renderData = applyTransforms(\n    {\n      dataSource: state.data,\n      columns: [\n        { name: '名称', code: 'name', width: 180, lock: true },\n        { code: 'a', name: '目标收入', render: amount, align: 'right' },\n        { code: 'b', name: '实际收入', render: amount, align: 'right' },\n        { code: 'd', name: '重点商品收入', render: amount, align: 'right' },\n        { code: 'lfl', name: '收入月环比', render: lfl, align: 'right' },\n        { code: 'rate', name: '重点商品收入占比', render: ratio, align: 'right' },\n      ],\n    },\n    makeBuildTreeTransform('key', 'parentKey'),\n    makeTreeModeTransform({\n      primaryKey: 'key',\n      openKeys,\n\n      onChangeOpenKeys(nextKeys, key, action) {\n        onChangeOpenKeys(nextKeys)\n\n        const needLoadData = state.data.every((d) => d.parentKey !== key)\n        if (action === 'expand' && needLoadData) {\n          // 如果当前展开了某一个节点，且该节点的子节点数据尚未加载，\n          //  则调用 loadNodeDataByParentKey 加载更多数据\n          loadNodeDataByParentKey(key)\n        }\n      },\n\n      // 提供一个自定义的 isLeafNode 方法，使得表格为父节点正确渲染收拢/展开按钮\n      isLeafNode(node) {\n        return node.childCount === 0\n      },\n    }),\n  )\n\n  return (\n    <BaseTable\n      defaultColumnWidth={120}\n      isLoading={state.isLoading}\n      dataSource={renderData.dataSource}\n      columns={renderData.columns}\n    />\n  )\n}\n",locationsMap:{"异步数据加载树状表格":{startLoc:{col:7,line:42},endLoc:{col:1,line:112},startBody:{col:7,line:42},endBody:{col:1,line:112}}}}},title:"示例 / 表格交互 / 异步数据加载树状表格"};var fullData=[{key:"key:@total@",parentKey:null,name:"总计",childCount:1,a:126434.47,b:90437.96,c:86279.48,d:59811.81,lfl:.31,rate:.66},{key:"key:火星",parentKey:"key:@total@",name:"火星",childCount:1,a:69665.75,b:46072.06,c:43819.82,d:30336.13,lfl:.37,rate:.65},{key:"key:火星 一季度",parentKey:"key:火星",name:"一季度",childCount:3,a:14438.76,b:9822.21,c:8724.7,d:5929.93,lfl:.39,rate:.6},{key:"key:火星 一季度 2022-01",parentKey:"key:火星 一季度",name:"2022-01",childCount:0,a:4349.64,b:3072.48,c:2412.92,d:1840.75,lfl:.44,rate:.59},{key:"key:火星 一季度 2022-02",parentKey:"key:火星 一季度",name:"2022-02",childCount:0,a:4873.01,b:3239.29,c:3072.48,d:1931.65,lfl:.36,rate:.59},{key:"key:火星 一季度 2022-03",parentKey:"key:火星 一季度",name:"2022-03",childCount:0,a:5216.1,b:3510.44,c:3239.29,d:2157.52,lfl:.37,rate:.61},{key:"key:火星 二季度",parentKey:"key:火星",name:"二季度",childCount:3,a:16870.42,b:10983.12,c:10585.88,d:7037.24,lfl:.37,rate:.64},{key:"key:火星 二季度 2022-04",parentKey:"key:火星 二季度",name:"2022-04",childCount:0,a:5214.15,b:3411.93,c:3510.44,d:2110.52,lfl:.32,rate:.61},{key:"key:火星 二季度 2022-05",parentKey:"key:火星 二季度",name:"2022-05",childCount:0,a:5749.32,b:3663.5,c:3411.93,d:2376.51,lfl:.4,rate:.64},{key:"key:火星 二季度 2022-06",parentKey:"key:火星 二季度",name:"2022-06",childCount:0,a:5906.94,b:3907.68,c:3663.5,d:2550.21,lfl:.37,rate:.65}];function delay(ms,resolvedValue){return new Promise((function(resolve){setTimeout(resolve,ms,resolvedValue)}))}var MockTreeDataService=function(){function MockTreeDataService(){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,MockTreeDataService)}var _loadNodeDataByParentKey,_loadRootNodeData;return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}(MockTreeDataService,[{key:"loadRootNodeData",value:(_loadRootNodeData=_asyncToGenerator(regeneratorRuntime.mark((function _callee(){var rootDataNode;return regeneratorRuntime.wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:return rootDataNode=fullData.find((function(d){return null==d.parentKey})),_context.abrupt("return",delay(1e3,rootDataNode));case 2:case"end":return _context.stop()}}),_callee)}))),function loadRootNodeData(){return _loadRootNodeData.apply(this,arguments)})},{key:"loadNodeDataByParentKey",value:(_loadNodeDataByParentKey=_asyncToGenerator(regeneratorRuntime.mark((function _callee2(parentKey){var slice;return regeneratorRuntime.wrap((function _callee2$(_context2){for(;;)switch(_context2.prev=_context2.next){case 0:return slice=fullData.filter((function(d){return d.parentKey==parentKey})),_context2.abrupt("return",delay(500,slice));case 2:case"end":return _context2.stop()}}),_callee2)}))),function loadNodeDataByParentKey(_x){return _loadNodeDataByParentKey.apply(this,arguments)})}]),MockTreeDataService}(),异步数据加载树状表格=function 异步数据加载树状表格(){var _useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_25__.useState)({isLoading:!0,data:[]}),2),state=_useState2[0],setState=_useState2[1],dataServiceRef=Object(react__WEBPACK_IMPORTED_MODULE_25__.useRef)();Object(react__WEBPACK_IMPORTED_MODULE_25__.useEffect)((function(){dataServiceRef.current=new MockTreeDataService,dataServiceRef.current.loadRootNodeData().then((function(rootNodeData){setState({data:[rootNodeData],isLoading:!1})}))}),[]);var _useState4=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_25__.useState)([]),2),openKeys=_useState4[0],_onChangeOpenKeys=_useState4[1],renderData=Object(ali_react_table__WEBPACK_IMPORTED_MODULE_21__.a)({dataSource:state.data,columns:[{name:"名称",code:"name",width:180,lock:!0},{code:"a",name:"目标收入",render:_assets_format__WEBPACK_IMPORTED_MODULE_26__.a,align:"right"},{code:"b",name:"实际收入",render:_assets_format__WEBPACK_IMPORTED_MODULE_26__.a,align:"right"},{code:"d",name:"重点商品收入",render:_assets_format__WEBPACK_IMPORTED_MODULE_26__.a,align:"right"},{code:"lfl",name:"收入月环比",render:_assets_format__WEBPACK_IMPORTED_MODULE_26__.b,align:"right"},{code:"rate",name:"重点商品收入占比",render:_assets_format__WEBPACK_IMPORTED_MODULE_26__.c,align:"right"}]},Object(ali_react_table__WEBPACK_IMPORTED_MODULE_22__.a)("key","parentKey"),Object(ali_react_table__WEBPACK_IMPORTED_MODULE_23__.a)({primaryKey:"key",openKeys:openKeys,onChangeOpenKeys:function onChangeOpenKeys(nextKeys,key,action){_onChangeOpenKeys(nextKeys);var needLoadData=state.data.every((function(d){return d.parentKey!==key}));"expand"===action&&needLoadData&&function loadNodeDataByParentKey(parentKey){setState((function(prev){return{isLoading:!0,data:prev.data}})),dataServiceRef.current.loadNodeDataByParentKey(parentKey).then((function(newData){setState((function(prev){return{isLoading:!1,data:prev.data.concat(newData)}}))}))}(key)},isLeafNode:function isLeafNode(node){return 0===node.childCount}}));return react__WEBPACK_IMPORTED_MODULE_25___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_24__.a,{defaultColumnWidth:120,isLoading:state.isLoading,dataSource:renderData.dataSource,columns:renderData.columns})};异步数据加载树状表格.displayName="异步数据加载树状表格",异步数据加载树状表格.parameters=Object.assign({storySource:{source:"function 异步数据加载树状表格() {\n  const [state, setState] = useState({ isLoading: true, data: [] as any[] })\n\n  const dataServiceRef = useRef<MockTreeDataService>()\n\n  useEffect(() => {\n    dataServiceRef.current = new MockTreeDataService()\n\n    dataServiceRef.current.loadRootNodeData().then((rootNodeData) => {\n      setState({ data: [rootNodeData], isLoading: false })\n    })\n  }, [])\n\n  function loadNodeDataByParentKey(parentKey: string) {\n    setState((prev) => ({ isLoading: true, data: prev.data }))\n    dataServiceRef.current.loadNodeDataByParentKey(parentKey).then((newData) => {\n      setState((prev) => {\n        return {\n          isLoading: false,\n          data: prev.data.concat(newData),\n        }\n      })\n    })\n  }\n\n  const [openKeys, onChangeOpenKeys] = useState<string[]>([])\n\n  const renderData = applyTransforms(\n    {\n      dataSource: state.data,\n      columns: [\n        { name: '名称', code: 'name', width: 180, lock: true },\n        { code: 'a', name: '目标收入', render: amount, align: 'right' },\n        { code: 'b', name: '实际收入', render: amount, align: 'right' },\n        { code: 'd', name: '重点商品收入', render: amount, align: 'right' },\n        { code: 'lfl', name: '收入月环比', render: lfl, align: 'right' },\n        { code: 'rate', name: '重点商品收入占比', render: ratio, align: 'right' },\n      ],\n    },\n    makeBuildTreeTransform('key', 'parentKey'),\n    makeTreeModeTransform({\n      primaryKey: 'key',\n      openKeys,\n\n      onChangeOpenKeys(nextKeys, key, action) {\n        onChangeOpenKeys(nextKeys)\n\n        const needLoadData = state.data.every((d) => d.parentKey !== key)\n        if (action === 'expand' && needLoadData) {\n          // 如果当前展开了某一个节点，且该节点的子节点数据尚未加载，\n          //  则调用 loadNodeDataByParentKey 加载更多数据\n          loadNodeDataByParentKey(key)\n        }\n      },\n\n      // 提供一个自定义的 isLeafNode 方法，使得表格为父节点正确渲染收拢/展开按钮\n      isLeafNode(node) {\n        return node.childCount === 0\n      },\n    }),\n  )\n\n  return (\n    <BaseTable\n      defaultColumnWidth={120}\n      isLoading={state.isLoading}\n      dataSource={renderData.dataSource}\n      columns={renderData.columns}\n    />\n  )\n}"}},异步数据加载树状表格.parameters)},2180:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"筛选",(function(){return 筛选}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(33),__webpack_require__(143),__webpack_require__(44),__webpack_require__(498),__webpack_require__(30),__webpack_require__(89),__webpack_require__(25),__webpack_require__(20),__webpack_require__(32),__webpack_require__(23),__webpack_require__(499),__webpack_require__(28),__webpack_require__(10),__webpack_require__(103),__webpack_require__(167),__webpack_require__(7),__webpack_require__(48),__webpack_require__(13),__webpack_require__(27),__webpack_require__(90),__webpack_require__(98),__webpack_require__(21),__webpack_require__(24);var _alifd_next__WEBPACK_IMPORTED_MODULE_26__=__webpack_require__(371),_alifd_next__WEBPACK_IMPORTED_MODULE_27__=__webpack_require__(53),_alifd_next__WEBPACK_IMPORTED_MODULE_28__=__webpack_require__(2204),_alifd_next__WEBPACK_IMPORTED_MODULE_29__=__webpack_require__(926),_alifd_next__WEBPACK_IMPORTED_MODULE_30__=__webpack_require__(120),d3__WEBPACK_IMPORTED_MODULE_31__=__webpack_require__(364),_carbon_icons_react__WEBPACK_IMPORTED_MODULE_32__=__webpack_require__(2203),ali_react_table__WEBPACK_IMPORTED_MODULE_33__=__webpack_require__(244),ali_react_table__WEBPACK_IMPORTED_MODULE_34__=__webpack_require__(370),ali_react_table__WEBPACK_IMPORTED_MODULE_35__=__webpack_require__(73),ali_react_table__WEBPACK_IMPORTED_MODULE_36__=__webpack_require__(525),ali_react_table__WEBPACK_IMPORTED_MODULE_37__=__webpack_require__(151),ali_react_table__WEBPACK_IMPORTED_MODULE_38__=__webpack_require__(55),lodash__WEBPACK_IMPORTED_MODULE_39__=__webpack_require__(81),lodash__WEBPACK_IMPORTED_MODULE_39___default=__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_39__),react__WEBPACK_IMPORTED_MODULE_40__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_40___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_40__),_assets_fusion_style__WEBPACK_IMPORTED_MODULE_41__=__webpack_require__(63),_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_42__=__webpack_require__(18);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function NormalFilter(_ref){var code=_ref.code,valueList=_ref.valueList,selectedValues=_ref.selectedValues,filterState=_ref.filterState,onChangeFilterState=_ref.onChangeFilterState,fitFilterValues=_ref.fitFilterValues;return react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement("div",{style:{background:"white",minHeight:150,minWidth:150,border:"1px solid #ccc"}},react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement("div",{style:{maxHeight:300,overflow:"auto",padding:16}},valueList.map((function(v){var checked=selectedValues.includes(v);return react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement("div",{key:v,style:{height:24,display:"flex",alignItems:"center"}},react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_26__.a,{checked:checked,onChange:function onChange(){onChangeFilterState(Object.assign({},filterState,_defineProperty({},code,checked?selectedValues.filter((function(x){return x!==v})):selectedValues.concat([v]))))}},v))}))),react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement("div",{style:{padding:4,display:"flex",justifyContent:"space-between"}},react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_27__.a.Group,{size:"small"},react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_27__.a,{size:"small",type:"primary",onClick:function onClick(){onChangeFilterState(Object.assign({},filterState,_defineProperty({},code,null)))}},"重置"),react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_27__.a,{size:"small",onClick:function onClick(){onChangeFilterState(Object.assign({},filterState,_defineProperty({},code,fitFilterValues)))}},"自适应匹配"),react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_27__.a,{size:"small",onClick:function onClick(){var selectedValueSet=new Set(selectedValues);onChangeFilterState(Object.assign({},filterState,_defineProperty({},code,valueList.filter((function(v){return!selectedValueSet.has(v)})))))}},"反选"))))}function RangeFilter(_ref2){var code=_ref2.code,extent=_ref2.extent,selectedRange=_ref2.selectedRange,filterState=_ref2.filterState,onChangeFilterState=_ref2.onChangeFilterState;return react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement("div",{style:{background:"white",minHeight:100,minWidth:250,border:"1px solid #ccc"}},react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement("div",{style:{padding:"8px 20px"}},react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_28__.a,{slider:"double",min:extent[0],max:extent[1],marks:extent,value:selectedRange,onChange:function onChange(r){onChangeFilterState(Object.assign({},filterState,_defineProperty({},code,r)))}})),react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement("div",{style:{padding:4}},react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement("div",null,"最小值：",react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_29__.a,{type:"number",size:"small",value:selectedRange[0],onChange:function onChange(min){var minNum=Number(min);isNaN(minNum)||onChangeFilterState(Object.assign({},filterState,_defineProperty({},code,[minNum,selectedRange[1]])))}})),react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement("div",null,"最大值：",react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_29__.a,{type:"number",size:"small",value:selectedRange[1],onChange:function onChange(max){var maxNum=Number(max);isNaN(maxNum)||onChangeFilterState(Object.assign({},filterState,_defineProperty({},code,[selectedRange[0],maxNum])))}}))),react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement("div",{style:{padding:4,display:"flex",justifyContent:"space-between"}},react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_27__.a,{size:"small",onClick:function onClick(){onChangeFilterState(Object.assign({},filterState,_defineProperty({},code,null)))}},"重置")))}function makeFilterTransform(_ref3){var filterState=_ref3.filterState,onChangeFilterState=_ref3.onChangeFilterState;return function(input){return Object(ali_react_table__WEBPACK_IMPORTED_MODULE_33__.a)(input,(function(_ref4){var _step,dataSource=_ref4.dataSource,columns=_ref4.columns,filterCols=Object(ali_react_table__WEBPACK_IMPORTED_MODULE_34__.a)(columns,"leaf-only").filter((function(col){var _col$features;return null!=col.code&&(null===(_col$features=col.features)||void 0===_col$features?void 0:_col$features.filter)})),cache=new Map,_iterator=function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e2){throw _e2},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e3){didErr=!0,err=_e3},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}(filterCols);try{for(_iterator.s();!(_step=_iterator.n()).done;){var col=_step.value;"range"!==col.features.filter&&(null!=filterState[col.code]&&cache.set(col.code,new Set(filterState[col.code])))}}catch(err){_iterator.e(err)}finally{_iterator.f()}return{dataSource:dataSource.filter((function(record,rowIndex){return filterCols.every((function(col){if(null==filterState[col.code])return!0;if("range"===col.features.filter){var selectedRange=filterState[col.code],v=ali_react_table__WEBPACK_IMPORTED_MODULE_35__.internals.safeGetValue(col,record,rowIndex);return selectedRange[0]<=v&&v<=selectedRange[1]}return cache.get(col.code).has(ali_react_table__WEBPACK_IMPORTED_MODULE_35__.internals.safeGetValue(col,record,rowIndex))}))})),columns:columns}}),Object(ali_react_table__WEBPACK_IMPORTED_MODULE_36__.a)((function(col,_ref5){var _col$features2,dataSource=_ref5.dataSource;if(null==col.code||!(null===(_col$features2=col.features)||void 0===_col$features2?void 0:_col$features2.filter))return col;var align,isActiveFilter,filterView,justifyContent="right"===col.align?"flex-end":"center"===col.align?"center":"flex-start",prevTitle=ali_react_table__WEBPACK_IMPORTED_MODULE_35__.internals.safeRenderHeader(col),valueList=lodash__WEBPACK_IMPORTED_MODULE_39___default.a.uniq(input.dataSource.map((function(record,rowIndex){return ali_react_table__WEBPACK_IMPORTED_MODULE_35__.internals.safeGetValue(col,record,rowIndex)})));if("range"===col.features.filter){var _filterState$col$code,extent=d3__WEBPACK_IMPORTED_MODULE_31__.a(valueList),selectedRange=null!==(_filterState$col$code=filterState[col.code])&&void 0!==_filterState$col$code?_filterState$col$code:extent;isActiveFilter=!(selectedRange[0]===extent[0]&&selectedRange[1]===extent[1]),align="tc bc",filterView=react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement(RangeFilter,{code:col.code,extent:extent,filterState:filterState,onChangeFilterState:onChangeFilterState,selectedRange:selectedRange})}else{var _filterState$col$code2,selectedValues=null!==(_filterState$col$code2=filterState[col.code])&&void 0!==_filterState$col$code2?_filterState$col$code2:valueList;isActiveFilter=selectedValues.length!==valueList.length;var fitFilterValues=lodash__WEBPACK_IMPORTED_MODULE_39___default.a.uniq(dataSource.map((function(record,rowIndex){return ali_react_table__WEBPACK_IMPORTED_MODULE_35__.internals.safeGetValue(col,record,rowIndex)})));filterView=react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement(NormalFilter,{code:col.code,filterState:filterState,onChangeFilterState:onChangeFilterState,selectedValues:selectedValues,valueList:valueList,fitFilterValues:fitFilterValues})}return Object.assign({},col,{title:react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement("div",{style:{display:"flex",alignItems:"center",justifyContent:justifyContent}},react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_30__.a.Popup,{triggerType:"click",align:align,trigger:react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement("div",{style:{cursor:"pointer",display:"flex",alignItems:"center",color:isActiveFilter?"blue":void 0,fontWeight:isActiveFilter?"bold":"normal"}},prevTitle,react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement(_carbon_icons_react__WEBPACK_IMPORTED_MODULE_32__.a,{style:{marginLeft:2}}))},filterView))})})))}}__webpack_exports__.default={parameters:{storySource:{source:"import { Range, Button, Checkbox, Overlay, Input } from '@alifd/next'\nimport * as d3 from 'd3'\nimport { Filter16 } from '@carbon/icons-react'\nimport {\n  applyTransforms,\n  ArtColumn,\n  BaseTable,\n  collectNodes,\n  internals,\n  proto,\n  TableTransform,\n  traverseColumn,\n} from 'ali-react-table'\nimport _ from 'lodash'\nimport React, { ReactNode, useRef, useState } from 'react'\nimport { FusionStyles } from '../../assets/fusion-style'\nimport { cols, useCityDataSource } from '../../assets/ncov19-assets'\n\nexport default { title: '示例 / 表格交互 / 筛选' }\n\ntype FilterState = { [code: string]: any }\n\nfunction NormalFilter({\n  code,\n  valueList,\n  selectedValues,\n  filterState,\n  onChangeFilterState,\n  fitFilterValues,\n}: {\n  code: string\n  valueList: (string | number)[]\n  selectedValues: (string | number)[]\n  filterState: FilterState\n  onChangeFilterState(nextValue: FilterState): void\n  fitFilterValues: (string | number)[]\n}) {\n  return (\n    <div style={{ background: 'white', minHeight: 150, minWidth: 150, border: '1px solid #ccc' }}>\n      <div style={{ maxHeight: 300, overflow: 'auto', padding: 16 }}>\n        {valueList.map((v) => {\n          const checked = selectedValues.includes(v)\n          return (\n            <div key={v} style={{ height: 24, display: 'flex', alignItems: 'center' }}>\n              <Checkbox\n                checked={checked}\n                onChange={() => {\n                  onChangeFilterState({\n                    ...filterState,\n                    [code]: checked ? selectedValues.filter((x) => x !== v) : selectedValues.concat([v]),\n                  })\n                }}\n              >\n                {v}\n              </Checkbox>\n            </div>\n          )\n        })}\n      </div>\n      <div style={{ padding: 4, display: 'flex', justifyContent: 'space-between' }}>\n        <Button.Group size=\"small\">\n          <Button\n            size=\"small\"\n            type=\"primary\"\n            onClick={() => {\n              onChangeFilterState({ ...filterState, [code]: null })\n            }}\n          >\n            重置\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={() => {\n              onChangeFilterState({ ...filterState, [code]: fitFilterValues })\n            }}\n          >\n            自适应匹配\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={() => {\n              const selectedValueSet = new Set(selectedValues)\n              onChangeFilterState({ ...filterState, [code]: valueList.filter((v) => !selectedValueSet.has(v)) })\n            }}\n          >\n            反选\n          </Button>\n        </Button.Group>\n      </div>\n    </div>\n  )\n}\n\nfunction RangeFilter({\n  code,\n  extent,\n  selectedRange,\n  filterState,\n  onChangeFilterState,\n}: {\n  code: string\n  extent: [number, number]\n  selectedRange: [number, number]\n  filterState: FilterState\n  onChangeFilterState(nextValue: FilterState): void\n}) {\n  return (\n    <div style={{ background: 'white', minHeight: 100, minWidth: 250, border: '1px solid #ccc' }}>\n      <div style={{ padding: '8px 20px' }}>\n        <Range\n          slider=\"double\"\n          min={extent[0]}\n          max={extent[1]}\n          marks={extent}\n          value={selectedRange}\n          onChange={(r) => {\n            onChangeFilterState({ ...filterState, [code]: r })\n          }}\n        />\n      </div>\n      <div style={{ padding: 4 }}>\n        <div>\n          最小值：\n          <Input\n            type=\"number\"\n            size=\"small\"\n            value={selectedRange[0]}\n            onChange={(min) => {\n              const minNum = Number(min)\n              if (isNaN(minNum)) {\n                return\n              }\n              onChangeFilterState({ ...filterState, [code]: [minNum, selectedRange[1]] })\n            }}\n          />\n        </div>\n        <div>\n          最大值：\n          <Input\n            type=\"number\"\n            size=\"small\"\n            value={selectedRange[1]}\n            onChange={(max) => {\n              const maxNum = Number(max)\n              if (isNaN(maxNum)) {\n                return\n              }\n              onChangeFilterState({ ...filterState, [code]: [selectedRange[0], maxNum] })\n            }}\n          />\n        </div>\n      </div>\n\n      <div style={{ padding: 4, display: 'flex', justifyContent: 'space-between' }}>\n        <Button\n          size=\"small\"\n          onClick={() => {\n            onChangeFilterState({ ...filterState, [code]: null })\n          }}\n        >\n          重置\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nfunction makeFilterTransform({\n  filterState,\n  onChangeFilterState,\n}: {\n  filterState: FilterState\n  onChangeFilterState(nextValue: FilterState): void\n}): TableTransform {\n  return (input) =>\n    applyTransforms(\n      input,\n      ({ dataSource, columns }) => {\n        const filterCols = collectNodes(columns, 'leaf-only').filter((col) => col.code != null && col.features?.filter)\n        const cache = new Map<string, Set<number>>()\n        for (const col of filterCols) {\n          if (col.features.filter === 'range') {\n            // RangeFilter 不需要 cache\n            continue\n          }\n          if (filterState[col.code] == null) {\n            continue\n          }\n          cache.set(col.code, new Set(filterState[col.code]))\n        }\n\n        return {\n          dataSource: dataSource.filter((record, rowIndex) => {\n            return filterCols.every((col) => {\n              if (filterState[col.code] == null) {\n                return true\n              }\n              if (col.features.filter === 'range') {\n                const selectedRange = filterState[col.code]\n                const v = internals.safeGetValue(col, record, rowIndex)\n                return selectedRange[0] <= v && v <= selectedRange[1]\n              } else {\n                return cache.get(col.code).has(internals.safeGetValue(col, record, rowIndex))\n              }\n            })\n          }),\n          columns,\n        }\n      },\n      traverseColumn((col, { dataSource }) => {\n        if (col.code == null || !col.features?.filter) {\n          return col\n        }\n\n        const justifyContent = col.align === 'right' ? 'flex-end' : col.align === 'center' ? 'center' : 'flex-start'\n\n        const prevTitle = internals.safeRenderHeader(col)\n        const valueList = _.uniq(\n          input.dataSource.map((record, rowIndex) => internals.safeGetValue(col, record, rowIndex)),\n        )\n\n        let align: string\n        let isActiveFilter: boolean\n        let filterView: ReactNode\n\n        if (col.features.filter === 'range') {\n          const extent = d3.extent(valueList)\n          const selectedRange = (filterState[col.code] ?? extent) as [number, number]\n          isActiveFilter = !(selectedRange[0] === extent[0] && selectedRange[1] === extent[1])\n          align = 'tc bc'\n          filterView = (\n            <RangeFilter\n              code={col.code}\n              extent={extent}\n              filterState={filterState}\n              onChangeFilterState={onChangeFilterState}\n              selectedRange={selectedRange}\n            />\n          )\n        } else {\n          const selectedValues = filterState[col.code] ?? valueList\n          isActiveFilter = selectedValues.length !== valueList.length\n\n          const fitFilterValues = _.uniq(\n            dataSource.map((record, rowIndex) => internals.safeGetValue(col, record, rowIndex)),\n          )\n\n          filterView = (\n            <NormalFilter\n              code={col.code}\n              filterState={filterState}\n              onChangeFilterState={onChangeFilterState}\n              selectedValues={selectedValues}\n              valueList={valueList}\n              fitFilterValues={fitFilterValues}\n            />\n          )\n        }\n\n        return {\n          ...col,\n          title: (\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent }}>\n              <Overlay.Popup\n                triggerType=\"click\"\n                align={align}\n                trigger={\n                  <div\n                    style={{\n                      cursor: 'pointer',\n                      display: 'flex',\n                      alignItems: 'center',\n                      color: isActiveFilter ? 'blue' : undefined,\n                      fontWeight: isActiveFilter ? 'bold' : 'normal',\n                    }}\n                  >\n                    {prevTitle}\n                    <Filter16 style={{ marginLeft: 2 }} />\n                  </div>\n                }\n              >\n                {filterView}\n              </Overlay.Popup>\n            </div>\n          ),\n        }\n      }),\n    )\n}\n\nexport function 筛选() {\n  const { dataSource, isLoading } = useCityDataSource()\n  const [filterState, onChangeFilterState] = useState<FilterState>({})\n  const tableRef = useRef<BaseTable>()\n\n  const colProto = proto.array<ArtColumn>({\n    features: proto.object({ filter: true }),\n  })\n\n  const columns = colProto([\n    { lock: true, width: 80, name: '', code: 'order', features: { filter: false } },\n    cols.provinceName,\n    cols.cityName,\n    { ...cols.confirmedCount, features: { filter: 'range' } },\n    { ...cols.curedCount, features: { filter: 'range' } },\n    { ...cols.deadCount, features: { filter: 'range' } },\n    cols.updateTime,\n  ])\n\n  const renderData = applyTransforms(\n    {\n      dataSource: dataSource\n        .slice(0, 15)\n        .flatMap((prov) => prov.children)\n        .map((row, i) => ({ ...row, order: i + 1 })),\n      columns,\n    },\n    makeFilterTransform({ filterState, onChangeFilterState }),\n  )\n\n  return (\n    <div>\n      <p>tips: 自适应匹配 —— 根据其他列的筛选条件缩小当前列的筛选范围</p>\n      <FusionStyles />\n      <div>\n        <Button onClick={() => onChangeFilterState({})}>重置筛选</Button>\n      </div>\n      <BaseTable\n        ref={tableRef}\n        style={{ marginTop: 8 }}\n        isLoading={isLoading}\n        dataSource={renderData.dataSource}\n        columns={renderData.columns}\n      />\n    </div>\n  )\n}\n",locationsMap:{"筛选":{startLoc:{col:7,line:291},endLoc:{col:1,line:337},startBody:{col:7,line:291},endBody:{col:1,line:337}}}}},title:"示例 / 表格交互 / 筛选"},NormalFilter.displayName="NormalFilter",RangeFilter.displayName="RangeFilter";var 筛选=function 筛选(){var _useCityDataSource=Object(_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_42__.d)(),dataSource=_useCityDataSource.dataSource,isLoading=_useCityDataSource.isLoading,_useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_40__.useState)({}),2),filterState=_useState2[0],onChangeFilterState=_useState2[1],tableRef=Object(react__WEBPACK_IMPORTED_MODULE_40__.useRef)(),columns=ali_react_table__WEBPACK_IMPORTED_MODULE_37__.a.array({features:ali_react_table__WEBPACK_IMPORTED_MODULE_37__.a.object({filter:!0})})([{lock:!0,width:80,name:"",code:"order",features:{filter:!1}},_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_42__.a.provinceName,_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_42__.a.cityName,Object.assign({},_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_42__.a.confirmedCount,{features:{filter:"range"}}),Object.assign({},_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_42__.a.curedCount,{features:{filter:"range"}}),Object.assign({},_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_42__.a.deadCount,{features:{filter:"range"}}),_assets_ncov19_assets__WEBPACK_IMPORTED_MODULE_42__.a.updateTime]),renderData=Object(ali_react_table__WEBPACK_IMPORTED_MODULE_33__.a)({dataSource:dataSource.slice(0,15).flatMap((function(prov){return prov.children})).map((function(row,i){return Object.assign({},row,{order:i+1})})),columns:columns},makeFilterTransform({filterState:filterState,onChangeFilterState:onChangeFilterState}));return react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement("p",null,"tips: 自适应匹配 —— 根据其他列的筛选条件缩小当前列的筛选范围"),react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement(_assets_fusion_style__WEBPACK_IMPORTED_MODULE_41__.a,null),react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_27__.a,{onClick:function onClick(){return onChangeFilterState({})}},"重置筛选")),react__WEBPACK_IMPORTED_MODULE_40___default.a.createElement(ali_react_table__WEBPACK_IMPORTED_MODULE_38__.a,{ref:tableRef,style:{marginTop:8},isLoading:isLoading,dataSource:renderData.dataSource,columns:renderData.columns}))};筛选.displayName="筛选",筛选.parameters=Object.assign({storySource:{source:"function 筛选() {\n  const { dataSource, isLoading } = useCityDataSource()\n  const [filterState, onChangeFilterState] = useState<FilterState>({})\n  const tableRef = useRef<BaseTable>()\n\n  const colProto = proto.array<ArtColumn>({\n    features: proto.object({ filter: true }),\n  })\n\n  const columns = colProto([\n    { lock: true, width: 80, name: '', code: 'order', features: { filter: false } },\n    cols.provinceName,\n    cols.cityName,\n    { ...cols.confirmedCount, features: { filter: 'range' } },\n    { ...cols.curedCount, features: { filter: 'range' } },\n    { ...cols.deadCount, features: { filter: 'range' } },\n    cols.updateTime,\n  ])\n\n  const renderData = applyTransforms(\n    {\n      dataSource: dataSource\n        .slice(0, 15)\n        .flatMap((prov) => prov.children)\n        .map((row, i) => ({ ...row, order: i + 1 })),\n      columns,\n    },\n    makeFilterTransform({ filterState, onChangeFilterState }),\n  )\n\n  return (\n    <div>\n      <p>tips: 自适应匹配 —— 根据其他列的筛选条件缩小当前列的筛选范围</p>\n      <FusionStyles />\n      <div>\n        <Button onClick={() => onChangeFilterState({})}>重置筛选</Button>\n      </div>\n      <BaseTable\n        ref={tableRef}\n        style={{ marginTop: 8 }}\n        isLoading={isLoading}\n        dataSource={renderData.dataSource}\n        columns={renderData.columns}\n      />\n    </div>\n  )\n}"}},筛选.parameters)},2181:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"树状表格中的最近展开标记",(function(){return 树状表格中的最近展开标记}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(7),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);var ali_react_table__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(55),ali_react_table__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__(244),ali_react_table__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__(928),ali_react_table__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(523),react__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_18___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_18__),styled_components__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(40),_assets_cdn_data__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(80),_assets_format__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(12);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={parameters:{storySource:{source:"import {\n  applyTransforms,\n  ArtColumn,\n  BaseTable,\n  Classes,\n  makeBuildTreeTransform,\n  makeTreeModeTransform,\n} from 'ali-react-table'\nimport React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { getAppTrafficData } from '../../assets/cdn-data'\nimport { ratio } from '../../assets/format'\n\nexport default { title: '示例 / 表格交互 / 树状表格中的最近展开标记' }\n\nconst StyledBaseTable = styled(BaseTable)`\n  tr.last-open {\n    --bgcolor: rgba(128, 243, 87, 0.32);\n\n    .expansion-icon {\n      fill: #4de247;\n    }\n  }\n\n  tr.last-collapse {\n    --bgcolor: rgba(253, 32, 32, 0.32);\n\n    .expansion-icon {\n      fill: #e54950;\n    }\n  }\n`\n\nexport function 树状表格中的最近展开标记() {\n  const columns: ArtColumn[] = [\n    { code: 'name', name: '数据维度', lock: true, width: 200 },\n    { code: 'shop_name', name: '门店' },\n    { code: 'imp_uv_dau_pct', name: '曝光UV占DAU比例', render: ratio, align: 'right' },\n    { code: 'app_qty_pbt', name: 'APP件单价', align: 'right' },\n    { code: 'all_app_trd_amt_1d', name: 'APP成交金额汇总', align: 'right' },\n  ]\n\n  const [state, setState] = useState({\n    isLoading: true,\n    data: [] as any[],\n    lastOpenKey: '',\n    lastCollapseKey: '',\n  })\n\n  useEffect(() => {\n    getAppTrafficData().then((data) => {\n      setState({ isLoading: false, data, lastOpenKey: '', lastCollapseKey: '' })\n    })\n  }, [])\n\n  const [openKeys, onChangeOpenKeys] = useState([])\n\n  // 注意 renderData 要用起来\n  const renderData = applyTransforms(\n    { columns: columns, dataSource: state.data },\n\n    // 从平铺的数据中，根据 id/parent_id 字段构建出树状结构\n    makeBuildTreeTransform('id', 'parent_id'),\n\n    makeTreeModeTransform({\n      primaryKey: 'id',\n      openKeys,\n      onChangeOpenKeys(nextKeys, key, action) {\n        onChangeOpenKeys(nextKeys)\n        if (action === 'expand') {\n          setState({ ...state, lastOpenKey: key, lastCollapseKey: '' })\n        } else {\n          setState({ ...state, lastOpenKey: '', lastCollapseKey: key })\n        }\n      },\n    }),\n  )\n\n  return (\n    <StyledBaseTable\n      dataSource={renderData.dataSource}\n      columns={renderData.columns}\n      isLoading={state.isLoading}\n      getRowProps={(record) => {\n        if (record.id === state.lastOpenKey) {\n          return { className: 'last-open' }\n        } else if (record.id === state.lastCollapseKey) {\n          return { className: 'last-collapse' }\n        }\n      }}\n    />\n  )\n}\n",locationsMap:{"树状表格中的最近展开标记":{startLoc:{col:7,line:34},endLoc:{col:1,line:93},startBody:{col:7,line:34},endBody:{col:1,line:93}}}}},title:"示例 / 表格交互 / 树状表格中的最近展开标记"};var StyledBaseTable=Object(styled_components__WEBPACK_IMPORTED_MODULE_19__.b)(ali_react_table__WEBPACK_IMPORTED_MODULE_14__.a).withConfig({displayName:"tree-table-with-last-open-markstories__StyledBaseTable",componentId:"y9glzv-0"})(["tr.last-open{--bgcolor:rgba(128,243,87,0.32);.expansion-icon{fill:#4de247;}}tr.last-collapse{--bgcolor:rgba(253,32,32,0.32);.expansion-icon{fill:#e54950;}}"]),树状表格中的最近展开标记=function 树状表格中的最近展开标记(){var columns=[{code:"name",name:"数据维度",lock:!0,width:200},{code:"shop_name",name:"门店"},{code:"imp_uv_dau_pct",name:"曝光UV占DAU比例",render:_assets_format__WEBPACK_IMPORTED_MODULE_21__.c,align:"right"},{code:"app_qty_pbt",name:"APP件单价",align:"right"},{code:"all_app_trd_amt_1d",name:"APP成交金额汇总",align:"right"}],_useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_18__.useState)({isLoading:!0,data:[],lastOpenKey:"",lastCollapseKey:""}),2),state=_useState2[0],setState=_useState2[1];Object(react__WEBPACK_IMPORTED_MODULE_18__.useEffect)((function(){Object(_assets_cdn_data__WEBPACK_IMPORTED_MODULE_20__.a)().then((function(data){setState({isLoading:!1,data:data,lastOpenKey:"",lastCollapseKey:""})}))}),[]);var _useState4=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_18__.useState)([]),2),openKeys=_useState4[0],_onChangeOpenKeys=_useState4[1],renderData=Object(ali_react_table__WEBPACK_IMPORTED_MODULE_15__.a)({columns:columns,dataSource:state.data},Object(ali_react_table__WEBPACK_IMPORTED_MODULE_16__.a)("id","parent_id"),Object(ali_react_table__WEBPACK_IMPORTED_MODULE_17__.a)({primaryKey:"id",openKeys:openKeys,onChangeOpenKeys:function onChangeOpenKeys(nextKeys,key,action){_onChangeOpenKeys(nextKeys),setState("expand"===action?Object.assign({},state,{lastOpenKey:key,lastCollapseKey:""}):Object.assign({},state,{lastOpenKey:"",lastCollapseKey:key}))}}));return react__WEBPACK_IMPORTED_MODULE_18___default.a.createElement(StyledBaseTable,{dataSource:renderData.dataSource,columns:renderData.columns,isLoading:state.isLoading,getRowProps:function getRowProps(record){return record.id===state.lastOpenKey?{className:"last-open"}:record.id===state.lastCollapseKey?{className:"last-collapse"}:void 0}})};树状表格中的最近展开标记.displayName="树状表格中的最近展开标记",树状表格中的最近展开标记.parameters=Object.assign({storySource:{source:"function 树状表格中的最近展开标记() {\n  const columns: ArtColumn[] = [\n    { code: 'name', name: '数据维度', lock: true, width: 200 },\n    { code: 'shop_name', name: '门店' },\n    { code: 'imp_uv_dau_pct', name: '曝光UV占DAU比例', render: ratio, align: 'right' },\n    { code: 'app_qty_pbt', name: 'APP件单价', align: 'right' },\n    { code: 'all_app_trd_amt_1d', name: 'APP成交金额汇总', align: 'right' },\n  ]\n\n  const [state, setState] = useState({\n    isLoading: true,\n    data: [] as any[],\n    lastOpenKey: '',\n    lastCollapseKey: '',\n  })\n\n  useEffect(() => {\n    getAppTrafficData().then((data) => {\n      setState({ isLoading: false, data, lastOpenKey: '', lastCollapseKey: '' })\n    })\n  }, [])\n\n  const [openKeys, onChangeOpenKeys] = useState([])\n\n  // 注意 renderData 要用起来\n  const renderData = applyTransforms(\n    { columns: columns, dataSource: state.data },\n\n    // 从平铺的数据中，根据 id/parent_id 字段构建出树状结构\n    makeBuildTreeTransform('id', 'parent_id'),\n\n    makeTreeModeTransform({\n      primaryKey: 'id',\n      openKeys,\n      onChangeOpenKeys(nextKeys, key, action) {\n        onChangeOpenKeys(nextKeys)\n        if (action === 'expand') {\n          setState({ ...state, lastOpenKey: key, lastCollapseKey: '' })\n        } else {\n          setState({ ...state, lastOpenKey: '', lastCollapseKey: key })\n        }\n      },\n    }),\n  )\n\n  return (\n    <StyledBaseTable\n      dataSource={renderData.dataSource}\n      columns={renderData.columns}\n      isLoading={state.isLoading}\n      getRowProps={(record) => {\n        if (record.id === state.lastOpenKey) {\n          return { className: 'last-open' }\n        } else if (record.id === state.lastCollapseKey) {\n          return { className: 'last-collapse' }\n        }\n      }}\n    />\n  )\n}"}},树状表格中的最近展开标记.parameters)},2182:function(module,exports,__webpack_require__){var map={"./cross-table.stories.mdx":2183,"./cross-table.stories.tsx":2184};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2182},2183:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"交叉与透视 / 交叉表 / 文档",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"交叉表"},"交叉表"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"交叉表是一个比较底层的 React 组件，仅提供相应表格结构的渲染能力。注意交叉表..."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("em",{parentName:"strong"},"没有"))," 透视能力"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("em",{parentName:"strong"},"没有"))," 收拢展开功能")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"主要特性"},"主要特性"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"不依赖特定组件库，可独立使用"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"简单、一致的 API 与渲染模型：",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"strong"},"左树 + 上树 => 表格"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"高性能：数据量较大时，自动开启虚拟滚动")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"基本用法"},"基本用法"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"在简单的场景下，交叉表的用法很简单："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"通过 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"leftTree")," 描述表格左侧的树状结构；"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"通过 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"topTree")," 描述表格上方的树状结构；"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"通过 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"getValue")," 来定义每个单元格的内容；"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"交叉表组件会根据 leftTree/topTree 来渲染表格结构，并调用 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"getValue")," 获取单元格的内容")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-js"}),"<CrossTable\n  // 推荐为交叉表设置一个默认列宽\n  defaultColumnWidth={100}\n  leftTree={leftTree}\n  topTree={topTree}\n  getValue={(leftNode, topNode) => {\n    // 自定义的取数逻辑，针对每个单元格都会调用一次\n    // leftNode 表示当前单元格对应的左侧树节点，topNode 是对应的上方树节点\n  }}\n  render={(value, leftNode, topNode) => {\n    // 可选的 自定义的渲染逻辑\n    return value\n  }}\n/>\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Canvas,{mdxType:"Canvas"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"交叉与透视-交叉表-示例--基本用法",mdxType:"Story"})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"lefttree-的结构"},"leftTree 的结构"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"交叉表左侧的树（leftTree）是一个树节点的数组，每个树节点的结构如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"/** 交叉表左侧或上方的树节点基类 */\ninterface CrossTreeNode {\n  key: string\n  value: string\n  title?: ReactNode\n  data?: any\n  hidden?: boolean\n  children?: CrossTreeNode[]\n}\n\n/** 交叉表左侧树状结构的树节点 */\ninterface LeftCrossTreeNode extends CrossTreeNode {\n  children?: CrossTreeNode[]\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"主要属性：",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"key")," 用于在树中唯一标记一个节点；"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"value")," 表示节点中的文本值；"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"children")," 为子节点数组；"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"可选属性：",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"title")," 若非空，被渲染在页面中时，节点内容将由 title 提供",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"在不是页面渲染的情况下（例如导出到文件），title 将被忽略"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"hidden")," 表示是否隐藏节点"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"data")," 为附加在节点上的数据",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"data")," 中可以放任何内容"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"放在节点中的数据，可在渲染单元格时取出，用于决定渲染结果")))))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"toptree-的结构"},"topTree 的结构"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"topTree 的结构与 leftTree 类似，但其树节点的配置较为丰富，结构如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"/** 交叉表上方树状结构的树节点\n * 列的名称现由 value 字段提供，故从 ArtColumnStaticPart 移除了 name 字段 */\ninterface TopCrossTreeNode extends CrossTreeNode, Omit<ArtColumnStaticPart, 'name'> {\n  children?: TopCrossTreeNode[]\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"上方的树节点继承（extends）了左侧树节点的结构，拥有相同的 key/value/data/title/hidden/children 字段。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"交叉表底层使用了 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"BaseTable")," 进行渲染，而 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"BaseTable")," 中主要的表格配置是放在每一列之上的。在 topTree 中，每个叶子节点都对应的了表格中的一列，所以每个节点除了包含 key/value/data/children 之外，还包含了部分列配置（即 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"ArtColumnStaticPart"),"）。",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"ArtColumnStaticPart")," 的结构如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"name")," 列的名称；注意因为树节点已经含有 value 字段，故 name 字段在 TopCrossTreeNode 中是不起作用的）"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"code")," 在数据中的字段 code；注意交叉表使用自定义的 getValue/render 进行取值或渲染，会屏蔽掉 code 的默认取值方式"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"title")," 列标题，如果该字段非空，在渲染时会覆盖 value 字段"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"width")," 列的宽度"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"align")," 单元格中的文本或内容的 对其方向"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"hidden")," 是否锁列；",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"不推荐"),"为交叉表的数据列设置隐藏"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"lock")," 是否锁列；",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"不推荐"),"为交叉表的数据列设置锁列"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"features")," 功能开关")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"其他-props"},"其他 props"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"交叉表的底层依赖了 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"BaseTable"),"，故两者的 props 大部分是相同的。两者的不同点具体如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"交叉表没有 dataSource 和 columns",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"表格结构由 leftTree 和 rightTree 提供，而单元格内容由 getValue 提供"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"单元格渲染内容可使用 render 进行自定义；单元格的 props（即表格内的 td 元素）可使用 getCellProps 进行自定义"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"交叉表没有 primaryKey",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"交叉表左侧树中每个节点都有一个唯一的 key 值，故不再需要上层指定 primaryKey"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"其他新增的 props",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"交叉表使用 leftMetaColumns 来描述 leftTree 所处的列的配置",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"交叉表渲染时，左侧的树会占据表格的前几列，并自动设置 lock=true，leftMetaColumns 可用于自定义这些列"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"leftTotalNode：当 leftTree 为空时，leftTotalNode 用于渲染「总计行」，避免表格中没有数据行"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"topTotalNode：当 topTree 为空时，topTotalNode 用于渲染「总计列」，避免表格中没有数据列")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"交叉表的 props 具体如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"interface CrossTableProps extends Omit<BaseTableProps, 'dataSource' | 'columns' | 'primaryKey'> {\n  leftTree: LeftCrossTreeNode[]\n  topTree: TopCrossTreeNode[]\n  leftMetaColumns?: CrossTableLeftMetaColumn[]\n  leftTotalNode?: LeftCrossTreeNode\n  topTotalNode?: TopCrossTreeNode\n\n  getValue(leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number): any\n\n  render?(\n    value: any,\n    leftNode: LeftCrossTreeNode,\n    topNode: TopCrossTreeNode,\n    leftDepth: number,\n    topDepth: number,\n  ): ReactNode\n\n  getCellProps?(\n    value: any,\n    leftNode: LeftCrossTreeNode,\n    topNode: TopCrossTreeNode,\n    leftDepth: number,\n    topDepth: number,\n  ): CellProps\n}\n\nexport interface CrossTableLeftMetaColumn extends Omit<ArtColumnStaticPart, 'hidden'> {\n  /** 自定义渲染方法 */\n  render?(leftNode: LeftCrossTreeNode, leftDepth: number): ReactNode\n\n  /** 自定义的获取单元格 props 的方法 */\n  getCellProps?(leftNode: LeftCrossTreeNode, leftDepth: number): CellProps\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"不要被长长的 TypeScript 类型代码吓到，交叉表的 props 其实和 BaseTable 差别不大。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"复杂场景下的交叉表"},"复杂场景下的交叉表"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"交叉表的左树/上树的结构被设计为 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"{ key, value, children }")," 的简单结构，方便上层调用者能够从不同的数据源中生成 leftTree/topTree。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"在复杂场景下，需要上层根据业务需求手动生成 leftTree/topTree/getValue。ali-react-table 也提供了一定的透视能力，可在交叉表的基础上实现前端聚合的透视表，可供使用和参考。"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"交叉与透视 / 交叉表 / 文档",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2184:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"基本用法",(function(){return 基本用法}));__webpack_require__(7),__webpack_require__(451);var ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(929),react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);__webpack_exports__.default={parameters:{storySource:{source:"import { CrossTable, LeftCrossTreeNode, TopCrossTreeNode } from 'ali-react-table/pivot'\nimport React from 'react'\n\nexport default { title: '交叉与透视 / 交叉表 / 示例' }\n\nexport function 基本用法() {\n  const leftTree: LeftCrossTreeNode[] = [\n    {\n      key: 'forenoon',\n      value: '上午',\n      children: [\n        { key: '9', value: '9:00-10:00' },\n        { key: '10', value: '10:00-11:00' },\n        { key: '11', value: '11:00-12:00' },\n      ],\n    },\n    { key: 'lunch', value: '午餐' },\n    {\n      key: 'afternoon',\n      value: '下午',\n      children: [\n        { key: '14', value: '14:00-15:00' },\n        { key: '15', value: '15:00-16:00' },\n        { key: '16', value: '16:00-17:00' },\n      ],\n    },\n    { key: 'dinner', value: '晚餐' },\n    {\n      key: 'evening',\n      value: '晚上',\n      children: [\n        { key: '20', value: '20:00-21:00' },\n        { key: '21', value: '21:00-22:00' },\n      ],\n    },\n  ]\n\n  const makeTopChildren = (keyPrefix: string): TopCrossTreeNode[] => [\n    { key: `${keyPrefix}-week-0`, value: '第一周', width: 80 },\n    { key: `${keyPrefix}-week-1`, value: '第二周', width: 80 },\n    { key: `${keyPrefix}-week-2`, value: '第三周', width: 80 },\n    { key: `${keyPrefix}-week-3`, value: '第四周', width: 80 },\n  ]\n  const topTree: TopCrossTreeNode[] = [\n    { key: '2020-01', value: '2020-01', children: makeTopChildren('2020-01') },\n    { key: '2020-02', value: '2020-02', children: makeTopChildren('2020-02') },\n    { key: '2020-03', value: '2020-03', children: makeTopChildren('2020-03') },\n    { key: '2020-04', value: '2020-04', children: makeTopChildren('2020-04') },\n    { key: '2020-05', value: '2020-05', children: makeTopChildren('2020-05') },\n    { key: '2020-06', value: '2020-06', children: makeTopChildren('2020-06') },\n  ]\n\n  const getValue = (leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode) => {\n    if (leftNode.key === 'lunch') {\n      if (topNode.key.endsWith('week-0')) {\n        return '肯德基'\n      } else if (topNode.key.endsWith('week-1')) {\n        return '麦当劳'\n      } else if (topNode.key.endsWith('week-2')) {\n        return '汉堡王'\n      } else {\n        return '烧烤'\n      }\n    } else if (leftNode.key === 'dinner') {\n      if (topNode.key.endsWith('week-0')) {\n        return '盒马'\n      } else if (topNode.key.endsWith('week-1')) {\n        return '海底捞'\n      } else if (topNode.key.endsWith('week-2')) {\n        return '麦当劳'\n      } else {\n        return '体重+1'\n      }\n    }\n  }\n\n  return (\n    <div>\n      <p style={{ fontSize: 16, marginTop: 0 }}>2020年 养猪计划</p>\n      <CrossTable\n        defaultColumnWidth={100}\n        leftTree={leftTree}\n        topTree={topTree}\n        // 自定义的取数逻辑\n        getValue={getValue}\n        // 可选的 自定义的渲染逻辑\n        render={(value, leftNode, topNode) => {\n          return value\n        }}\n      />\n    </div>\n  )\n}\n",locationsMap:{"基本用法":{startLoc:{col:7,line:6},endLoc:{col:1,line:93},startBody:{col:7,line:6},endBody:{col:1,line:93}}}}},title:"交叉与透视 / 交叉表 / 示例"};var 基本用法=function 基本用法(){var makeTopChildren=function makeTopChildren(keyPrefix){return[{key:"".concat(keyPrefix,"-week-0"),value:"第一周",width:80},{key:"".concat(keyPrefix,"-week-1"),value:"第二周",width:80},{key:"".concat(keyPrefix,"-week-2"),value:"第三周",width:80},{key:"".concat(keyPrefix,"-week-3"),value:"第四周",width:80}]},topTree=[{key:"2020-01",value:"2020-01",children:makeTopChildren("2020-01")},{key:"2020-02",value:"2020-02",children:makeTopChildren("2020-02")},{key:"2020-03",value:"2020-03",children:makeTopChildren("2020-03")},{key:"2020-04",value:"2020-04",children:makeTopChildren("2020-04")},{key:"2020-05",value:"2020-05",children:makeTopChildren("2020-05")},{key:"2020-06",value:"2020-06",children:makeTopChildren("2020-06")}];return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement("p",{style:{fontSize:16,marginTop:0}},"2020年 养猪计划"),react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_2__.a,{defaultColumnWidth:100,leftTree:[{key:"forenoon",value:"上午",children:[{key:"9",value:"9:00-10:00"},{key:"10",value:"10:00-11:00"},{key:"11",value:"11:00-12:00"}]},{key:"lunch",value:"午餐"},{key:"afternoon",value:"下午",children:[{key:"14",value:"14:00-15:00"},{key:"15",value:"15:00-16:00"},{key:"16",value:"16:00-17:00"}]},{key:"dinner",value:"晚餐"},{key:"evening",value:"晚上",children:[{key:"20",value:"20:00-21:00"},{key:"21",value:"21:00-22:00"}]}],topTree:topTree,getValue:function getValue(leftNode,topNode){return"lunch"===leftNode.key?topNode.key.endsWith("week-0")?"肯德基":topNode.key.endsWith("week-1")?"麦当劳":topNode.key.endsWith("week-2")?"汉堡王":"烧烤":"dinner"===leftNode.key?topNode.key.endsWith("week-0")?"盒马":topNode.key.endsWith("week-1")?"海底捞":topNode.key.endsWith("week-2")?"麦当劳":"体重+1":void 0},render:function render(value,leftNode,topNode){return value}}))};基本用法.displayName="基本用法",基本用法.parameters=Object.assign({storySource:{source:"function 基本用法() {\n  const leftTree: LeftCrossTreeNode[] = [\n    {\n      key: 'forenoon',\n      value: '上午',\n      children: [\n        { key: '9', value: '9:00-10:00' },\n        { key: '10', value: '10:00-11:00' },\n        { key: '11', value: '11:00-12:00' },\n      ],\n    },\n    { key: 'lunch', value: '午餐' },\n    {\n      key: 'afternoon',\n      value: '下午',\n      children: [\n        { key: '14', value: '14:00-15:00' },\n        { key: '15', value: '15:00-16:00' },\n        { key: '16', value: '16:00-17:00' },\n      ],\n    },\n    { key: 'dinner', value: '晚餐' },\n    {\n      key: 'evening',\n      value: '晚上',\n      children: [\n        { key: '20', value: '20:00-21:00' },\n        { key: '21', value: '21:00-22:00' },\n      ],\n    },\n  ]\n\n  const makeTopChildren = (keyPrefix: string): TopCrossTreeNode[] => [\n    { key: `${keyPrefix}-week-0`, value: '第一周', width: 80 },\n    { key: `${keyPrefix}-week-1`, value: '第二周', width: 80 },\n    { key: `${keyPrefix}-week-2`, value: '第三周', width: 80 },\n    { key: `${keyPrefix}-week-3`, value: '第四周', width: 80 },\n  ]\n  const topTree: TopCrossTreeNode[] = [\n    { key: '2020-01', value: '2020-01', children: makeTopChildren('2020-01') },\n    { key: '2020-02', value: '2020-02', children: makeTopChildren('2020-02') },\n    { key: '2020-03', value: '2020-03', children: makeTopChildren('2020-03') },\n    { key: '2020-04', value: '2020-04', children: makeTopChildren('2020-04') },\n    { key: '2020-05', value: '2020-05', children: makeTopChildren('2020-05') },\n    { key: '2020-06', value: '2020-06', children: makeTopChildren('2020-06') },\n  ]\n\n  const getValue = (leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode) => {\n    if (leftNode.key === 'lunch') {\n      if (topNode.key.endsWith('week-0')) {\n        return '肯德基'\n      } else if (topNode.key.endsWith('week-1')) {\n        return '麦当劳'\n      } else if (topNode.key.endsWith('week-2')) {\n        return '汉堡王'\n      } else {\n        return '烧烤'\n      }\n    } else if (leftNode.key === 'dinner') {\n      if (topNode.key.endsWith('week-0')) {\n        return '盒马'\n      } else if (topNode.key.endsWith('week-1')) {\n        return '海底捞'\n      } else if (topNode.key.endsWith('week-2')) {\n        return '麦当劳'\n      } else {\n        return '体重+1'\n      }\n    }\n  }\n\n  return (\n    <div>\n      <p style={{ fontSize: 16, marginTop: 0 }}>2020年 养猪计划</p>\n      <CrossTable\n        defaultColumnWidth={100}\n        leftTree={leftTree}\n        topTree={topTree}\n        // 自定义的取数逻辑\n        getValue={getValue}\n        // 可选的 自定义的渲染逻辑\n        render={(value, leftNode, topNode) => {\n          return value\n        }}\n      />\n    </div>\n  )\n}"}},基本用法.parameters)},2185:function(module,exports,__webpack_require__){var map={"./cross-tree-table.stories.mdx":2186,"./cross-tree-table.stories.tsx":2187};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2185},2186:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(51),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7__);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"交叉与透视 / 交叉树状表格 / 文档",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"交叉树状表格"},"交叉树状表格"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"交叉树状表格（CrossTreeTable）与交叉表（CrossTable）类似，但在表格左侧提供了树状展开/收拢的能力，更适用于日常业务开发。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"主要特性"},"主要特性"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"不依赖特定组件库，可独立使用"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"简单、一致的 API 与渲染模型：",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"strong"},"左树 + 上树 => 表格"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"高性能：数据量较大时，自动开启虚拟滚动")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"用法"},"用法"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"CrossTreeTable 主要由以下几个部分组成："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"primaryColumn")," 描述表格第一列"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"通过 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"leftTree")," 描述表格左侧的树状结构；"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"通过 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"topTree")," 描述表格上方的树状结构；"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"通过 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"getValue")," 来定义每个单元格的内容；"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"CrossTreeTable 会根据 leftTree/topTree 来渲染表格结构，并调用 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"getValue")," 获取单元格的内容")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-js"}),"// prettier-ignore\n<CrossTreeTable\n  // 推荐为 CrossTreeTable 设置一个默认列宽\n  defaultColumnWidth={100}\n\n  // 非受控用法\n  defaultOpenKeys={[leftTree[0].key]}\n\n  // 受控用法\n  // openKeys={openKeys}\n  // onChangeOpenKeys={nextOpenKeys => { /* update openKeys */ }}\n\n  // 表格第一列的配置\n  primaryColumn={{ lock: true, name: '数据维度', width: 200 }}\n\n  leftTree={leftTree}\n  topTree={topTree}\n  getValue={(leftNode, topNode) => {\n    // 自定义的取数逻辑，针对每个单元格都会调用一次\n    // leftNode 表示当前单元格对应的左侧树节点，topNode 是对应的上方树节点\n  }}\n\n  // 可选的自定义的渲染逻辑\n  render={(value, leftNode, topNode) => {\n    return value\n  }}\n/>\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Canvas,{mdxType:"Canvas"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Story,{id:"交叉与透视-交叉树状表格-示例--基本示例",mdxType:"Story"})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"lefttree-的结构--toptree-的结构"},"leftTree 的结构 / topTree 的结构"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"leftTree/topTree 都是一个具有 key/value/children 嵌套结构的数组，详见 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default.a,{kind:"交叉与透视 / 交叉表",story:"page",mdxType:"LinkTo"},"交叉表文档"),"."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"注意 CrossTreeTable 对于 leftTree 和 topTree 的处理有所不同："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"leftTree 中的每个节点对应表格中的一行，包括叶子节点和非叶节点"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"topTree 中的叶子节点对应 表格上的一列")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"其他-props"},"其他 props"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"CrossTreeTable 的底层依赖了 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"BaseTable"),"，故两者的 props 大部分是相同的。两者的不同点具体如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"CrossTreeTable 没有 dataSource 和 columns",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"表格结构由 leftTree 和 rightTree 提供，而单元格内容由 getValue 提供"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"单元格渲染内容可使用 render 进行自定义；单元格的 props（即表格内的 td 元素）可使用 getCellProps 进行自定义"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"CrossTreeTable 没有 primaryKey",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"CrossTreeTable 左侧树中每个节点都有一个唯一的 key 值，故不再需要上层指定 primaryKey"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"其他新增的 props",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"CrossTreeTable 使用 primaryColumn 来描述 表格第一列的配置"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"openKeys/onChangeOpenKeys/defaultOpenKeys：树状模式下展开节点的 key 数组")))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"CrossTreeTable props 具体如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"export interface CrossTreeTableProps extends Omit<BaseTableProps, 'dataSource' | 'columns' | 'primaryKey'> {\n  primaryColumn: CrossTableLeftMetaColumn\n  leftTree: LeftCrossTreeNode[]\n  topTree: TopCrossTreeNode[]\n\n  defaultOpenKeys?: string[]\n  openKeys?: string[]\n  onChangeOpenKeys?(nextOpenKeys: string[]): void\n\n  getValue(leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number): any\n  render?(\n    value: any,\n    leftNode: LeftCrossTreeNode,\n    topNode: TopCrossTreeNode,\n    leftDepth: number,\n    topDepth: number,\n  ): ReactNode\n  getCellProps?(\n    value: any,\n    leftNode: LeftCrossTreeNode,\n    topNode: TopCrossTreeNode,\n    leftDepth: number,\n    topDepth: number,\n  ): CellProps\n}\n\nexport interface CrossTableLeftMetaColumn extends Omit<ArtColumnStaticPart, 'hidden'> {\n  /** 自定义渲染方法 */\n  render?(leftNode: LeftCrossTreeNode, leftDepth: number): ReactNode\n\n  /** 自定义的获取单元格 props 的方法 */\n  getCellProps?(leftNode: LeftCrossTreeNode, leftDepth: number): CellProps\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"不要被长长的 TypeScript 类型代码吓到，CrossTreeTable 的 props 其实和 BaseTable 差别不大（好吧，还是有点大的）。"))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"交叉与透视 / 交叉树状表格 / 文档",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},2187:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"基本示例",(function(){return 基本示例}));__webpack_require__(7);var ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(2205),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);__webpack_exports__.default={parameters:{storySource:{source:"import { CrossTreeTable, LeftCrossTreeNode, TopCrossTreeNode } from 'ali-react-table/pivot'\nimport React from 'react'\n\nexport default { title: '交叉与透视 / 交叉树状表格 / 示例' }\n\nexport function 基本示例() {\n  const leftTree: LeftCrossTreeNode[] = [\n    {\n      key: 'forenoon',\n      value: '上午',\n      data: { parent: true },\n      children: [\n        { key: '9', value: '9:00-10:00', data: { x: 0 } },\n        { key: '10', value: '10:00-11:00', data: { x: 1 } },\n        { key: '11', value: '11:00-12:00', data: { x: 2 } },\n      ],\n    },\n    {\n      key: 'afternoon',\n      value: '下午',\n      data: { parent: true },\n      children: [\n        { key: '14', value: '14:00-15:00', data: { x: 3 } },\n        { key: '15', value: '15:00-16:00', data: { x: 4 } },\n        { key: '16', value: '16:00-17:00', data: { x: 5 } },\n      ],\n    },\n    {\n      key: 'evening',\n      value: '晚上',\n      data: { parent: true },\n      children: [\n        { key: '20', value: '20:00-21:00', data: { x: 7 } },\n        { key: '21', value: '21:00-22:00', data: { x: 8 } },\n      ],\n    },\n  ]\n\n  const makeTopChildren = (keyPrefix: string): TopCrossTreeNode[] => [\n    { key: `${keyPrefix}-week-0`, value: '第一周', data: { y: 0 } },\n    { key: `${keyPrefix}-week-1`, value: '第二周', data: { y: 1 } },\n    { key: `${keyPrefix}-week-2`, value: '第三周', data: { y: 2 } },\n    { key: `${keyPrefix}-week-3`, value: '第四周', data: { y: 3 } },\n  ]\n  const topTree: TopCrossTreeNode[] = [\n    { key: '2020-01', value: '2020-01', children: makeTopChildren('2020-01') },\n    { key: '2020-02', value: '2020-02', children: makeTopChildren('2020-02') },\n    { key: '2020-03', value: '2020-03', children: makeTopChildren('2020-03') },\n    { key: '2020-04', value: '2020-04', children: makeTopChildren('2020-04') },\n    { key: '2020-05', value: '2020-05', children: makeTopChildren('2020-05') },\n    { key: '2020-06', value: '2020-06', children: makeTopChildren('2020-06') },\n  ]\n\n  const getValue = (leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode) => {\n    if (leftNode.data.parent) {\n      const map: any = {\n        forenoon: '万事开头难',\n        afternoon: '然后中间难',\n        evening: '最后结束难',\n      }\n      return map[leftNode.key]\n    }\n\n    const courses = ['数学', '英语', '计算机基础', '数据结构', '线性代数', '微积分', '概率论']\n    const i = (leftNode.data.x + topNode.data.y) % courses.length\n    return courses[i]\n  }\n\n  return (\n    <div>\n      <p style={{ fontSize: 16, marginTop: 0 }}>2020年 学习计划</p>\n      <CrossTreeTable\n        // 非受控用法：\n        defaultOpenKeys={[leftTree[0].key]}\n        // 受控用法：\n        // const [openKeys, onChangeOpenKeys] = useState([leftTree[0].key])\n        // openKeys={openKeys}\n        // onChangeOpenKeys={onChangeOpenKeys}\n\n        // 表格第一列的配置\n        primaryColumn={{ lock: true, name: '数据维度', width: 200 }}\n        defaultColumnWidth={100}\n        leftTree={leftTree}\n        topTree={topTree}\n        getValue={getValue}\n      />\n    </div>\n  )\n}\n",locationsMap:{"基本示例":{startLoc:{col:7,line:6},endLoc:{col:1,line:89},startBody:{col:7,line:6},endBody:{col:1,line:89}}}}},title:"交叉与透视 / 交叉树状表格 / 示例"};var 基本示例=function 基本示例(){var leftTree=[{key:"forenoon",value:"上午",data:{parent:!0},children:[{key:"9",value:"9:00-10:00",data:{x:0}},{key:"10",value:"10:00-11:00",data:{x:1}},{key:"11",value:"11:00-12:00",data:{x:2}}]},{key:"afternoon",value:"下午",data:{parent:!0},children:[{key:"14",value:"14:00-15:00",data:{x:3}},{key:"15",value:"15:00-16:00",data:{x:4}},{key:"16",value:"16:00-17:00",data:{x:5}}]},{key:"evening",value:"晚上",data:{parent:!0},children:[{key:"20",value:"20:00-21:00",data:{x:7}},{key:"21",value:"21:00-22:00",data:{x:8}}]}],makeTopChildren=function makeTopChildren(keyPrefix){return[{key:"".concat(keyPrefix,"-week-0"),value:"第一周",data:{y:0}},{key:"".concat(keyPrefix,"-week-1"),value:"第二周",data:{y:1}},{key:"".concat(keyPrefix,"-week-2"),value:"第三周",data:{y:2}},{key:"".concat(keyPrefix,"-week-3"),value:"第四周",data:{y:3}}]},topTree=[{key:"2020-01",value:"2020-01",children:makeTopChildren("2020-01")},{key:"2020-02",value:"2020-02",children:makeTopChildren("2020-02")},{key:"2020-03",value:"2020-03",children:makeTopChildren("2020-03")},{key:"2020-04",value:"2020-04",children:makeTopChildren("2020-04")},{key:"2020-05",value:"2020-05",children:makeTopChildren("2020-05")},{key:"2020-06",value:"2020-06",children:makeTopChildren("2020-06")}];return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("p",{style:{fontSize:16,marginTop:0}},"2020年 学习计划"),react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_1__.a,{defaultOpenKeys:[leftTree[0].key],primaryColumn:{lock:!0,name:"数据维度",width:200},defaultColumnWidth:100,leftTree:leftTree,topTree:topTree,getValue:function getValue(leftNode,topNode){if(leftNode.data.parent){return{forenoon:"万事开头难",afternoon:"然后中间难",evening:"最后结束难"}[leftNode.key]}var courses=["数学","英语","计算机基础","数据结构","线性代数","微积分","概率论"];return courses[(leftNode.data.x+topNode.data.y)%courses.length]}}))};基本示例.displayName="基本示例",基本示例.parameters=Object.assign({storySource:{source:"function 基本示例() {\n  const leftTree: LeftCrossTreeNode[] = [\n    {\n      key: 'forenoon',\n      value: '上午',\n      data: { parent: true },\n      children: [\n        { key: '9', value: '9:00-10:00', data: { x: 0 } },\n        { key: '10', value: '10:00-11:00', data: { x: 1 } },\n        { key: '11', value: '11:00-12:00', data: { x: 2 } },\n      ],\n    },\n    {\n      key: 'afternoon',\n      value: '下午',\n      data: { parent: true },\n      children: [\n        { key: '14', value: '14:00-15:00', data: { x: 3 } },\n        { key: '15', value: '15:00-16:00', data: { x: 4 } },\n        { key: '16', value: '16:00-17:00', data: { x: 5 } },\n      ],\n    },\n    {\n      key: 'evening',\n      value: '晚上',\n      data: { parent: true },\n      children: [\n        { key: '20', value: '20:00-21:00', data: { x: 7 } },\n        { key: '21', value: '21:00-22:00', data: { x: 8 } },\n      ],\n    },\n  ]\n\n  const makeTopChildren = (keyPrefix: string): TopCrossTreeNode[] => [\n    { key: `${keyPrefix}-week-0`, value: '第一周', data: { y: 0 } },\n    { key: `${keyPrefix}-week-1`, value: '第二周', data: { y: 1 } },\n    { key: `${keyPrefix}-week-2`, value: '第三周', data: { y: 2 } },\n    { key: `${keyPrefix}-week-3`, value: '第四周', data: { y: 3 } },\n  ]\n  const topTree: TopCrossTreeNode[] = [\n    { key: '2020-01', value: '2020-01', children: makeTopChildren('2020-01') },\n    { key: '2020-02', value: '2020-02', children: makeTopChildren('2020-02') },\n    { key: '2020-03', value: '2020-03', children: makeTopChildren('2020-03') },\n    { key: '2020-04', value: '2020-04', children: makeTopChildren('2020-04') },\n    { key: '2020-05', value: '2020-05', children: makeTopChildren('2020-05') },\n    { key: '2020-06', value: '2020-06', children: makeTopChildren('2020-06') },\n  ]\n\n  const getValue = (leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode) => {\n    if (leftNode.data.parent) {\n      const map: any = {\n        forenoon: '万事开头难',\n        afternoon: '然后中间难',\n        evening: '最后结束难',\n      }\n      return map[leftNode.key]\n    }\n\n    const courses = ['数学', '英语', '计算机基础', '数据结构', '线性代数', '微积分', '概率论']\n    const i = (leftNode.data.x + topNode.data.y) % courses.length\n    return courses[i]\n  }\n\n  return (\n    <div>\n      <p style={{ fontSize: 16, marginTop: 0 }}>2020年 学习计划</p>\n      <CrossTreeTable\n        // 非受控用法：\n        defaultOpenKeys={[leftTree[0].key]}\n        // 受控用法：\n        // const [openKeys, onChangeOpenKeys] = useState([leftTree[0].key])\n        // openKeys={openKeys}\n        // onChangeOpenKeys={onChangeOpenKeys}\n\n        // 表格第一列的配置\n        primaryColumn={{ lock: true, name: '数据维度', width: 200 }}\n        defaultColumnWidth={100}\n        leftTree={leftTree}\n        topTree={topTree}\n        getValue={getValue}\n      />\n    </div>\n  )\n}"}},基本示例.parameters)},2188:function(module,exports,__webpack_require__){var map={"./pivot-utils.stories.mdx":2200};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2188},2189:function(module,exports,__webpack_require__){var map={"./drill-tree-table/drillable-tree-table.stories.tsx":2198,"./simple-pivot-table.stories.tsx":2192};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=2189},2192:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"简易透视表",(function(){return 简易透视表}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(32),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(103),__webpack_require__(7),__webpack_require__(13),__webpack_require__(27),__webpack_require__(90),__webpack_require__(21),__webpack_require__(24);var ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(243),ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(925),ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(924),ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(929),dvt_aggregation__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(238),react__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_22___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_22__),_assets_cdn_data__WEBPACK_IMPORTED_MODULE_23__=__webpack_require__(80),_assets_format__WEBPACK_IMPORTED_MODULE_24__=__webpack_require__(12),_assets_fusion_style__WEBPACK_IMPORTED_MODULE_25__=__webpack_require__(63),_MinimumPivotTableDesigner__WEBPACK_IMPORTED_MODULE_26__=__webpack_require__(363);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={parameters:{storySource:{source:"import {\n  buildDrillTree,\n  buildRecordMatrix,\n  convertDrillTreeToCrossTree,\n  CrossTable,\n  DrillNode,\n} from 'ali-react-table/pivot'\nimport { createAggregateFunction } from 'dvt-aggregation'\nimport React, { useEffect, useState } from 'react'\nimport { getIncomeData } from '../../assets/cdn-data'\nimport { amount, lfl, ratio } from '../../assets/format'\nimport { FusionStyles } from '../../assets/fusion-style'\nimport MinimumPivotTableDesigner from '../MinimumPivotTableDesigner'\n\nexport default { title: '交叉与透视 / 示例 / 简易透视表' }\n\nconst dimensions = [\n  { code: 'planet', name: '子公司', width: 150 },\n  { code: 'area', name: '门店', width: 150 },\n  { code: 'season', name: '季度' },\n  { code: 'month', name: '月份' },\n  { code: 'one', name: '一级类目' },\n  { code: 'two', name: '二级类目' },\n  { code: 'three', name: '三级类目' },\n]\n\nconst dimMap = new Map(dimensions.map((dim) => [dim.code, dim]))\n\nconst indicators = [\n  {\n    code: 'a',\n    name: '指标A',\n    width: 100,\n    align: 'right' as const,\n    expression: 'SUM(a)',\n    render: amount,\n  },\n  {\n    code: 'b',\n    name: '指标B',\n    width: 100,\n    align: 'right' as const,\n    expression: 'SUM(b)',\n    render: amount,\n  },\n  {\n    code: 'c',\n    name: '指标C',\n    hidden: true,\n    render: amount,\n    expression: 'SUM(c)',\n  },\n  {\n    code: 'lfl',\n    name: '环比指标',\n    expression: '(b - c) / c',\n    width: 100,\n    align: 'right' as const,\n    render: lfl,\n  },\n  {\n    code: 'd',\n    name: '指标D',\n    expression: 'SUM(d)',\n    render: amount,\n    width: 120,\n    align: 'right' as const,\n  },\n  {\n    code: 'rate',\n    name: '占比指标',\n    expression: 'd / b',\n    render: ratio,\n    width: 120,\n    align: 'right' as const,\n  },\n]\n\nfunction generateSubtotalNode(drillNode: DrillNode) {\n  return {\n    position: 'start' as const,\n    value: drillNode.path.length === 0 ? '总计' : '小计',\n  }\n}\n\nexport function 简易透视表() {\n  const [{ data, isLoading }, setState] = useState({ isLoading: true, data: [] as any[] })\n\n  useEffect(() => {\n    getIncomeData().then((data) => setState({ data, isLoading: false }))\n  }, [])\n\n  const [indicatorSide, onChangeIndicatorSide] = useState('top')\n  const [leftCodes, onChangeLeftCodes] = useState(['planet', 'area', 'one'])\n  const [topCodes, onChangeTopCodes] = useState(['season', 'month'])\n  const [showSubtotal, onChangeShowSubtotal] = useState(true)\n  const [supportsExpand, onChangeSupportsExpand] = useState(false)\n\n  const [leftExpandKeys, onChangeLeftExpandKeys] = useState<string[]>([])\n  const leftExpandKeySet = new Set(leftExpandKeys)\n  const leftDrillTree = buildDrillTree(data, leftCodes, {\n    includeTopWrapper: true,\n    isExpand: !supportsExpand ? undefined : (key) => leftExpandKeySet.has(key),\n  })\n  const [leftTreeRoot] = convertDrillTreeToCrossTree(leftDrillTree, {\n    indicators: indicatorSide === 'left' ? indicators : null,\n    generateSubtotalNode: showSubtotal ? generateSubtotalNode : null,\n    supportsExpand,\n    expandKeys: leftExpandKeys,\n    onChangeExpandKeys: onChangeLeftExpandKeys,\n  })\n\n  const [topExpandKeys, onChangeTopExpandKeys] = useState<string[]>([])\n  const topExpandKeySet = new Set(topExpandKeys)\n  const topDrillTree = buildDrillTree(data, topCodes, {\n    includeTopWrapper: true,\n    isExpand: !supportsExpand ? undefined : (key) => topExpandKeySet.has(key),\n  })\n  const [topTreeRoot] = convertDrillTreeToCrossTree(topDrillTree, {\n    indicators: indicatorSide === 'top' ? indicators : null,\n    generateSubtotalNode: showSubtotal ? generateSubtotalNode : null,\n    supportsExpand,\n    expandKeys: topExpandKeys,\n    onChangeExpandKeys: onChangeTopExpandKeys,\n  })\n\n  const aggregate = createAggregateFunction(indicators)\n  const matrix = buildRecordMatrix({\n    data,\n    leftCodes,\n    topCodes,\n    aggregate,\n    prebuiltLeftTree: leftDrillTree,\n    prebuiltTopTree: topDrillTree,\n  })\n\n  return (\n    <div style={{ minWidth: 800 }}>\n      <FusionStyles />\n      <MinimumPivotTableDesigner\n        showSupportsExpandToggle\n        supportsExpand={supportsExpand}\n        onChangeSupportsExpand={onChangeSupportsExpand}\n        showSubtotal={showSubtotal}\n        onChangeShowSubtotal={onChangeShowSubtotal}\n        dimensions={dimensions}\n        leftCodes={leftCodes}\n        onChangeLeftCodes={onChangeLeftCodes}\n        topCodes={topCodes}\n        onChangeTopCodes={onChangeTopCodes}\n        indicatorSide={indicatorSide}\n        onChangeIndicatorSide={onChangeIndicatorSide}\n      />\n      <CrossTable\n        isLoading={isLoading}\n        defaultColumnWidth={100}\n        useVirtual={true}\n        leftMetaColumns={leftCodes.map((code) => dimMap.get(code))}\n        leftTree={leftTreeRoot.children}\n        leftTotalNode={leftTreeRoot} // 当 leftTree 为空时，leftTotalNode 用于渲染总计行\n        topTree={topTreeRoot.children}\n        topTotalNode={topTreeRoot} // 当 topTree 为空时，topTotalNode 用于渲染总计列\n        getValue={(leftNode, topNode) => {\n          // 注意这里我们使用 node.data.dataKey 来获取单元格在 matrix 中的 record\n          const record = matrix.get(leftNode.data.dataKey).get(topNode.data.dataKey)\n          if (record == null) {\n            return '-'\n          }\n          const indicator = leftNode.data?.indicator ?? topNode.data?.indicator\n          return record[indicator.code]\n        }}\n        render={(value, leftNode, topNode) => {\n          const render = leftNode.data?.indicator?.render ?? topNode.data?.indicator?.render\n          return render ? render(value) : value\n        }}\n      />\n    </div>\n  )\n}\n",locationsMap:{"简易透视表":{startLoc:{col:7,line:86},endLoc:{col:1,line:179},startBody:{col:7,line:86},endBody:{col:1,line:179}}}}},title:"交叉与透视 / 示例 / 简易透视表"};var dimensions=[{code:"planet",name:"子公司",width:150},{code:"area",name:"门店",width:150},{code:"season",name:"季度"},{code:"month",name:"月份"},{code:"one",name:"一级类目"},{code:"two",name:"二级类目"},{code:"three",name:"三级类目"}],dimMap=new Map(dimensions.map((function(dim){return[dim.code,dim]}))),indicators=[{code:"a",name:"指标A",width:100,align:"right",expression:"SUM(a)",render:_assets_format__WEBPACK_IMPORTED_MODULE_24__.a},{code:"b",name:"指标B",width:100,align:"right",expression:"SUM(b)",render:_assets_format__WEBPACK_IMPORTED_MODULE_24__.a},{code:"c",name:"指标C",hidden:!0,render:_assets_format__WEBPACK_IMPORTED_MODULE_24__.a,expression:"SUM(c)"},{code:"lfl",name:"环比指标",expression:"(b - c) / c",width:100,align:"right",render:_assets_format__WEBPACK_IMPORTED_MODULE_24__.b},{code:"d",name:"指标D",expression:"SUM(d)",render:_assets_format__WEBPACK_IMPORTED_MODULE_24__.a,width:120,align:"right"},{code:"rate",name:"占比指标",expression:"d / b",render:_assets_format__WEBPACK_IMPORTED_MODULE_24__.c,width:120,align:"right"}];function generateSubtotalNode(drillNode){return{position:"start",value:0===drillNode.path.length?"总计":"小计"}}var 简易透视表=function 简易透视表(){var _useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_22__.useState)({isLoading:!0,data:[]}),2),_useState2$=_useState2[0],data=_useState2$.data,isLoading=_useState2$.isLoading,setState=_useState2[1];Object(react__WEBPACK_IMPORTED_MODULE_22__.useEffect)((function(){Object(_assets_cdn_data__WEBPACK_IMPORTED_MODULE_23__.b)().then((function(data){return setState({data:data,isLoading:!1})}))}),[]);var _useState4=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_22__.useState)("top"),2),indicatorSide=_useState4[0],onChangeIndicatorSide=_useState4[1],_useState6=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_22__.useState)(["planet","area","one"]),2),leftCodes=_useState6[0],onChangeLeftCodes=_useState6[1],_useState8=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_22__.useState)(["season","month"]),2),topCodes=_useState8[0],onChangeTopCodes=_useState8[1],_useState10=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_22__.useState)(!0),2),showSubtotal=_useState10[0],onChangeShowSubtotal=_useState10[1],_useState12=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_22__.useState)(!1),2),supportsExpand=_useState12[0],onChangeSupportsExpand=_useState12[1],_useState14=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_22__.useState)([]),2),leftExpandKeys=_useState14[0],onChangeLeftExpandKeys=_useState14[1],leftExpandKeySet=new Set(leftExpandKeys),leftDrillTree=Object(ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_17__.a)(data,leftCodes,{includeTopWrapper:!0,isExpand:supportsExpand?function(key){return leftExpandKeySet.has(key)}:void 0}),leftTreeRoot=_slicedToArray(Object(ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_18__.a)(leftDrillTree,{indicators:"left"===indicatorSide?indicators:null,generateSubtotalNode:showSubtotal?generateSubtotalNode:null,supportsExpand:supportsExpand,expandKeys:leftExpandKeys,onChangeExpandKeys:onChangeLeftExpandKeys}),1)[0],_useState16=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_22__.useState)([]),2),topExpandKeys=_useState16[0],onChangeTopExpandKeys=_useState16[1],topExpandKeySet=new Set(topExpandKeys),topDrillTree=Object(ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_17__.a)(data,topCodes,{includeTopWrapper:!0,isExpand:supportsExpand?function(key){return topExpandKeySet.has(key)}:void 0}),topTreeRoot=_slicedToArray(Object(ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_18__.a)(topDrillTree,{indicators:"top"===indicatorSide?indicators:null,generateSubtotalNode:showSubtotal?generateSubtotalNode:null,supportsExpand:supportsExpand,expandKeys:topExpandKeys,onChangeExpandKeys:onChangeTopExpandKeys}),1)[0],aggregate=Object(dvt_aggregation__WEBPACK_IMPORTED_MODULE_21__.a)(indicators),matrix=Object(ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_19__.b)({data:data,leftCodes:leftCodes,topCodes:topCodes,aggregate:aggregate,prebuiltLeftTree:leftDrillTree,prebuiltTopTree:topDrillTree});return react__WEBPACK_IMPORTED_MODULE_22___default.a.createElement("div",{style:{minWidth:800}},react__WEBPACK_IMPORTED_MODULE_22___default.a.createElement(_assets_fusion_style__WEBPACK_IMPORTED_MODULE_25__.a,null),react__WEBPACK_IMPORTED_MODULE_22___default.a.createElement(_MinimumPivotTableDesigner__WEBPACK_IMPORTED_MODULE_26__.a,{showSupportsExpandToggle:!0,supportsExpand:supportsExpand,onChangeSupportsExpand:onChangeSupportsExpand,showSubtotal:showSubtotal,onChangeShowSubtotal:onChangeShowSubtotal,dimensions:dimensions,leftCodes:leftCodes,onChangeLeftCodes:onChangeLeftCodes,topCodes:topCodes,onChangeTopCodes:onChangeTopCodes,indicatorSide:indicatorSide,onChangeIndicatorSide:onChangeIndicatorSide}),react__WEBPACK_IMPORTED_MODULE_22___default.a.createElement(ali_react_table_pivot__WEBPACK_IMPORTED_MODULE_20__.a,{isLoading:isLoading,defaultColumnWidth:100,useVirtual:!0,leftMetaColumns:leftCodes.map((function(code){return dimMap.get(code)})),leftTree:leftTreeRoot.children,leftTotalNode:leftTreeRoot,topTree:topTreeRoot.children,topTotalNode:topTreeRoot,getValue:function getValue(leftNode,topNode){var _leftNode$data$indica,_leftNode$data,_topNode$data,record=matrix.get(leftNode.data.dataKey).get(topNode.data.dataKey);return null==record?"-":record[(null!==(_leftNode$data$indica=null===(_leftNode$data=leftNode.data)||void 0===_leftNode$data?void 0:_leftNode$data.indicator)&&void 0!==_leftNode$data$indica?_leftNode$data$indica:null===(_topNode$data=topNode.data)||void 0===_topNode$data?void 0:_topNode$data.indicator).code]},render:function render(value,leftNode,topNode){var _leftNode$data$indica2,_leftNode$data2,_leftNode$data2$indic,_topNode$data2,_topNode$data2$indica,render=null!==(_leftNode$data$indica2=null===(_leftNode$data2=leftNode.data)||void 0===_leftNode$data2||null===(_leftNode$data2$indic=_leftNode$data2.indicator)||void 0===_leftNode$data2$indic?void 0:_leftNode$data2$indic.render)&&void 0!==_leftNode$data$indica2?_leftNode$data$indica2:null===(_topNode$data2=topNode.data)||void 0===_topNode$data2||null===(_topNode$data2$indica=_topNode$data2.indicator)||void 0===_topNode$data2$indica?void 0:_topNode$data2$indica.render;return render?render(value):value}}))};简易透视表.displayName="简易透视表",简易透视表.parameters=Object.assign({storySource:{source:"function 简易透视表() {\n  const [{ data, isLoading }, setState] = useState({ isLoading: true, data: [] as any[] })\n\n  useEffect(() => {\n    getIncomeData().then((data) => setState({ data, isLoading: false }))\n  }, [])\n\n  const [indicatorSide, onChangeIndicatorSide] = useState('top')\n  const [leftCodes, onChangeLeftCodes] = useState(['planet', 'area', 'one'])\n  const [topCodes, onChangeTopCodes] = useState(['season', 'month'])\n  const [showSubtotal, onChangeShowSubtotal] = useState(true)\n  const [supportsExpand, onChangeSupportsExpand] = useState(false)\n\n  const [leftExpandKeys, onChangeLeftExpandKeys] = useState<string[]>([])\n  const leftExpandKeySet = new Set(leftExpandKeys)\n  const leftDrillTree = buildDrillTree(data, leftCodes, {\n    includeTopWrapper: true,\n    isExpand: !supportsExpand ? undefined : (key) => leftExpandKeySet.has(key),\n  })\n  const [leftTreeRoot] = convertDrillTreeToCrossTree(leftDrillTree, {\n    indicators: indicatorSide === 'left' ? indicators : null,\n    generateSubtotalNode: showSubtotal ? generateSubtotalNode : null,\n    supportsExpand,\n    expandKeys: leftExpandKeys,\n    onChangeExpandKeys: onChangeLeftExpandKeys,\n  })\n\n  const [topExpandKeys, onChangeTopExpandKeys] = useState<string[]>([])\n  const topExpandKeySet = new Set(topExpandKeys)\n  const topDrillTree = buildDrillTree(data, topCodes, {\n    includeTopWrapper: true,\n    isExpand: !supportsExpand ? undefined : (key) => topExpandKeySet.has(key),\n  })\n  const [topTreeRoot] = convertDrillTreeToCrossTree(topDrillTree, {\n    indicators: indicatorSide === 'top' ? indicators : null,\n    generateSubtotalNode: showSubtotal ? generateSubtotalNode : null,\n    supportsExpand,\n    expandKeys: topExpandKeys,\n    onChangeExpandKeys: onChangeTopExpandKeys,\n  })\n\n  const aggregate = createAggregateFunction(indicators)\n  const matrix = buildRecordMatrix({\n    data,\n    leftCodes,\n    topCodes,\n    aggregate,\n    prebuiltLeftTree: leftDrillTree,\n    prebuiltTopTree: topDrillTree,\n  })\n\n  return (\n    <div style={{ minWidth: 800 }}>\n      <FusionStyles />\n      <MinimumPivotTableDesigner\n        showSupportsExpandToggle\n        supportsExpand={supportsExpand}\n        onChangeSupportsExpand={onChangeSupportsExpand}\n        showSubtotal={showSubtotal}\n        onChangeShowSubtotal={onChangeShowSubtotal}\n        dimensions={dimensions}\n        leftCodes={leftCodes}\n        onChangeLeftCodes={onChangeLeftCodes}\n        topCodes={topCodes}\n        onChangeTopCodes={onChangeTopCodes}\n        indicatorSide={indicatorSide}\n        onChangeIndicatorSide={onChangeIndicatorSide}\n      />\n      <CrossTable\n        isLoading={isLoading}\n        defaultColumnWidth={100}\n        useVirtual={true}\n        leftMetaColumns={leftCodes.map((code) => dimMap.get(code))}\n        leftTree={leftTreeRoot.children}\n        leftTotalNode={leftTreeRoot} // 当 leftTree 为空时，leftTotalNode 用于渲染总计行\n        topTree={topTreeRoot.children}\n        topTotalNode={topTreeRoot} // 当 topTree 为空时，topTotalNode 用于渲染总计列\n        getValue={(leftNode, topNode) => {\n          // 注意这里我们使用 node.data.dataKey 来获取单元格在 matrix 中的 record\n          const record = matrix.get(leftNode.data.dataKey).get(topNode.data.dataKey)\n          if (record == null) {\n            return '-'\n          }\n          const indicator = leftNode.data?.indicator ?? topNode.data?.indicator\n          return record[indicator.code]\n        }}\n        render={(value, leftNode, topNode) => {\n          const render = leftNode.data?.indicator?.render ?? topNode.data?.indicator?.render\n          return render ? render(value) : value\n        }}\n      />\n    </div>\n  )\n}"}},简易透视表.parameters)},2194:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"树状表格",(function(){return transforms_examples_stories_})),__webpack_require__.d(__webpack_exports__,"表格排序_多列",(function(){return table_transforms_examples_stories_})),__webpack_require__.d(__webpack_exports__,"表格排序_单列",(function(){return stories_table_transforms_examples_stories_})),__webpack_require__.d(__webpack_exports__,"列高亮",(function(){return stories_table_transforms_examples_stories_0})),__webpack_require__.d(__webpack_exports__,"列的范围高亮",(function(){return stories_table_transforms_examples_stories_1})),__webpack_require__.d(__webpack_exports__,"列气泡提示",(function(){return stories_table_transforms_examples_stories_2})),__webpack_require__.d(__webpack_exports__,"树状模式与层级排序",(function(){return stories_table_transforms_examples_stories_3})),__webpack_require__.d(__webpack_exports__,"单元格自动合并",(function(){return stories_table_transforms_examples_stories_4})),__webpack_require__.d(__webpack_exports__,"自定义样式的排序表头",(function(){return stories_table_transforms_examples_stories_5})),__webpack_require__.d(__webpack_exports__,"拖拽调整列宽",(function(){return stories_table_transforms_examples_stories_6})),__webpack_require__.d(__webpack_exports__,"自适应列宽_demo",(function(){return transforms_examples_stories_demo}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(33),__webpack_require__(498),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(32),__webpack_require__(23),__webpack_require__(499),__webpack_require__(28),__webpack_require__(10),__webpack_require__(7),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);var balloon=__webpack_require__(282),bucket_14=__webpack_require__(2215),bucket_17=__webpack_require__(2216),applyTransforms=__webpack_require__(244),buildTree=__webpack_require__(928),treeMode=__webpack_require__(523),table=__webpack_require__(55),bucket_11=(__webpack_require__(44),__webpack_require__(2158),__webpack_require__(29),__webpack_require__(334),__webpack_require__(103),__webpack_require__(19),__webpack_require__(2212)),react=__webpack_require__(0),react_default=__webpack_require__.n(react),styled_components_browser_esm=__webpack_require__(40),internals=__webpack_require__(60),isLeafNode=__webpack_require__(58),collectNodes=__webpack_require__(370);__webpack_require__(603);function smartCompare(x,y){if(null==x)return 1;if(null==y)return-1;if("number"==typeof x&&"number"==typeof y)return x-y;if("string"==typeof x&&"string"==typeof y)return x<y?-1:x>y?1:0;if(Array.isArray(x)&&Array.isArray(y)){for(var len=Math.min(x.length,y.length),i=0;i<len;i++){var cmp=smartCompare(x[i],y[i]);if(0!==cmp)return cmp}return x.length-y.length}return 0}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function SortIcon(_ref){var _ref$size=_ref.size,size=void 0===_ref$size?32:_ref$size,style=_ref.style,className=_ref.className,order=_ref.order;return react_default.a.createElement("svg",{style:style,className:className,focusable:"false",preserveAspectRatio:"xMidYMid meet",width:size,height:size,viewBox:"0 0 32 32","aria-hidden":"true"},react_default.a.createElement("path",{fill:"asc"===order?"#23A3FF":"#bfbfbf",transform:"translate(0, 4)",d:"M8 8L16 0 24 8z"}),react_default.a.createElement("path",{fill:"desc"===order?"#23A3FF":"#bfbfbf",transform:"translate(0, -4)",d:"M24 24L16 32 8 24z "}))}SortIcon.displayName="SortIcon";var NumberIconMap={1:bucket_11.a,2:bucket_11.b,3:bucket_11.c,4:bucket_11.d,5:bucket_11.e,6:bucket_11.f,7:bucket_11.g,8:bucket_11.h,9:bucket_11.i},EmptyIcon=function EmptyIcon(){return null};function DefaultSortHeaderCell(_ref2){var children=_ref2.children,column=_ref2.column,onToggle=_ref2.onToggle,sortOrder=_ref2.sortOrder,sortIndex=_ref2.sortIndex,sortOptions=_ref2.sortOptions,justifyContent="right"===column.align?"flex-end":"center"===column.align?"center":"flex-start",NumberIcon=EmptyIcon;return"multiple"===sortOptions.mode&&null!=NumberIconMap[sortIndex+1]&&(NumberIcon=NumberIconMap[sortIndex+1]),react_default.a.createElement(TableHeaderCell,{onClick:onToggle,style:{justifyContent:justifyContent}},children,react_default.a.createElement(SortIcon,{style:{marginLeft:2,flexShrink:0},size:16,order:sortOrder}),react_default.a.createElement(NumberIcon,{style:{fill:"#666",flexShrink:0}}))}DefaultSortHeaderCell.displayName="DefaultSortHeaderCell";var TableHeaderCell=styled_components_browser_esm.b.div.withConfig({displayName:"sort__TableHeaderCell",componentId:"zp001n-0"})(["cursor:pointer;display:flex;align-items:center;"]);function makeSortTransform(_ref3){var inputSorts=_ref3.sorts,inputOnChangeSorts=_ref3.onChangeSorts,_ref3$orders=_ref3.orders,orders=void 0===_ref3$orders?["desc","asc","none"]:_ref3$orders,_ref3$mode=_ref3.mode,mode=void 0===_ref3$mode?"multiple":_ref3$mode,SortHeaderCell=_ref3.SortHeaderCell,keepDataSource=_ref3.keepDataSource,filteredInputSorts=inputSorts.filter((function(s){return"none"!==s.order})),sorts="multiple"===mode?filteredInputSorts:filteredInputSorts.slice(0,1),onChangeSorts="multiple"===mode?inputOnChangeSorts:function(nextSorts){var len=nextSorts.length;inputOnChangeSorts(nextSorts.slice(len-1))},sortOptions={sorts:sorts,onChangeSorts:onChangeSorts,orders:orders,mode:mode,keepDataSource:keepDataSource},sortMap=new Map(sorts.map((function(sort,index){return[sort.code,Object.assign({index:index},sort)]})));return function(_ref4){var dataSource=_ref4.dataSource,columns=_ref4.columns;return{columns:function processColumns(columns){return columns.map((function dfs(col){var _col$features3,result=Object.assign({},col);if(col.code&&((null===(_col$features3=col.features)||void 0===_col$features3?void 0:_col$features3.sortable)||sortMap.has(col.code))){var sortIndex=-1,sortOrder="none";if(sortMap.has(col.code)){var _sortMap$get=sortMap.get(col.code),order=_sortMap$get.order,index=_sortMap$get.index;sortOrder=order,sortIndex=index}var SortHeaderCellComponent=null!=SortHeaderCell?SortHeaderCell:DefaultSortHeaderCell;result.title=react_default.a.createElement(SortHeaderCellComponent,{onToggle:function onToggle(){return function toggle(code){var sort=sortMap.get(code);if(null==sort)onChangeSorts(sorts.concat([{code:code,order:orders[0]}]));else{var index=sorts.findIndex((function(s){return s.code===code})),_nextSorts=sorts.slice(0,index+1),nextOrder=function getNextOrder(order){var idx=orders.indexOf(order);return orders[idx===orders.length-1?0:idx+1]}(sort.order);"none"===nextOrder?_nextSorts.pop():_nextSorts[index]=Object.assign({},_nextSorts[index],{order:nextOrder}),onChangeSorts(_nextSorts)}}(col.code)},sortOrder:sortOrder,column:col,sortIndex:sortIndex,sortOptions:sortOptions},Object(internals.safeRenderHeader)(col))}Object(isLeafNode.a)(col)||(result.children=col.children.map(dfs));return result}))}(columns),dataSource:function processDataSource(dataSource){if(keepDataSource)return dataSource;var sortColumnsMap=new Map(Object(collectNodes.a)(columns,"leaf-only").filter((function(col){var _col$features2;return null!=(null===(_col$features2=col.features)||void 0===_col$features2?void 0:_col$features2.sortable)})).map((function(col){return[col.code,col]})));return function layeredSort(array,compare){return function dfs(rows){if(!Array.isArray(array))return array;return rows.map((function(row){return Object(isLeafNode.a)(row)?row:Object.assign({},row,{children:dfs(row.children)})})).sort(compare)}(array)}(dataSource,(function(x,y){var _step,_iterator=function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e2){throw _e2},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e3){didErr=!0,err=_e3},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}(sorts);try{for(_iterator.s();!(_step=_iterator.n()).done;){var _ref5=_step.value,code=_ref5.code,order=_ref5.order,column=sortColumnsMap.get(code);if(null!=column){var sortable=column.features.sortable,cmp=("function"==typeof sortable?sortable:smartCompare)(Object(internals.safeGetValue)(column,x,-1),Object(internals.safeGetValue)(column,y,-1));if(0!==cmp)return cmp*("asc"===order?1:-1)}}}catch(err){_iterator.e(err)}finally{_iterator.f()}return 0}))}(dataSource)}}}function useSortTransform(){var _ref6=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},_ref6$defaultSorts=_ref6.defaultSorts,defaultSorts=void 0===_ref6$defaultSorts?[]:_ref6$defaultSorts,others=_objectWithoutProperties(_ref6,["defaultSorts"]),_useState=Object(react.useState)(defaultSorts),_useState2=_slicedToArray(_useState,2),sorts=_useState2[0],onChangeSorts=_useState2[1];return makeSortTransform(Object.assign({sorts:sorts,onChangeSorts:onChangeSorts},others))}try{makeSortTransform.displayName="makeSortTransform",makeSortTransform.__docgenInfo={description:"",displayName:"makeSortTransform",props:{sorts:{defaultValue:null,description:"排序字段列表",name:"sorts",required:!0,type:{name:"SortItem[]"}},onChangeSorts:{defaultValue:null,description:"更新排序字段列表的回调函数",name:"onChangeSorts",required:!0,type:{name:"(nextSorts: SortItem[]) => void"}},orders:{defaultValue:{value:"['desc', 'asc', 'none']"},description:"排序切换顺序",name:"orders",required:!1,type:{name:"SortOrder[]"}},mode:{defaultValue:{value:"multiple"},description:"排序模式。单选 single，多选 multiple，默认为多选",name:"mode",required:!1,type:{name:"enum",value:[{value:'"single"'},{value:'"multiple"'}]}},SortHeaderCell:{defaultValue:null,description:"自定义排序表头",name:"SortHeaderCell",required:!1,type:{name:"ComponentType<SortHeaderCellProps>"}},keepDataSource:{defaultValue:null,description:"是否保持 dataSource 不变",name:"keepDataSource",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/transforms/sort.tsx#makeSortTransform"]={docgenInfo:makeSortTransform.__docgenInfo,name:"makeSortTransform",path:"src/transforms/sort.tsx#makeSortTransform"})}catch(__react_docgen_typescript_loader_error){}try{useSortTransform.displayName="useSortTransform",useSortTransform.__docgenInfo={description:"",displayName:"useSortTransform",props:{orders:{defaultValue:null,description:"排序切换顺序",name:"orders",required:!1,type:{name:"SortOrder[]"}},mode:{defaultValue:null,description:"排序模式。单选 single，多选 multiple，默认为多选",name:"mode",required:!1,type:{name:"enum",value:[{value:'"single"'},{value:'"multiple"'}]}},SortHeaderCell:{defaultValue:null,description:"自定义排序表头",name:"SortHeaderCell",required:!1,type:{name:"ComponentType<SortHeaderCellProps>"}},keepDataSource:{defaultValue:null,description:"是否保持 dataSource 不变",name:"keepDataSource",required:!1,type:{name:"boolean"}},defaultSorts:{defaultValue:{value:"[]"},description:"",name:"defaultSorts",required:!1,type:{name:"SortItem[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/transforms/sort.tsx#useSortTransform"]={docgenInfo:useSortTransform.__docgenInfo,name:"useSortTransform",path:"src/transforms/sort.tsx#useSortTransform"})}catch(__react_docgen_typescript_loader_error){}var columnHover=__webpack_require__(2213),proto=__webpack_require__(151),traverseColumn=__webpack_require__(525),mergeCellProps=__webpack_require__(923);var EMPTY_RANGE={start:-1,end:-1};function makeColumnRangeHoverTransform(_ref){var _ref$hoverColor=_ref.hoverColor,hoverColor=void 0===_ref$hoverColor?"#f5f5f5":_ref$hoverColor,_ref$headerHoverColor=_ref.headerHoverColor,headerHoverColor=void 0===_ref$headerHoverColor?"#ddd":_ref$headerHoverColor,hoverRange=_ref.hoverRange,onChangeHoverRange=_ref.onChangeHoverRange;return Object(traverseColumn.a)((function(col,_ref2){var colRange=_ref2.range,match=colRange.end>hoverRange.start&&hoverRange.end>colRange.start;if(!Object(isLeafNode.a)(col))return null==headerHoverColor?col:Object.assign({},col,{headerCellProps:Object(mergeCellProps.a)(col.headerCellProps,{onMouseEnter:function onMouseEnter(){onChangeHoverRange(colRange)},onMouseLeave:function onMouseLeave(){onChangeHoverRange(EMPTY_RANGE)},style:{backgroundColor:match?headerHoverColor:void 0}})});var prevGetCellProps=col.getCellProps;return Object.assign({},col,{headerCellProps:Object(mergeCellProps.a)(col.headerCellProps,{onMouseEnter:function onMouseEnter(){onChangeHoverRange(colRange)},onMouseLeave:function onMouseLeave(){onChangeHoverRange(EMPTY_RANGE)},style:{backgroundColor:match?headerHoverColor:void 0}}),getCellProps:function getCellProps(value,record,rowIndex){var prevCellProps=null==prevGetCellProps?void 0:prevGetCellProps(value,record,rowIndex);return Object(mergeCellProps.a)(prevCellProps,{onMouseEnter:function onMouseEnter(){onChangeHoverRange(colRange)},onMouseLeave:function onMouseLeave(){onChangeHoverRange(EMPTY_RANGE)},style:{backgroundColor:match?hoverColor:void 0}})}})}))}var bucket_8=__webpack_require__(2214),HeaderCellWithTips=styled_components_browser_esm.b.div.withConfig({displayName:"tips__HeaderCellWithTips",componentId:"sc-12w2m9h-0"})(["display:flex;align-items:center;.tip-icon-wrapper{margin-left:2px;}.tip-icon{display:flex;fill:currentColor;}"]);function makeTipsTransform(_ref){var Balloon=_ref.Balloon;return Object(traverseColumn.a)((function(col){var _col$features;if(!(null===(_col$features=col.features)||void 0===_col$features?void 0:_col$features.tips))return col;var justifyContent="right"===col.align?"flex-end":"center"===col.align?"center":"flex-start";return Object.assign({},col,{title:react_default.a.createElement(HeaderCellWithTips,{style:{justifyContent:justifyContent}},Object(internals.safeRenderHeader)(col),react_default.a.createElement(Balloon,{closable:!1,trigger:react_default.a.createElement("div",{className:"tip-icon-wrapper"},react_default.a.createElement(bucket_8.a,{className:"tip-icon"}))},col.features.tips))})}))}try{makeTipsTransform.displayName="makeTipsTransform",makeTipsTransform.__docgenInfo={description:"",displayName:"makeTipsTransform",props:{Balloon:{defaultValue:null,description:"",name:"Balloon",required:!0,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/transforms/tips.tsx#makeTipsTransform"]={docgenInfo:makeTipsTransform.__docgenInfo,name:"makeTipsTransform",path:"src/transforms/tips.tsx#makeTipsTransform"})}catch(__react_docgen_typescript_loader_error){}function isIdentity(x,y){return x===y}var fromEvent=__webpack_require__(2207),takeUntil=__webpack_require__(2217),map=__webpack_require__(236);function columnResize_slicedToArray(arr,i){return function columnResize_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function columnResize_iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function columnResize_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return columnResize_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return columnResize_arrayLikeToArray(o,minLen)}(arr,i)||function columnResize_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function columnResize_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function columnResize_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function columnResize_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var ResizeHandle=styled_components_browser_esm.b.span.withConfig({displayName:"columnResize__ResizeHandle",componentId:"sc-1gggjky-0"})(["position:absolute;top:0;bottom:0;right:-5px;width:10px;cursor:col-resize;z-index:1;"]);function makeColumnResizeTransform(_ref){var sizes=_ref.sizes,onChangeSizes=_ref.onChangeSizes,_ref$minSize=_ref.minSize,minSize=void 0===_ref$minSize?40:_ref$minSize,_ref$maxSize=_ref.maxSize,maxSize=void 0===_ref$maxSize?1/0:_ref$maxSize,appendExpander=_ref.appendExpander,_ref$expanderVisibili=_ref.expanderVisibility,expanderVisibility=void 0===_ref$expanderVisibili?"visible":_ref$expanderVisibili,disableUserSelectWhenResizing=_ref.disableUserSelectWhenResizing,startResize=function startResize(colIndex,e){var docElemStyle,startX=e.clientX,startSize=sizes[colIndex],nextSizes$=Object(fromEvent.a)(window,"mousemove").pipe(takeUntil.a(Object(fromEvent.a)(window,"mouseup")),map.a((function(e){var movingX=e.clientX,nextSizes=sizes.slice();return nextSizes[colIndex]=function clamp(min,x,max){return Math.max(min,Math.min(max,x))}(minSize,startSize+(movingX-startX),maxSize),nextSizes}))),prevUserSelect="";disableUserSelectWhenResizing&&(docElemStyle=document.documentElement.style,prevUserSelect=docElemStyle.userSelect,docElemStyle.userSelect="none"),nextSizes$.subscribe({next:onChangeSizes,complete:function complete(){disableUserSelectWhenResizing&&(docElemStyle.userSelect=prevUserSelect)}})},innerTransform=Object(traverseColumn.a)((function(col,_ref2){var _col$headerCellProps,range=_ref2.range;if(!Object(isLeafNode.a)(col))return col;var prevTitle=Object(internals.safeRenderHeader)(col);return Object.assign({},col,{width:sizes[range.start],title:react_default.a.createElement(react_default.a.Fragment,null,prevTitle,react_default.a.createElement(ResizeHandle,{className:"resize-handle",onMouseDown:function onMouseDown(e){return startResize(range.start,e)}})),headerCellProps:Object.assign({},col.headerCellProps,{style:Object.assign({},null===(_col$headerCellProps=col.headerCellProps)||void 0===_col$headerCellProps?void 0:_col$headerCellProps.style,{overflow:"visible",position:"relative"})})})}));return function(input){var _innerTransform=innerTransform(input),columns=_innerTransform.columns,dataSource=_innerTransform.dataSource;return{columns:appendExpander?columns.concat([{name:"",headerCellProps:{className:"resize-expander",style:{visibility:expanderVisibility}},getCellProps:function getCellProps(){return{className:"resize-expander",style:{visibility:expanderVisibility}}}}]):columns,dataSource:dataSource}}}function useColumnResizeTransform(_ref3){var defaultSizes=_ref3.defaultSizes,others=columnResize_objectWithoutProperties(_ref3,["defaultSizes"]),_useState2=columnResize_slicedToArray(Object(react.useState)(defaultSizes),2),sizes=_useState2[0],onChangeSizes=_useState2[1];return makeColumnResizeTransform(Object.assign({sizes:sizes,onChangeSizes:onChangeSizes},others))}try{makeColumnResizeTransform.displayName="makeColumnResizeTransform",makeColumnResizeTransform.__docgenInfo={description:"",displayName:"makeColumnResizeTransform",props:{sizes:{defaultValue:null,description:"每一列的宽度",name:"sizes",required:!0,type:{name:"number[]"}},onChangeSizes:{defaultValue:null,description:"修改宽度的回调函数",name:"onChangeSizes",required:!0,type:{name:"(nextSizes: number[]) => void"}},minSize:{defaultValue:{value:40},description:"列的最小宽度，默认为 40",name:"minSize",required:!1,type:{name:"number"}},maxSize:{defaultValue:null,description:"列的最大宽度，默认为 Infinity",name:"maxSize",required:!1,type:{name:"number"}},appendExpander:{defaultValue:null,description:"是否在列的末尾追加可伸缩列，默认为 false",name:"appendExpander",required:!1,type:{name:"boolean"}},disableUserSelectWhenResizing:{defaultValue:null,description:"是否在调整列宽时禁用 user-select，默认为 false",name:"disableUserSelectWhenResizing",required:!1,type:{name:"boolean"}},expanderVisibility:{defaultValue:{value:"visible"},description:"可伸缩列 style.visibility",name:"expanderVisibility",required:!1,type:{name:"enum",value:[{value:'"visible"'},{value:'"hidden"'}]}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/transforms/columnResize.tsx#makeColumnResizeTransform"]={docgenInfo:makeColumnResizeTransform.__docgenInfo,name:"makeColumnResizeTransform",path:"src/transforms/columnResize.tsx#makeColumnResizeTransform"})}catch(__react_docgen_typescript_loader_error){}try{useColumnResizeTransform.displayName="useColumnResizeTransform",useColumnResizeTransform.__docgenInfo={description:"",displayName:"useColumnResizeTransform",props:{minSize:{defaultValue:null,description:"列的最小宽度，默认为 40",name:"minSize",required:!1,type:{name:"number"}},maxSize:{defaultValue:null,description:"列的最大宽度，默认为 Infinity",name:"maxSize",required:!1,type:{name:"number"}},appendExpander:{defaultValue:null,description:"是否在列的末尾追加可伸缩列，默认为 false",name:"appendExpander",required:!1,type:{name:"boolean"}},disableUserSelectWhenResizing:{defaultValue:null,description:"是否在调整列宽时禁用 user-select，默认为 false",name:"disableUserSelectWhenResizing",required:!1,type:{name:"boolean"}},expanderVisibility:{defaultValue:null,description:"可伸缩列 style.visibility",name:"expanderVisibility",required:!1,type:{name:"enum",value:[{value:'"visible"'},{value:'"hidden"'}]}},defaultSizes:{defaultValue:null,description:"",name:"defaultSizes",required:!0,type:{name:"number[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/transforms/columnResize.tsx#useColumnResizeTransform"]={docgenInfo:useColumnResizeTransform.__docgenInfo,name:"useColumnResizeTransform",path:"src/transforms/columnResize.tsx#useColumnResizeTransform"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__(143),__webpack_require__(65),__webpack_require__(66);var styles=__webpack_require__(41);function autoWidth_slicedToArray(arr,i){return function autoWidth_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function autoWidth_iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function autoWidth_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return autoWidth_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return autoWidth_arrayLikeToArray(o,minLen)}(arr,i)||function autoWidth_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function autoWidth_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var AutoWidthWrapper=styled_components_browser_esm.b.div.withConfig({displayName:"autoWidth__AutoWidthWrapper",componentId:"kvc6bg-0"})(["height:100%;display:inline-flex;align-items:center;white-space:nowrap;padding:8px 12px;"]);function useAutoWidthTransform(tableRef,options,deps){var _useState2=autoWidth_slicedToArray(Object(react.useState)([]),2),widthList=_useState2[0],setWidthList=_useState2[1];Object(react.useEffect)((function(){var artTable=tableRef.current.getDoms().artTable,rows=Array.from(artTable.querySelectorAll(".".concat(styles.a.tableRow)));if(0!==rows.length){for(var preferredWidthList=[],_i2=0,_rows=rows;_i2<_rows.length;_i2++){_rows[_i2].querySelectorAll(".".concat("auto-width-wrapper")).forEach((function(div,i){var _preferredWidthList$i;preferredWidthList[i]=Math.max(null!==(_preferredWidthList$i=preferredWidthList[i])&&void 0!==_preferredWidthList$i?_preferredWidthList$i:0,div.scrollWidth)}))}(function isSameArray(arr1,arr2){return arr1.length===arr2.length&&arr1.every((function(x,i){return x===arr2[i]}))})(preferredWidthList,widthList)||setWidthList(preferredWidthList)}}),deps);var i=0,innerTransform=Object(traverseColumn.a)((function(col){var _col$features,_ref,_widthList$i;if(!Object(isLeafNode.a)(col))return col;if(!(null===(_col$features=col.features)||void 0===_col$features?void 0:_col$features.autoWidth))return col;var _col$features$autoWid=col.features.autoWidth,_col$features$autoWid2=_col$features$autoWid.max,max=void 0===_col$features$autoWid2?1/0:_col$features$autoWid2,_col$features$autoWid3=_col$features$autoWid.min,min=void 0===_col$features$autoWid3?-1/0:_col$features$autoWid3,width=null!==(_ref=null!==(_widthList$i=widthList[i++])&&void 0!==_widthList$i?_widthList$i:col.width)&&void 0!==_ref?_ref:null==options?void 0:options.initColumnWidth,clampedWidth=Math.max(min,Math.min(max,width));return Object.assign({},col,{width:clampedWidth,getCellProps:function getCellProps(_,record,rowIndex){return Object(mergeCellProps.a)(Object(internals.safeGetCellProps)(col,record,rowIndex),{style:{padding:0}})},render:function render(_,record,rowIndex){return react_default.a.createElement(AutoWidthWrapper,{className:"auto-width-wrapper",style:null==options?void 0:options.wrapperStyle},Object(internals.safeRender)(col,record,rowIndex))}})}));return function(input){var _options$expanderVisi,_innerTransform=innerTransform(input),columns=_innerTransform.columns,dataSource=_innerTransform.dataSource,expanderVisibility=null!==(_options$expanderVisi=null==options?void 0:options.expanderVisibility)&&void 0!==_options$expanderVisi?_options$expanderVisi:"visible";return{columns:(null==options?void 0:options.appendExpander)?columns.concat([{name:"",headerCellProps:{className:"auto-width-expander",style:{visibility:expanderVisibility}},getCellProps:function getCellProps(){return{className:"auto-width-expander",style:{visibility:expanderVisibility}}}}]):columns,dataSource:dataSource}}}try{useAutoWidthTransform.displayName="useAutoWidthTransform",useAutoWidthTransform.__docgenInfo={description:"自适应列宽\n@param tableRef BaseTable 的 ref\n@param options 参数\n@param deps 重新调整列宽的依赖数组，每当依赖数组发生变化时， useAutoWidthTransform 会根据单元格内容的实际渲染宽度 设置单元格的宽度\n\noptions 说明：\n- options.appendExpander 是否在列的末尾追加可伸缩列\n- options.expanderVisibility 设置为 `'hidden'` 可以隐藏可伸缩列\n- options.wrapperStyle 单元格中 div.auto-width-wrapper 的样式\n- options.initColumnWidth 自适应的初始列宽\n\n注意 useAutoWidthTransform 是一个 React hooks，要遵循 hooks 的用法规范",displayName:"useAutoWidthTransform",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/transforms/autoWidth.tsx#useAutoWidthTransform"]={docgenInfo:useAutoWidthTransform.__docgenInfo,name:"useAutoWidthTransform",path:"src/transforms/autoWidth.tsx#useAutoWidthTransform"})}catch(__react_docgen_typescript_loader_error){}var cdn_data=__webpack_require__(80),format=__webpack_require__(12),fusion_style=__webpack_require__(63),ncov19_assets=__webpack_require__(18);function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return transforms_examples_stories_arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||transforms_examples_stories_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function transforms_examples_stories_slicedToArray(arr,i){return function transforms_examples_stories_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function transforms_examples_stories_iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||transforms_examples_stories_unsupportedIterableToArray(arr,i)||function transforms_examples_stories_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function transforms_examples_stories_unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return transforms_examples_stories_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?transforms_examples_stories_arrayLikeToArray(o,minLen):void 0}}function transforms_examples_stories_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={title:"表格 / 常用功能示例",parameters:{storySource:{source:"import { Balloon } from '@alifd/next'\nimport { Row16, ThumbsDown16, ThumbsUp16 } from '@carbon/icons-react'\nimport {\n  applyTransforms,\n  ArtColumn,\n  BaseTable,\n  collectNodes,\n  makeAutoRowSpanTransform,\n  makeBuildTreeTransform,\n  makeColumnHoverTransform,\n  makeColumnRangeHoverTransform,\n  makeColumnResizeTransform,\n  makeSortTransform,\n  makeTipsTransform,\n  makeTreeModeTransform,\n  proto,\n  SortHeaderCellProps,\n  SortItem,\n  useAutoWidthTransform,\n} from 'ali-react-table'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { getAppTrafficData } from '../assets/cdn-data'\nimport { amount, ratio, time } from '../assets/format'\nimport { FusionStyles } from '../assets/fusion-style'\nimport { cols, testProvColumns, useCityDataSource, useProvinceDataSource } from '../assets/ncov19-assets'\n\nexport default {\n  title: '表格 / 常用功能示例',\n  parameters: {\n    docs: {\n      page() {\n        return (\n          <div\n            style={{\n              margin: 'auto',\n              background: 'rgba(0, 0, 0, 0.03)',\n              borderRadius: 10,\n              padding: 30,\n            }}\n          >\n            示例过多，docs page 已在此处禁用，请在页面上方切换到「Canvas」模式\n          </div>\n        )\n      },\n    },\n  },\n}\n\nexport function 树状表格() {\n  const columns: ArtColumn[] = [\n    {\n      code: 'name',\n      name: '数据维度',\n      lock: true,\n      width: 200,\n      // 通过自定义 getValue，可以实现「根据节点深度选取合适的数据字段」\n      // getValue(record: any) {\n      //   const meta = record[treeMetaSymbol]\n      //   const array = [record.subsidiary_name, record.city_name, record.shop_name]\n      //   return array[meta.depth]\n      // },\n    },\n    { code: 'shop_name', name: '门店' },\n    { code: 'imp_uv_dau_pct', name: '曝光UV占DAU比例', render: ratio, align: 'right' },\n    { code: 'app_qty_pbt', name: 'APP件单价', align: 'right' },\n    { code: 'all_app_trd_amt_1d', name: 'APP成交金额汇总', align: 'right' },\n  ]\n\n  const [state, setState] = useState({ isLoading: true, data: [] as any[] })\n\n  useEffect(() => {\n    getAppTrafficData().then((data) => {\n      setState({ isLoading: false, data })\n    })\n  }, [])\n\n  const [openKeys, onChangeOpenKeys] = useState(['B2C'])\n\n  // 注意 renderData 要用起来\n  const renderData = applyTransforms(\n    { columns: columns, dataSource: state.data },\n\n    // 从平铺的数据中，根据 id/parent_id 字段构建出树状结构\n    makeBuildTreeTransform('id', 'parent_id'),\n\n    makeTreeModeTransform({ primaryKey: 'id', openKeys, onChangeOpenKeys }),\n  )\n\n  return <BaseTable dataSource={renderData.dataSource} columns={renderData.columns} isLoading={state.isLoading} />\n}\n\nexport function 表格排序_多列() {\n  const { isLoading, dataSource } = useProvinceDataSource()\n\n  const columns: ArtColumn[] = [\n    { code: 'provinceName', name: '省份', width: 150, features: { sortable: true } },\n    { code: 'confirmedCount', name: '确诊', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'curedCount', name: '治愈', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'deadCount', name: '死亡', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'updateTime', name: '最后更新时间', width: 180, render: time },\n  ]\n\n  const [sorts, onChangeSorts] = useState<SortItem[]>([\n    { code: 'deadCount', order: 'asc' },\n    { code: 'confirmedCount', order: 'desc' },\n  ])\n\n  const renderData = applyTransforms(\n    { columns, dataSource },\n    makeSortTransform({\n      sorts,\n      onChangeSorts,\n    }),\n  )\n\n  return (\n    <div>\n      <div style={{ display: 'flex', alignItems: 'center', height: 40 }}>\n        <div style={{ marginLeft: 8 }}>点击表头的排序图标对表格数据进行排序</div>\n        <button style={{ marginLeft: 16 }} onClick={() => onChangeSorts([])}>\n          清除排序\n        </button>\n      </div>\n      <BaseTable isLoading={isLoading} dataSource={renderData.dataSource} columns={renderData.columns} />\n    </div>\n  )\n}\n\nexport function 表格排序_单列() {\n  const { isLoading, dataSource: data } = useProvinceDataSource()\n\n  const columns: ArtColumn[] = [\n    { code: 'provinceName', name: '省份', width: 150, features: { sortable: true } },\n    { code: 'confirmedCount', name: '确诊', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'curedCount', name: '治愈', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'deadCount', name: '死亡', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'updateTime', name: '最后更新时间', width: 180, render: time },\n  ]\n\n  const [sorts, onChangeSorts] = useState<SortItem[]>([{ code: 'deadCount', order: 'desc' }])\n\n  const renderData = applyTransforms(\n    { columns, dataSource: data.slice(0, 5) },\n    makeSortTransform({\n      sorts,\n      onChangeSorts,\n      mode: 'single', // 改为 multiple 可以使用多列排序\n    }),\n  )\n\n  return (\n    <div>\n      <div style={{ display: 'flex', alignItems: 'center', height: 40 }}>\n        <div style={{ marginLeft: 8 }}>点击表头的排序图标对表格数据进行排序</div>\n      </div>\n      <BaseTable isLoading={isLoading} dataSource={renderData.dataSource} columns={renderData.columns} />\n    </div>\n  )\n}\n\nexport function 列高亮() {\n  const { isLoading, dataSource: data } = useProvinceDataSource()\n\n  const [hoverColIndex, onChangeHoverColIndex] = useState(-1)\n\n  const renderData = applyTransforms(\n    { columns: testProvColumns, dataSource: data.slice(0, 5) },\n    makeColumnHoverTransform({\n      hoverColIndex,\n      onChangeHoverColIndex,\n    }),\n  )\n\n  return <BaseTable isLoading={isLoading} dataSource={renderData.dataSource} columns={renderData.columns} />\n}\n\nexport function 列的范围高亮() {\n  const appIndProto = proto.array<ArtColumn>({ align: 'right' })\n  const rateIndProto = proto.array<ArtColumn>({ align: 'right', render: ratio })\n\n  // 列配置\n  const columns: ArtColumn[] = [\n    {\n      name: '维度',\n      children: [\n        {\n          name: '商品信息',\n          children: [\n            { code: 'sku_code', name: 'SKU code' },\n            { code: 'sku_name', name: 'SKU名称' },\n          ],\n        },\n        {\n          name: '机构信息',\n          children: [\n            { code: 'city_name', name: '城市' },\n            { code: 'shop_name', name: '门店', features: { defaultVisible: true } },\n          ],\n        },\n        {\n          name: '类目信息',\n          children: [\n            { code: 'merge_cate_level1_name', name: '一级类目' },\n            { code: 'merge_cate_level2_name', name: '二级类目' },\n            { code: 'merge_cate_level3_name', name: '三级类目' },\n          ],\n        },\n      ],\n    },\n    {\n      name: '指标',\n      children: [\n        {\n          name: 'APP指标',\n          children: appIndProto([\n            { code: 'imp_uv_dau_pct', name: '曝光UV占DAU比例', render: ratio },\n            { code: 'app_trd_amt_1d', name: 'APP成交金额', render: amount },\n            { code: 'app_qty_pbt', name: 'APP件单价' },\n            { code: 'all_app_trd_amt_1d', name: 'APP成交金额汇总' },\n            { code: 'app_trd_usr_cnt_1d', name: 'APP成交用户数' },\n            { code: 'appout_shop_num', name: '缺货门店数', render: amount },\n            { code: 'all_time_len', name: '店均缺货时长', render: amount },\n            { code: 'bad_rmk_rate', name: '订单差评率', render: ratio },\n          ]),\n        },\n        {\n          name: '转换率',\n          children: rateIndProto([\n            { code: 'all_imp2pay_rate', name: '整体曝光至成交转化率' },\n            { code: 'search_imp2pay_rate', name: '搜索曝光至成交转化率' },\n            { code: 'classis_imp2pay_rate', name: '分类曝光至成交转化率' },\n            { code: 'cart_imp2pay_rate', name: '购物车曝光至成交转化率' },\n            { code: 'my_page_imp2pay_rate', name: '我的曝光至成交转化率' },\n            { code: 'pq_act_imp2pay_rate', name: '活动页曝光至成交转化率' },\n            { code: 'other_imp2pay_rate', name: '其他曝光至成交转化率' },\n          ]),\n        },\n      ],\n    },\n  ]\n\n  const [state, setState] = useState({ isLoading: true, data: [] as any[] })\n\n  useEffect(() => {\n    getAppTrafficData().then((data) => {\n      setState({ isLoading: false, data: data.slice(0, 8) })\n    })\n  }, [])\n\n  const [hoverRange, onChangeHoverRange] = useState({ start: 0, end: 0 })\n\n  const renderData = applyTransforms(\n    { columns, dataSource: state.data },\n    makeColumnRangeHoverTransform({\n      hoverRange,\n      onChangeHoverRange,\n    }),\n  )\n\n  return (\n    <BaseTable\n      defaultColumnWidth={120}\n      dataSource={renderData.dataSource}\n      columns={renderData.columns}\n      isLoading={state.isLoading}\n    />\n  )\n}\n\nexport function 列气泡提示() {\n  const { isLoading, dataSource: data } = useProvinceDataSource()\n\n  const [sorts, onChangeSorts] = useState<SortItem[]>([])\n\n  const columns: ArtColumn[] = [\n    {\n      code: 'provinceName',\n      name: '省份',\n      features: {\n        tips:\n          '省份，即我国的省级行政区，是行政地位与省相同行政区的总称，为一级行政区，包括省、自治区、直辖市、特别行政区。' +\n          '中国共计34个省级行政区，包括23个省、5个自治区、4个直辖市、2个特别行政区。',\n      },\n    },\n    {\n      code: 'curedCount',\n      name: '治愈',\n      render: amount,\n      align: 'right',\n      features: {\n        sortable: true,\n        tips: (\n          <div>\n            治愈是汉字词语，英文cure; heal，注音zhì yù，使恢复健康。如：在骨折完全治愈之前不要上班。\n            治愈指动漫中温暖人心，净化心灵，悲伤时看能得到安慰，治愈自己心灵中的创伤、修补自己心灵上缺陷的作品。\n            也可以指动漫中人物，拥有对主角内心抚慰、平复内心创伤的能力。可以分为行动上和语言上的。\n          </div>\n        ),\n      },\n    },\n    {\n      code: 'updateTime',\n      name: '最后更新时间',\n      render: time,\n      features: {\n        tips: (\n          <div>\n            时间，是物质的运动、变化的持续性、顺序性的表现，包含时刻和时段两个概念。\n            时间是人类用以描述物质运动过程或事件发生过程的一个参数，确定时间，是靠不受外界影响的物质周期变化的规律。以地球自转为基础的时间计量系统称为世界时系统。日、月、年、世纪的时间计量属天文学中的历法范畴。\n            以地球自转运动为基础的时间单位称为“日”，以月球绕地球公转运动为基础的时间单位称为“月”，以地球绕太阳公转运动为基础的时间单位称为“年”。\n          </div>\n        ),\n      },\n    },\n  ]\n\n  const renderData = applyTransforms(\n    { columns, dataSource: data.slice(0, 3) },\n    makeSortTransform({ mode: 'single', sorts, onChangeSorts }),\n    makeTipsTransform({ Balloon }),\n  )\n\n  return (\n    <div>\n      <FusionStyles />\n      <BaseTable isLoading={isLoading} dataSource={renderData.dataSource.slice(0, 10)} columns={renderData.columns} />\n    </div>\n  )\n}\n\nexport function 树状模式与层级排序() {\n  const columns: ArtColumn[] = [\n    { code: 'name', name: '数据维度', lock: true, width: 200 },\n    { code: 'shop_name', name: '门店', features: { sortable: true } },\n    { code: 'imp_uv_dau_pct', name: '曝光UV占DAU比例', render: ratio, align: 'right', features: { sortable: true } },\n    { code: 'app_qty_pbt', name: 'APP件单价', align: 'right', features: { sortable: true } },\n    { code: 'all_app_trd_amt_1d', name: 'APP成交金额汇总', align: 'right', features: { sortable: true } },\n  ]\n\n  const [state, setState] = useState({ isLoading: true, data: [] as any[] })\n\n  useEffect(() => {\n    getAppTrafficData().then((data) => {\n      setState({ isLoading: false, data })\n    })\n  }, [])\n\n  const [openKeys, onChangeOpenKeys] = useState(['B2C'])\n  const [sorts, onChangeSorts] = useState<SortItem[]>([])\n\n  const renderData = applyTransforms(\n    { columns, dataSource: state.data },\n    // 从平铺的数据中，根据 id/parent_id 字段构建出树状结构\n    makeBuildTreeTransform('id', 'parent_id'),\n    makeSortTransform({\n      sorts,\n      onChangeSorts,\n      mode: 'single', // 改为 multiple 可以使用多列排序\n    }),\n    makeTreeModeTransform({ primaryKey: 'id', openKeys, onChangeOpenKeys, indentSize: 20 }),\n  )\n\n  return <BaseTable dataSource={renderData.dataSource} columns={renderData.columns} isLoading={state.isLoading} />\n}\n\nexport function 单元格自动合并() {\n  const { dataSource: cityData, isLoading } = useCityDataSource()\n\n  const renderData = applyTransforms(\n    {\n      dataSource: cityData.slice(0, 3).flatMap((d) => d.children.slice(0, 4)),\n      columns: [\n        {\n          code: 'provinceName',\n          name: '省份',\n          width: 150,\n          features: { autoRowSpan: true },\n        },\n        cols.cityName,\n        ...cols.indCols.map((col) => ({\n          ...col,\n          features: { autoRowSpan: true },\n        })),\n        {\n          code: 'updateTime',\n          name: '最后更新时间',\n          width: 180,\n          render: time,\n          features: { autoRowSpan: true },\n        },\n      ],\n    },\n    makeAutoRowSpanTransform(),\n  )\n\n  return (\n    <BaseTable isLoading={isLoading} useOuterBorder dataSource={renderData.dataSource} columns={renderData.columns} />\n  )\n}\n\nfunction CustomSortHeaderCell({ column, sortOptions, sortIndex, children, onToggle, sortOrder }: SortHeaderCellProps) {\n  // 通过 justify-content 来与 col.align 保持对齐方向一致\n  const justifyContent = column.align === 'right' ? 'flex-end' : column.align === 'center' ? 'center' : 'flex-start'\n\n  return (\n    <div\n      onClick={onToggle}\n      style={{\n        display: 'flex',\n        justifyContent,\n        cursor: 'pointer',\n      }}\n    >\n      {/* 别忘记渲染原来的表头内容 */}\n      {children}\n\n      <span style={{ marginLeft: 4 }}>\n        {sortOrder === 'none' && <Row16 />}\n        {sortOrder === 'asc' && <ThumbsUp16 />}\n        {sortOrder === 'desc' && <ThumbsDown16 />}\n      </span>\n\n      {sortOptions.mode === 'multiple' && sortOrder !== 'none' && (\n        <span style={{ marginLeft: 4 }}>{sortIndex + 1}</span>\n      )}\n    </div>\n  )\n}\n\nexport function 自定义样式的排序表头() {\n  const { isLoading, dataSource: data } = useProvinceDataSource()\n\n  const columns: ArtColumn[] = [\n    { code: 'provinceName', name: '省份', width: 150, features: { sortable: true } },\n    { code: 'confirmedCount', name: '确诊', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'curedCount', name: '治愈', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'deadCount', name: '死亡', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'updateTime', name: '最后更新时间', width: 180, render: time },\n  ]\n\n  const [sorts, onChangeSorts] = useState<SortItem[]>([{ code: 'confirmedCount', order: 'desc' }])\n\n  const renderData = applyTransforms(\n    { columns, dataSource: data.slice(0, 5) },\n    makeSortTransform({\n      sorts,\n      onChangeSorts,\n      SortHeaderCell: CustomSortHeaderCell,\n    }),\n  )\n\n  return (\n    <div>\n      <div style={{ display: 'flex', alignItems: 'center', height: 40 }}>\n        <div style={{ marginLeft: 8 }}>通过示例 options.SortHeaderCell 可以自定义排序表头的样式/内容</div>\n        <button style={{ marginLeft: 16 }} onClick={() => onChangeSorts([])}>\n          清除排序\n        </button>\n      </div>\n      <BaseTable isLoading={isLoading} dataSource={renderData.dataSource} columns={renderData.columns} />\n    </div>\n  )\n}\n\nexport function 拖拽调整列宽() {\n  const { isLoading, dataSource: data } = useProvinceDataSource()\n\n  const columns: ArtColumn[] = [cols.provinceName, ...cols.indCols, cols.updateTime]\n\n  const defaultColumnWidth = 120\n  // 注意 columns 可能是嵌套的结构，这里使用 collectNodes 来获取所有叶子节点\n  // 同时注意部分列的 width 可能为空，此时可以用 defaultColumnWidth 作为列的宽度\n  const defaultSizes = collectNodes(columns, 'leaf-only').map((col) => col.width ?? defaultColumnWidth)\n  const [sizes, onChangeSizes] = useState(defaultSizes)\n\n  const renderData = applyTransforms(\n    { columns, dataSource: data.slice(0, 5) },\n    makeColumnResizeTransform({\n      sizes,\n      onChangeSizes,\n      appendExpander: true,\n      expanderVisibility: 'hidden',\n      disableUserSelectWhenResizing: true,\n      minSize: 60,\n      maxSize: 500,\n    }),\n  )\n\n  return (\n    <div>\n      <div style={{ display: 'flex', alignItems: 'center', height: 40 }}>\n        <div style={{ marginLeft: 8 }}>拖拽调整列宽</div>\n      </div>\n      <BaseTable isLoading={isLoading} dataSource={renderData.dataSource} columns={renderData.columns} />\n    </div>\n  )\n}\n\nexport function 自适应列宽_demo() {\n  const { isLoading, dataSource: rawDataSource } = useProvinceDataSource()\n\n  const columns: ArtColumn[] = [\n    // 注意要为 自适应宽度的列 设置 features.autoWidth=true\n    { code: 'provinceName', name: '省份', features: { autoWidth: true } },\n    { code: 'confirmedCount', name: '确诊', render: amount, align: 'right', features: { autoWidth: true } },\n    { code: 'curedCount', name: '治愈', render: amount, align: 'right', features: { autoWidth: true } },\n    { code: 'deadCount', name: '死亡 (列宽固定为 150)', width: 150, render: amount, align: 'right' },\n    { code: 'updateTime', name: '最后更新时间', features: { autoWidth: true } },\n  ]\n\n  const tableRef = useRef<BaseTable>()\n  const [startIndex, setStartIndex] = useState(0)\n\n  const renderData = applyTransforms(\n    { columns, dataSource: rawDataSource.slice(startIndex, startIndex + 5) },\n\n    // 注意 useAutoWidthTransform 是一个 React hooks，要遵循 hooks 的用法规范\n    useAutoWidthTransform(\n      tableRef,\n      {\n        appendExpander: true,\n        expanderVisibility: 'hidden',\n        initColumnWidth: 100,\n      },\n      // deps=[data] 表示：每当 data 发生变化的时候，重新设置表格的列宽\n      // deps=[] 表示：只在 didMount 时重新设置一次列宽\n      // deps=undefined/null 表示：didMount 或每次 didUpdate 时都设置列宽\n      [rawDataSource, startIndex],\n    ),\n  )\n\n  return (\n    <div>\n      <p style={{ fontSize: 16 }}>\n        <code>useAutoWidthTransform</code> 会在 didMount/didUpdate\n        中获取单元格的实际内容宽度，然后重新设置表格列宽，实现「自适应列宽」。\n      </p>\n      <p style={{ fontSize: 14 }}>\n        useAutoWidthTransform 会频繁地从 DOM 中获取单元格的实际渲染宽度，单元格数量较多时会导致性能问题。\n        useAutoWidthTransform 不兼容「拖拽调整列宽」，不兼容「横向虚拟滚动」，不兼容存在 colSpan 的情况。\n        <b>谨慎使用，这里只提供 demo。</b>\n      </p>\n      <div style={{ margin: '12px 0' }}>\n        <button\n          onClick={() => {\n            setStartIndex(startIndex === 0 ? 5 : 0)\n          }}\n        >\n          切换数据\n        </button>\n      </div>\n      <BaseTable ref={tableRef} isLoading={isLoading} dataSource={renderData.dataSource} columns={renderData.columns} />\n    </div>\n  )\n}\n",locationsMap:{"树状表格":{startLoc:{col:7,line:49},endLoc:{col:1,line:90},startBody:{col:7,line:49},endBody:{col:1,line:90}},"表格排序-多列":{startLoc:{col:7,line:92},endLoc:{col:1,line:127},startBody:{col:7,line:92},endBody:{col:1,line:127}},"表格排序-单列":{startLoc:{col:7,line:129},endLoc:{col:1,line:159},startBody:{col:7,line:129},endBody:{col:1,line:159}},"列高亮":{startLoc:{col:7,line:161},endLoc:{col:1,line:175},startBody:{col:7,line:161},endBody:{col:1,line:175}},"列的范围高亮":{startLoc:{col:7,line:177},endLoc:{col:1,line:268},startBody:{col:7,line:177},endBody:{col:1,line:268}},"列气泡提示":{startLoc:{col:7,line:270},endLoc:{col:1,line:329},startBody:{col:7,line:270},endBody:{col:1,line:329}},"树状模式与层级排序":{startLoc:{col:7,line:331},endLoc:{col:1,line:364},startBody:{col:7,line:331},endBody:{col:1,line:364}},"单元格自动合并":{startLoc:{col:7,line:366},endLoc:{col:1,line:399},startBody:{col:7,line:366},endBody:{col:1,line:399}},"自定义样式的排序表头":{startLoc:{col:7,line:430},endLoc:{col:1,line:463},startBody:{col:7,line:430},endBody:{col:1,line:463}},"拖拽调整列宽":{startLoc:{col:7,line:465},endLoc:{col:1,line:497},startBody:{col:7,line:465},endBody:{col:1,line:497}},"自适应列宽-demo":{startLoc:{col:7,line:499},endLoc:{col:1,line:555},startBody:{col:7,line:499},endBody:{col:1,line:555}}}},docs:{page:function page(){return react_default.a.createElement("div",{style:{margin:"auto",background:"rgba(0, 0, 0, 0.03)",borderRadius:10,padding:30}},"示例过多，docs page 已在此处禁用，请在页面上方切换到「Canvas」模式")}}}};var transforms_examples_stories_=function 树状表格(){var columns=[{code:"name",name:"数据维度",lock:!0,width:200},{code:"shop_name",name:"门店"},{code:"imp_uv_dau_pct",name:"曝光UV占DAU比例",render:format.c,align:"right"},{code:"app_qty_pbt",name:"APP件单价",align:"right"},{code:"all_app_trd_amt_1d",name:"APP成交金额汇总",align:"right"}],_useState2=transforms_examples_stories_slicedToArray(Object(react.useState)({isLoading:!0,data:[]}),2),state=_useState2[0],setState=_useState2[1];Object(react.useEffect)((function(){Object(cdn_data.a)().then((function(data){setState({isLoading:!1,data:data})}))}),[]);var _useState4=transforms_examples_stories_slicedToArray(Object(react.useState)(["B2C"]),2),openKeys=_useState4[0],onChangeOpenKeys=_useState4[1],renderData=Object(applyTransforms.a)({columns:columns,dataSource:state.data},Object(buildTree.a)("id","parent_id"),Object(treeMode.a)({primaryKey:"id",openKeys:openKeys,onChangeOpenKeys:onChangeOpenKeys}));return react_default.a.createElement(table.a,{dataSource:renderData.dataSource,columns:renderData.columns,isLoading:state.isLoading})};transforms_examples_stories_.displayName="树状表格";var table_transforms_examples_stories_=function 表格排序_多列(){var _useProvinceDataSourc=Object(ncov19_assets.e)(),isLoading=_useProvinceDataSourc.isLoading,dataSource=_useProvinceDataSourc.dataSource,columns=[{code:"provinceName",name:"省份",width:150,features:{sortable:!0}},{code:"confirmedCount",name:"确诊",width:100,render:format.a,align:"right",features:{sortable:!0}},{code:"curedCount",name:"治愈",width:100,render:format.a,align:"right",features:{sortable:!0}},{code:"deadCount",name:"死亡",width:100,render:format.a,align:"right",features:{sortable:!0}},{code:"updateTime",name:"最后更新时间",width:180,render:format.d}],_useState6=transforms_examples_stories_slicedToArray(Object(react.useState)([{code:"deadCount",order:"asc"},{code:"confirmedCount",order:"desc"}]),2),sorts=_useState6[0],onChangeSorts=_useState6[1],renderData=Object(applyTransforms.a)({columns:columns,dataSource:dataSource},makeSortTransform({sorts:sorts,onChangeSorts:onChangeSorts}));return react_default.a.createElement("div",null,react_default.a.createElement("div",{style:{display:"flex",alignItems:"center",height:40}},react_default.a.createElement("div",{style:{marginLeft:8}},"点击表头的排序图标对表格数据进行排序"),react_default.a.createElement("button",{style:{marginLeft:16},onClick:function onClick(){return onChangeSorts([])}},"清除排序")),react_default.a.createElement(table.a,{isLoading:isLoading,dataSource:renderData.dataSource,columns:renderData.columns}))};table_transforms_examples_stories_.displayName="表格排序_多列";var stories_table_transforms_examples_stories_=function 表格排序_单列(){var _useProvinceDataSourc2=Object(ncov19_assets.e)(),isLoading=_useProvinceDataSourc2.isLoading,data=_useProvinceDataSourc2.dataSource,columns=[{code:"provinceName",name:"省份",width:150,features:{sortable:!0}},{code:"confirmedCount",name:"确诊",width:100,render:format.a,align:"right",features:{sortable:!0}},{code:"curedCount",name:"治愈",width:100,render:format.a,align:"right",features:{sortable:!0}},{code:"deadCount",name:"死亡",width:100,render:format.a,align:"right",features:{sortable:!0}},{code:"updateTime",name:"最后更新时间",width:180,render:format.d}],_useState8=transforms_examples_stories_slicedToArray(Object(react.useState)([{code:"deadCount",order:"desc"}]),2),sorts=_useState8[0],onChangeSorts=_useState8[1],renderData=Object(applyTransforms.a)({columns:columns,dataSource:data.slice(0,5)},makeSortTransform({sorts:sorts,onChangeSorts:onChangeSorts,mode:"single"}));return react_default.a.createElement("div",null,react_default.a.createElement("div",{style:{display:"flex",alignItems:"center",height:40}},react_default.a.createElement("div",{style:{marginLeft:8}},"点击表头的排序图标对表格数据进行排序")),react_default.a.createElement(table.a,{isLoading:isLoading,dataSource:renderData.dataSource,columns:renderData.columns}))};stories_table_transforms_examples_stories_.displayName="表格排序_单列";var stories_table_transforms_examples_stories_0=function 列高亮(){var _useProvinceDataSourc3=Object(ncov19_assets.e)(),isLoading=_useProvinceDataSourc3.isLoading,data=_useProvinceDataSourc3.dataSource,_useState10=transforms_examples_stories_slicedToArray(Object(react.useState)(-1),2),hoverColIndex=_useState10[0],onChangeHoverColIndex=_useState10[1],renderData=Object(applyTransforms.a)({columns:ncov19_assets.b,dataSource:data.slice(0,5)},Object(columnHover.a)({hoverColIndex:hoverColIndex,onChangeHoverColIndex:onChangeHoverColIndex}));return react_default.a.createElement(table.a,{isLoading:isLoading,dataSource:renderData.dataSource,columns:renderData.columns})};stories_table_transforms_examples_stories_0.displayName="列高亮";var stories_table_transforms_examples_stories_1=function 列的范围高亮(){var appIndProto=proto.a.array({align:"right"}),rateIndProto=proto.a.array({align:"right",render:format.c}),columns=[{name:"维度",children:[{name:"商品信息",children:[{code:"sku_code",name:"SKU code"},{code:"sku_name",name:"SKU名称"}]},{name:"机构信息",children:[{code:"city_name",name:"城市"},{code:"shop_name",name:"门店",features:{defaultVisible:!0}}]},{name:"类目信息",children:[{code:"merge_cate_level1_name",name:"一级类目"},{code:"merge_cate_level2_name",name:"二级类目"},{code:"merge_cate_level3_name",name:"三级类目"}]}]},{name:"指标",children:[{name:"APP指标",children:appIndProto([{code:"imp_uv_dau_pct",name:"曝光UV占DAU比例",render:format.c},{code:"app_trd_amt_1d",name:"APP成交金额",render:format.a},{code:"app_qty_pbt",name:"APP件单价"},{code:"all_app_trd_amt_1d",name:"APP成交金额汇总"},{code:"app_trd_usr_cnt_1d",name:"APP成交用户数"},{code:"appout_shop_num",name:"缺货门店数",render:format.a},{code:"all_time_len",name:"店均缺货时长",render:format.a},{code:"bad_rmk_rate",name:"订单差评率",render:format.c}])},{name:"转换率",children:rateIndProto([{code:"all_imp2pay_rate",name:"整体曝光至成交转化率"},{code:"search_imp2pay_rate",name:"搜索曝光至成交转化率"},{code:"classis_imp2pay_rate",name:"分类曝光至成交转化率"},{code:"cart_imp2pay_rate",name:"购物车曝光至成交转化率"},{code:"my_page_imp2pay_rate",name:"我的曝光至成交转化率"},{code:"pq_act_imp2pay_rate",name:"活动页曝光至成交转化率"},{code:"other_imp2pay_rate",name:"其他曝光至成交转化率"}])}]}],_useState12=transforms_examples_stories_slicedToArray(Object(react.useState)({isLoading:!0,data:[]}),2),state=_useState12[0],setState=_useState12[1];Object(react.useEffect)((function(){Object(cdn_data.a)().then((function(data){setState({isLoading:!1,data:data.slice(0,8)})}))}),[]);var _useState14=transforms_examples_stories_slicedToArray(Object(react.useState)({start:0,end:0}),2),hoverRange=_useState14[0],onChangeHoverRange=_useState14[1],renderData=Object(applyTransforms.a)({columns:columns,dataSource:state.data},makeColumnRangeHoverTransform({hoverRange:hoverRange,onChangeHoverRange:onChangeHoverRange}));return react_default.a.createElement(table.a,{defaultColumnWidth:120,dataSource:renderData.dataSource,columns:renderData.columns,isLoading:state.isLoading})};stories_table_transforms_examples_stories_1.displayName="列的范围高亮";var stories_table_transforms_examples_stories_2=function 列气泡提示(){var _useProvinceDataSourc4=Object(ncov19_assets.e)(),isLoading=_useProvinceDataSourc4.isLoading,data=_useProvinceDataSourc4.dataSource,_useState16=transforms_examples_stories_slicedToArray(Object(react.useState)([]),2),sorts=_useState16[0],onChangeSorts=_useState16[1],columns=[{code:"provinceName",name:"省份",features:{tips:"省份，即我国的省级行政区，是行政地位与省相同行政区的总称，为一级行政区，包括省、自治区、直辖市、特别行政区。中国共计34个省级行政区，包括23个省、5个自治区、4个直辖市、2个特别行政区。"}},{code:"curedCount",name:"治愈",render:format.a,align:"right",features:{sortable:!0,tips:react_default.a.createElement("div",null,"治愈是汉字词语，英文cure; heal，注音zhì yù，使恢复健康。如：在骨折完全治愈之前不要上班。 治愈指动漫中温暖人心，净化心灵，悲伤时看能得到安慰，治愈自己心灵中的创伤、修补自己心灵上缺陷的作品。 也可以指动漫中人物，拥有对主角内心抚慰、平复内心创伤的能力。可以分为行动上和语言上的。")}},{code:"updateTime",name:"最后更新时间",render:format.d,features:{tips:react_default.a.createElement("div",null,"时间，是物质的运动、变化的持续性、顺序性的表现，包含时刻和时段两个概念。 时间是人类用以描述物质运动过程或事件发生过程的一个参数，确定时间，是靠不受外界影响的物质周期变化的规律。以地球自转为基础的时间计量系统称为世界时系统。日、月、年、世纪的时间计量属天文学中的历法范畴。 以地球自转运动为基础的时间单位称为“日”，以月球绕地球公转运动为基础的时间单位称为“月”，以地球绕太阳公转运动为基础的时间单位称为“年”。")}}],renderData=Object(applyTransforms.a)({columns:columns,dataSource:data.slice(0,3)},makeSortTransform({mode:"single",sorts:sorts,onChangeSorts:onChangeSorts}),makeTipsTransform({Balloon:balloon.a}));return react_default.a.createElement("div",null,react_default.a.createElement(fusion_style.a,null),react_default.a.createElement(table.a,{isLoading:isLoading,dataSource:renderData.dataSource.slice(0,10),columns:renderData.columns}))};stories_table_transforms_examples_stories_2.displayName="列气泡提示";var stories_table_transforms_examples_stories_3=function 树状模式与层级排序(){var columns=[{code:"name",name:"数据维度",lock:!0,width:200},{code:"shop_name",name:"门店",features:{sortable:!0}},{code:"imp_uv_dau_pct",name:"曝光UV占DAU比例",render:format.c,align:"right",features:{sortable:!0}},{code:"app_qty_pbt",name:"APP件单价",align:"right",features:{sortable:!0}},{code:"all_app_trd_amt_1d",name:"APP成交金额汇总",align:"right",features:{sortable:!0}}],_useState18=transforms_examples_stories_slicedToArray(Object(react.useState)({isLoading:!0,data:[]}),2),state=_useState18[0],setState=_useState18[1];Object(react.useEffect)((function(){Object(cdn_data.a)().then((function(data){setState({isLoading:!1,data:data})}))}),[]);var _useState20=transforms_examples_stories_slicedToArray(Object(react.useState)(["B2C"]),2),openKeys=_useState20[0],onChangeOpenKeys=_useState20[1],_useState22=transforms_examples_stories_slicedToArray(Object(react.useState)([]),2),sorts=_useState22[0],onChangeSorts=_useState22[1],renderData=Object(applyTransforms.a)({columns:columns,dataSource:state.data},Object(buildTree.a)("id","parent_id"),makeSortTransform({sorts:sorts,onChangeSorts:onChangeSorts,mode:"single"}),Object(treeMode.a)({primaryKey:"id",openKeys:openKeys,onChangeOpenKeys:onChangeOpenKeys,indentSize:20}));return react_default.a.createElement(table.a,{dataSource:renderData.dataSource,columns:renderData.columns,isLoading:state.isLoading})};stories_table_transforms_examples_stories_3.displayName="树状模式与层级排序";var stories_table_transforms_examples_stories_4=function 单元格自动合并(){var _useCityDataSource=Object(ncov19_assets.d)(),cityData=_useCityDataSource.dataSource,isLoading=_useCityDataSource.isLoading,renderData=Object(applyTransforms.a)({dataSource:cityData.slice(0,3).flatMap((function(d){return d.children.slice(0,4)})),columns:[{code:"provinceName",name:"省份",width:150,features:{autoRowSpan:!0}},ncov19_assets.a.cityName].concat(_toConsumableArray(ncov19_assets.a.indCols.map((function(col){return Object.assign({},col,{features:{autoRowSpan:!0}})}))),[{code:"updateTime",name:"最后更新时间",width:180,render:format.d,features:{autoRowSpan:!0}}])},function makeAutoRowSpanTransform(){return Object(traverseColumn.a)((function(col,_ref){var _col$features,dataSource=_ref.dataSource,range=_ref.range;if(!(null===(_col$features=col.features)||void 0===_col$features?void 0:_col$features.autoRowSpan))return col;if(!Object(isLeafNode.a)(col))return col;for(var shouldMergeCell="function"==typeof col.features.autoRowSpan?col.features.autoRowSpan:isIdentity,spanRects=[],lastBottom=0,prevValue=null,rowIndex=0;rowIndex<dataSource.length;rowIndex++){var value=Object(internals.safeGetValue)(col,dataSource[rowIndex],rowIndex);if(0===rowIndex||!shouldMergeCell(prevValue,value)){for(var spanRect={top:lastBottom,bottom:rowIndex,left:range.start,right:range.end},i=lastBottom;i<rowIndex;i++)spanRects.push(spanRect);lastBottom=rowIndex}prevValue=value}for(var _i=lastBottom;_i<dataSource.length;_i++)spanRects.push({top:lastBottom,bottom:dataSource.length,left:range.start,right:range.end});return Object.assign({},col,{getSpanRect:function getSpanRect(value,row,rowIndex){return spanRects[rowIndex]}})}))}());return react_default.a.createElement(table.a,{isLoading:isLoading,useOuterBorder:!0,dataSource:renderData.dataSource,columns:renderData.columns})};function CustomSortHeaderCell(_ref){var column=_ref.column,sortOptions=_ref.sortOptions,sortIndex=_ref.sortIndex,children=_ref.children,onToggle=_ref.onToggle,sortOrder=_ref.sortOrder,justifyContent="right"===column.align?"flex-end":"center"===column.align?"center":"flex-start";return react_default.a.createElement("div",{onClick:onToggle,style:{display:"flex",justifyContent:justifyContent,cursor:"pointer"}},children,react_default.a.createElement("span",{style:{marginLeft:4}},"none"===sortOrder&&react_default.a.createElement(bucket_14.a,null),"asc"===sortOrder&&react_default.a.createElement(bucket_17.b,null),"desc"===sortOrder&&react_default.a.createElement(bucket_17.a,null)),"multiple"===sortOptions.mode&&"none"!==sortOrder&&react_default.a.createElement("span",{style:{marginLeft:4}},sortIndex+1))}stories_table_transforms_examples_stories_4.displayName="单元格自动合并",CustomSortHeaderCell.displayName="CustomSortHeaderCell";var stories_table_transforms_examples_stories_5=function 自定义样式的排序表头(){var _useProvinceDataSourc5=Object(ncov19_assets.e)(),isLoading=_useProvinceDataSourc5.isLoading,data=_useProvinceDataSourc5.dataSource,columns=[{code:"provinceName",name:"省份",width:150,features:{sortable:!0}},{code:"confirmedCount",name:"确诊",width:100,render:format.a,align:"right",features:{sortable:!0}},{code:"curedCount",name:"治愈",width:100,render:format.a,align:"right",features:{sortable:!0}},{code:"deadCount",name:"死亡",width:100,render:format.a,align:"right",features:{sortable:!0}},{code:"updateTime",name:"最后更新时间",width:180,render:format.d}],_useState24=transforms_examples_stories_slicedToArray(Object(react.useState)([{code:"confirmedCount",order:"desc"}]),2),sorts=_useState24[0],onChangeSorts=_useState24[1],renderData=Object(applyTransforms.a)({columns:columns,dataSource:data.slice(0,5)},makeSortTransform({sorts:sorts,onChangeSorts:onChangeSorts,SortHeaderCell:CustomSortHeaderCell}));return react_default.a.createElement("div",null,react_default.a.createElement("div",{style:{display:"flex",alignItems:"center",height:40}},react_default.a.createElement("div",{style:{marginLeft:8}},"通过示例 options.SortHeaderCell 可以自定义排序表头的样式/内容"),react_default.a.createElement("button",{style:{marginLeft:16},onClick:function onClick(){return onChangeSorts([])}},"清除排序")),react_default.a.createElement(table.a,{isLoading:isLoading,dataSource:renderData.dataSource,columns:renderData.columns}))};stories_table_transforms_examples_stories_5.displayName="自定义样式的排序表头";var stories_table_transforms_examples_stories_6=function 拖拽调整列宽(){var _useProvinceDataSourc6=Object(ncov19_assets.e)(),isLoading=_useProvinceDataSourc6.isLoading,data=_useProvinceDataSourc6.dataSource,columns=[ncov19_assets.a.provinceName].concat(_toConsumableArray(ncov19_assets.a.indCols),[ncov19_assets.a.updateTime]),defaultSizes=Object(collectNodes.a)(columns,"leaf-only").map((function(col){var _col$width;return null!==(_col$width=col.width)&&void 0!==_col$width?_col$width:120})),_useState26=transforms_examples_stories_slicedToArray(Object(react.useState)(defaultSizes),2),sizes=_useState26[0],onChangeSizes=_useState26[1],renderData=Object(applyTransforms.a)({columns:columns,dataSource:data.slice(0,5)},makeColumnResizeTransform({sizes:sizes,onChangeSizes:onChangeSizes,appendExpander:!0,expanderVisibility:"hidden",disableUserSelectWhenResizing:!0,minSize:60,maxSize:500}));return react_default.a.createElement("div",null,react_default.a.createElement("div",{style:{display:"flex",alignItems:"center",height:40}},react_default.a.createElement("div",{style:{marginLeft:8}},"拖拽调整列宽")),react_default.a.createElement(table.a,{isLoading:isLoading,dataSource:renderData.dataSource,columns:renderData.columns}))};stories_table_transforms_examples_stories_6.displayName="拖拽调整列宽";var transforms_examples_stories_demo=function 自适应列宽_demo(){var _useProvinceDataSourc7=Object(ncov19_assets.e)(),isLoading=_useProvinceDataSourc7.isLoading,rawDataSource=_useProvinceDataSourc7.dataSource,columns=[{code:"provinceName",name:"省份",features:{autoWidth:!0}},{code:"confirmedCount",name:"确诊",render:format.a,align:"right",features:{autoWidth:!0}},{code:"curedCount",name:"治愈",render:format.a,align:"right",features:{autoWidth:!0}},{code:"deadCount",name:"死亡 (列宽固定为 150)",width:150,render:format.a,align:"right"},{code:"updateTime",name:"最后更新时间",features:{autoWidth:!0}}],tableRef=Object(react.useRef)(),_useState28=transforms_examples_stories_slicedToArray(Object(react.useState)(0),2),startIndex=_useState28[0],setStartIndex=_useState28[1],renderData=Object(applyTransforms.a)({columns:columns,dataSource:rawDataSource.slice(startIndex,startIndex+5)},useAutoWidthTransform(tableRef,{appendExpander:!0,expanderVisibility:"hidden",initColumnWidth:100},[rawDataSource,startIndex]));return react_default.a.createElement("div",null,react_default.a.createElement("p",{style:{fontSize:16}},react_default.a.createElement("code",null,"useAutoWidthTransform")," 会在 didMount/didUpdate 中获取单元格的实际内容宽度，然后重新设置表格列宽，实现「自适应列宽」。"),react_default.a.createElement("p",{style:{fontSize:14}},"useAutoWidthTransform 会频繁地从 DOM 中获取单元格的实际渲染宽度，单元格数量较多时会导致性能问题。 useAutoWidthTransform 不兼容「拖拽调整列宽」，不兼容「横向虚拟滚动」，不兼容存在 colSpan 的情况。",react_default.a.createElement("b",null,"谨慎使用，这里只提供 demo。")),react_default.a.createElement("div",{style:{margin:"12px 0"}},react_default.a.createElement("button",{onClick:function onClick(){setStartIndex(0===startIndex?5:0)}},"切换数据")),react_default.a.createElement(table.a,{ref:tableRef,isLoading:isLoading,dataSource:renderData.dataSource,columns:renderData.columns}))};transforms_examples_stories_demo.displayName="自适应列宽_demo",transforms_examples_stories_.parameters=Object.assign({storySource:{source:"function 树状表格() {\n  const columns: ArtColumn[] = [\n    {\n      code: 'name',\n      name: '数据维度',\n      lock: true,\n      width: 200,\n      // 通过自定义 getValue，可以实现「根据节点深度选取合适的数据字段」\n      // getValue(record: any) {\n      //   const meta = record[treeMetaSymbol]\n      //   const array = [record.subsidiary_name, record.city_name, record.shop_name]\n      //   return array[meta.depth]\n      // },\n    },\n    { code: 'shop_name', name: '门店' },\n    { code: 'imp_uv_dau_pct', name: '曝光UV占DAU比例', render: ratio, align: 'right' },\n    { code: 'app_qty_pbt', name: 'APP件单价', align: 'right' },\n    { code: 'all_app_trd_amt_1d', name: 'APP成交金额汇总', align: 'right' },\n  ]\n\n  const [state, setState] = useState({ isLoading: true, data: [] as any[] })\n\n  useEffect(() => {\n    getAppTrafficData().then((data) => {\n      setState({ isLoading: false, data })\n    })\n  }, [])\n\n  const [openKeys, onChangeOpenKeys] = useState(['B2C'])\n\n  // 注意 renderData 要用起来\n  const renderData = applyTransforms(\n    { columns: columns, dataSource: state.data },\n\n    // 从平铺的数据中，根据 id/parent_id 字段构建出树状结构\n    makeBuildTreeTransform('id', 'parent_id'),\n\n    makeTreeModeTransform({ primaryKey: 'id', openKeys, onChangeOpenKeys }),\n  )\n\n  return <BaseTable dataSource={renderData.dataSource} columns={renderData.columns} isLoading={state.isLoading} />\n}"}},transforms_examples_stories_.parameters),table_transforms_examples_stories_.parameters=Object.assign({storySource:{source:"function 表格排序_多列() {\n  const { isLoading, dataSource } = useProvinceDataSource()\n\n  const columns: ArtColumn[] = [\n    { code: 'provinceName', name: '省份', width: 150, features: { sortable: true } },\n    { code: 'confirmedCount', name: '确诊', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'curedCount', name: '治愈', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'deadCount', name: '死亡', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'updateTime', name: '最后更新时间', width: 180, render: time },\n  ]\n\n  const [sorts, onChangeSorts] = useState<SortItem[]>([\n    { code: 'deadCount', order: 'asc' },\n    { code: 'confirmedCount', order: 'desc' },\n  ])\n\n  const renderData = applyTransforms(\n    { columns, dataSource },\n    makeSortTransform({\n      sorts,\n      onChangeSorts,\n    }),\n  )\n\n  return (\n    <div>\n      <div style={{ display: 'flex', alignItems: 'center', height: 40 }}>\n        <div style={{ marginLeft: 8 }}>点击表头的排序图标对表格数据进行排序</div>\n        <button style={{ marginLeft: 16 }} onClick={() => onChangeSorts([])}>\n          清除排序\n        </button>\n      </div>\n      <BaseTable isLoading={isLoading} dataSource={renderData.dataSource} columns={renderData.columns} />\n    </div>\n  )\n}"}},table_transforms_examples_stories_.parameters),stories_table_transforms_examples_stories_.parameters=Object.assign({storySource:{source:"function 表格排序_单列() {\n  const { isLoading, dataSource: data } = useProvinceDataSource()\n\n  const columns: ArtColumn[] = [\n    { code: 'provinceName', name: '省份', width: 150, features: { sortable: true } },\n    { code: 'confirmedCount', name: '确诊', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'curedCount', name: '治愈', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'deadCount', name: '死亡', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'updateTime', name: '最后更新时间', width: 180, render: time },\n  ]\n\n  const [sorts, onChangeSorts] = useState<SortItem[]>([{ code: 'deadCount', order: 'desc' }])\n\n  const renderData = applyTransforms(\n    { columns, dataSource: data.slice(0, 5) },\n    makeSortTransform({\n      sorts,\n      onChangeSorts,\n      mode: 'single', // 改为 multiple 可以使用多列排序\n    }),\n  )\n\n  return (\n    <div>\n      <div style={{ display: 'flex', alignItems: 'center', height: 40 }}>\n        <div style={{ marginLeft: 8 }}>点击表头的排序图标对表格数据进行排序</div>\n      </div>\n      <BaseTable isLoading={isLoading} dataSource={renderData.dataSource} columns={renderData.columns} />\n    </div>\n  )\n}"}},stories_table_transforms_examples_stories_.parameters),stories_table_transforms_examples_stories_0.parameters=Object.assign({storySource:{source:"function 列高亮() {\n  const { isLoading, dataSource: data } = useProvinceDataSource()\n\n  const [hoverColIndex, onChangeHoverColIndex] = useState(-1)\n\n  const renderData = applyTransforms(\n    { columns: testProvColumns, dataSource: data.slice(0, 5) },\n    makeColumnHoverTransform({\n      hoverColIndex,\n      onChangeHoverColIndex,\n    }),\n  )\n\n  return <BaseTable isLoading={isLoading} dataSource={renderData.dataSource} columns={renderData.columns} />\n}"}},stories_table_transforms_examples_stories_0.parameters),stories_table_transforms_examples_stories_1.parameters=Object.assign({storySource:{source:"function 列的范围高亮() {\n  const appIndProto = proto.array<ArtColumn>({ align: 'right' })\n  const rateIndProto = proto.array<ArtColumn>({ align: 'right', render: ratio })\n\n  // 列配置\n  const columns: ArtColumn[] = [\n    {\n      name: '维度',\n      children: [\n        {\n          name: '商品信息',\n          children: [\n            { code: 'sku_code', name: 'SKU code' },\n            { code: 'sku_name', name: 'SKU名称' },\n          ],\n        },\n        {\n          name: '机构信息',\n          children: [\n            { code: 'city_name', name: '城市' },\n            { code: 'shop_name', name: '门店', features: { defaultVisible: true } },\n          ],\n        },\n        {\n          name: '类目信息',\n          children: [\n            { code: 'merge_cate_level1_name', name: '一级类目' },\n            { code: 'merge_cate_level2_name', name: '二级类目' },\n            { code: 'merge_cate_level3_name', name: '三级类目' },\n          ],\n        },\n      ],\n    },\n    {\n      name: '指标',\n      children: [\n        {\n          name: 'APP指标',\n          children: appIndProto([\n            { code: 'imp_uv_dau_pct', name: '曝光UV占DAU比例', render: ratio },\n            { code: 'app_trd_amt_1d', name: 'APP成交金额', render: amount },\n            { code: 'app_qty_pbt', name: 'APP件单价' },\n            { code: 'all_app_trd_amt_1d', name: 'APP成交金额汇总' },\n            { code: 'app_trd_usr_cnt_1d', name: 'APP成交用户数' },\n            { code: 'appout_shop_num', name: '缺货门店数', render: amount },\n            { code: 'all_time_len', name: '店均缺货时长', render: amount },\n            { code: 'bad_rmk_rate', name: '订单差评率', render: ratio },\n          ]),\n        },\n        {\n          name: '转换率',\n          children: rateIndProto([\n            { code: 'all_imp2pay_rate', name: '整体曝光至成交转化率' },\n            { code: 'search_imp2pay_rate', name: '搜索曝光至成交转化率' },\n            { code: 'classis_imp2pay_rate', name: '分类曝光至成交转化率' },\n            { code: 'cart_imp2pay_rate', name: '购物车曝光至成交转化率' },\n            { code: 'my_page_imp2pay_rate', name: '我的曝光至成交转化率' },\n            { code: 'pq_act_imp2pay_rate', name: '活动页曝光至成交转化率' },\n            { code: 'other_imp2pay_rate', name: '其他曝光至成交转化率' },\n          ]),\n        },\n      ],\n    },\n  ]\n\n  const [state, setState] = useState({ isLoading: true, data: [] as any[] })\n\n  useEffect(() => {\n    getAppTrafficData().then((data) => {\n      setState({ isLoading: false, data: data.slice(0, 8) })\n    })\n  }, [])\n\n  const [hoverRange, onChangeHoverRange] = useState({ start: 0, end: 0 })\n\n  const renderData = applyTransforms(\n    { columns, dataSource: state.data },\n    makeColumnRangeHoverTransform({\n      hoverRange,\n      onChangeHoverRange,\n    }),\n  )\n\n  return (\n    <BaseTable\n      defaultColumnWidth={120}\n      dataSource={renderData.dataSource}\n      columns={renderData.columns}\n      isLoading={state.isLoading}\n    />\n  )\n}"}},stories_table_transforms_examples_stories_1.parameters),stories_table_transforms_examples_stories_2.parameters=Object.assign({storySource:{source:"function 列气泡提示() {\n  const { isLoading, dataSource: data } = useProvinceDataSource()\n\n  const [sorts, onChangeSorts] = useState<SortItem[]>([])\n\n  const columns: ArtColumn[] = [\n    {\n      code: 'provinceName',\n      name: '省份',\n      features: {\n        tips:\n          '省份，即我国的省级行政区，是行政地位与省相同行政区的总称，为一级行政区，包括省、自治区、直辖市、特别行政区。' +\n          '中国共计34个省级行政区，包括23个省、5个自治区、4个直辖市、2个特别行政区。',\n      },\n    },\n    {\n      code: 'curedCount',\n      name: '治愈',\n      render: amount,\n      align: 'right',\n      features: {\n        sortable: true,\n        tips: (\n          <div>\n            治愈是汉字词语，英文cure; heal，注音zhì yù，使恢复健康。如：在骨折完全治愈之前不要上班。\n            治愈指动漫中温暖人心，净化心灵，悲伤时看能得到安慰，治愈自己心灵中的创伤、修补自己心灵上缺陷的作品。\n            也可以指动漫中人物，拥有对主角内心抚慰、平复内心创伤的能力。可以分为行动上和语言上的。\n          </div>\n        ),\n      },\n    },\n    {\n      code: 'updateTime',\n      name: '最后更新时间',\n      render: time,\n      features: {\n        tips: (\n          <div>\n            时间，是物质的运动、变化的持续性、顺序性的表现，包含时刻和时段两个概念。\n            时间是人类用以描述物质运动过程或事件发生过程的一个参数，确定时间，是靠不受外界影响的物质周期变化的规律。以地球自转为基础的时间计量系统称为世界时系统。日、月、年、世纪的时间计量属天文学中的历法范畴。\n            以地球自转运动为基础的时间单位称为“日”，以月球绕地球公转运动为基础的时间单位称为“月”，以地球绕太阳公转运动为基础的时间单位称为“年”。\n          </div>\n        ),\n      },\n    },\n  ]\n\n  const renderData = applyTransforms(\n    { columns, dataSource: data.slice(0, 3) },\n    makeSortTransform({ mode: 'single', sorts, onChangeSorts }),\n    makeTipsTransform({ Balloon }),\n  )\n\n  return (\n    <div>\n      <FusionStyles />\n      <BaseTable isLoading={isLoading} dataSource={renderData.dataSource.slice(0, 10)} columns={renderData.columns} />\n    </div>\n  )\n}"}},stories_table_transforms_examples_stories_2.parameters),stories_table_transforms_examples_stories_3.parameters=Object.assign({storySource:{source:"function 树状模式与层级排序() {\n  const columns: ArtColumn[] = [\n    { code: 'name', name: '数据维度', lock: true, width: 200 },\n    { code: 'shop_name', name: '门店', features: { sortable: true } },\n    { code: 'imp_uv_dau_pct', name: '曝光UV占DAU比例', render: ratio, align: 'right', features: { sortable: true } },\n    { code: 'app_qty_pbt', name: 'APP件单价', align: 'right', features: { sortable: true } },\n    { code: 'all_app_trd_amt_1d', name: 'APP成交金额汇总', align: 'right', features: { sortable: true } },\n  ]\n\n  const [state, setState] = useState({ isLoading: true, data: [] as any[] })\n\n  useEffect(() => {\n    getAppTrafficData().then((data) => {\n      setState({ isLoading: false, data })\n    })\n  }, [])\n\n  const [openKeys, onChangeOpenKeys] = useState(['B2C'])\n  const [sorts, onChangeSorts] = useState<SortItem[]>([])\n\n  const renderData = applyTransforms(\n    { columns, dataSource: state.data },\n    // 从平铺的数据中，根据 id/parent_id 字段构建出树状结构\n    makeBuildTreeTransform('id', 'parent_id'),\n    makeSortTransform({\n      sorts,\n      onChangeSorts,\n      mode: 'single', // 改为 multiple 可以使用多列排序\n    }),\n    makeTreeModeTransform({ primaryKey: 'id', openKeys, onChangeOpenKeys, indentSize: 20 }),\n  )\n\n  return <BaseTable dataSource={renderData.dataSource} columns={renderData.columns} isLoading={state.isLoading} />\n}"}},stories_table_transforms_examples_stories_3.parameters),stories_table_transforms_examples_stories_4.parameters=Object.assign({storySource:{source:"function 单元格自动合并() {\n  const { dataSource: cityData, isLoading } = useCityDataSource()\n\n  const renderData = applyTransforms(\n    {\n      dataSource: cityData.slice(0, 3).flatMap((d) => d.children.slice(0, 4)),\n      columns: [\n        {\n          code: 'provinceName',\n          name: '省份',\n          width: 150,\n          features: { autoRowSpan: true },\n        },\n        cols.cityName,\n        ...cols.indCols.map((col) => ({\n          ...col,\n          features: { autoRowSpan: true },\n        })),\n        {\n          code: 'updateTime',\n          name: '最后更新时间',\n          width: 180,\n          render: time,\n          features: { autoRowSpan: true },\n        },\n      ],\n    },\n    makeAutoRowSpanTransform(),\n  )\n\n  return (\n    <BaseTable isLoading={isLoading} useOuterBorder dataSource={renderData.dataSource} columns={renderData.columns} />\n  )\n}"}},stories_table_transforms_examples_stories_4.parameters),stories_table_transforms_examples_stories_5.parameters=Object.assign({storySource:{source:"function 自定义样式的排序表头() {\n  const { isLoading, dataSource: data } = useProvinceDataSource()\n\n  const columns: ArtColumn[] = [\n    { code: 'provinceName', name: '省份', width: 150, features: { sortable: true } },\n    { code: 'confirmedCount', name: '确诊', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'curedCount', name: '治愈', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'deadCount', name: '死亡', width: 100, render: amount, align: 'right', features: { sortable: true } },\n    { code: 'updateTime', name: '最后更新时间', width: 180, render: time },\n  ]\n\n  const [sorts, onChangeSorts] = useState<SortItem[]>([{ code: 'confirmedCount', order: 'desc' }])\n\n  const renderData = applyTransforms(\n    { columns, dataSource: data.slice(0, 5) },\n    makeSortTransform({\n      sorts,\n      onChangeSorts,\n      SortHeaderCell: CustomSortHeaderCell,\n    }),\n  )\n\n  return (\n    <div>\n      <div style={{ display: 'flex', alignItems: 'center', height: 40 }}>\n        <div style={{ marginLeft: 8 }}>通过示例 options.SortHeaderCell 可以自定义排序表头的样式/内容</div>\n        <button style={{ marginLeft: 16 }} onClick={() => onChangeSorts([])}>\n          清除排序\n        </button>\n      </div>\n      <BaseTable isLoading={isLoading} dataSource={renderData.dataSource} columns={renderData.columns} />\n    </div>\n  )\n}"}},stories_table_transforms_examples_stories_5.parameters),stories_table_transforms_examples_stories_6.parameters=Object.assign({storySource:{source:"function 拖拽调整列宽() {\n  const { isLoading, dataSource: data } = useProvinceDataSource()\n\n  const columns: ArtColumn[] = [cols.provinceName, ...cols.indCols, cols.updateTime]\n\n  const defaultColumnWidth = 120\n  // 注意 columns 可能是嵌套的结构，这里使用 collectNodes 来获取所有叶子节点\n  // 同时注意部分列的 width 可能为空，此时可以用 defaultColumnWidth 作为列的宽度\n  const defaultSizes = collectNodes(columns, 'leaf-only').map((col) => col.width ?? defaultColumnWidth)\n  const [sizes, onChangeSizes] = useState(defaultSizes)\n\n  const renderData = applyTransforms(\n    { columns, dataSource: data.slice(0, 5) },\n    makeColumnResizeTransform({\n      sizes,\n      onChangeSizes,\n      appendExpander: true,\n      expanderVisibility: 'hidden',\n      disableUserSelectWhenResizing: true,\n      minSize: 60,\n      maxSize: 500,\n    }),\n  )\n\n  return (\n    <div>\n      <div style={{ display: 'flex', alignItems: 'center', height: 40 }}>\n        <div style={{ marginLeft: 8 }}>拖拽调整列宽</div>\n      </div>\n      <BaseTable isLoading={isLoading} dataSource={renderData.dataSource} columns={renderData.columns} />\n    </div>\n  )\n}"}},stories_table_transforms_examples_stories_6.parameters),transforms_examples_stories_demo.parameters=Object.assign({storySource:{source:"function 自适应列宽_demo() {\n  const { isLoading, dataSource: rawDataSource } = useProvinceDataSource()\n\n  const columns: ArtColumn[] = [\n    // 注意要为 自适应宽度的列 设置 features.autoWidth=true\n    { code: 'provinceName', name: '省份', features: { autoWidth: true } },\n    { code: 'confirmedCount', name: '确诊', render: amount, align: 'right', features: { autoWidth: true } },\n    { code: 'curedCount', name: '治愈', render: amount, align: 'right', features: { autoWidth: true } },\n    { code: 'deadCount', name: '死亡 (列宽固定为 150)', width: 150, render: amount, align: 'right' },\n    { code: 'updateTime', name: '最后更新时间', features: { autoWidth: true } },\n  ]\n\n  const tableRef = useRef<BaseTable>()\n  const [startIndex, setStartIndex] = useState(0)\n\n  const renderData = applyTransforms(\n    { columns, dataSource: rawDataSource.slice(startIndex, startIndex + 5) },\n\n    // 注意 useAutoWidthTransform 是一个 React hooks，要遵循 hooks 的用法规范\n    useAutoWidthTransform(\n      tableRef,\n      {\n        appendExpander: true,\n        expanderVisibility: 'hidden',\n        initColumnWidth: 100,\n      },\n      // deps=[data] 表示：每当 data 发生变化的时候，重新设置表格的列宽\n      // deps=[] 表示：只在 didMount 时重新设置一次列宽\n      // deps=undefined/null 表示：didMount 或每次 didUpdate 时都设置列宽\n      [rawDataSource, startIndex],\n    ),\n  )\n\n  return (\n    <div>\n      <p style={{ fontSize: 16 }}>\n        <code>useAutoWidthTransform</code> 会在 didMount/didUpdate\n        中获取单元格的实际内容宽度，然后重新设置表格列宽，实现「自适应列宽」。\n      </p>\n      <p style={{ fontSize: 14 }}>\n        useAutoWidthTransform 会频繁地从 DOM 中获取单元格的实际渲染宽度，单元格数量较多时会导致性能问题。\n        useAutoWidthTransform 不兼容「拖拽调整列宽」，不兼容「横向虚拟滚动」，不兼容存在 colSpan 的情况。\n        <b>谨慎使用，这里只提供 demo。</b>\n      </p>\n      <div style={{ margin: '12px 0' }}>\n        <button\n          onClick={() => {\n            setStartIndex(startIndex === 0 ? 5 : 0)\n          }}\n        >\n          切换数据\n        </button>\n      </div>\n      <BaseTable ref={tableRef} isLoading={isLoading} dataSource={renderData.dataSource} columns={renderData.columns} />\n    </div>\n  )\n}"}},transforms_examples_stories_demo.parameters)},2196:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"表格操作栏示例",(function(){return table_operation_bar_stories_}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(33),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(7),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);var proto=__webpack_require__(151),traverseColumn=__webpack_require__(525),applyTransforms=__webpack_require__(244);function makeOrderFieldTransform(){var startOrder=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return Object(traverseColumn.a)((function(column){var _column$features,_column$features2;return(null===(_column$features=column.features)||void 0===_column$features?void 0:_column$features.order)||(null===(_column$features2=column.features)||void 0===_column$features2?void 0:_column$features2.orderField)?Object.assign({},column,{getValue:function getValue(record,index){return index+startOrder}}):column}))}var isLeafNode=__webpack_require__(58);var columnHover=__webpack_require__(2213),table=__webpack_require__(55),SpanManager=(__webpack_require__(44),__webpack_require__(32),__webpack_require__(358)),internals=__webpack_require__(60),collectNodes=__webpack_require__(370),getTreeDepth=__webpack_require__(912);function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function move(_ref,dx,dy){return{c:_ref.c+dx,r:_ref.r+dy}}function exportTableAsExcel(xlsxPackage,dataSource,columns,filename){var sheet=xlsxPackage.utils.aoa_to_sheet([]),topHeaderHeight=Object(getTreeDepth.a)(columns)+1,origin={c:0,r:0};function addOne(datum,origin){xlsxPackage.utils.sheet_add_aoa(sheet,[[datum]],{origin:origin})}function mergeCells(addr,width,height){1===width&&1===height||(null==sheet["!merges"]&&(sheet["!merges"]=[]),sheet["!merges"].push({s:addr,e:move(addr,width-1,height-1)}))}!function addTopHeaders(origin){!function dfs(cols,startDx,startDy){var _step,start=move(origin,startDx,startDy),offsetX=0,_iterator=_createForOfIteratorHelper(cols);try{for(_iterator.s();!(_step=_iterator.n()).done;){var _col$features,col=_step.value;if(!(null===(_col$features=col.features)||void 0===_col$features?void 0:_col$features.noExport)){var current=move(start,offsetX,0);if(addOne(col.name,current),Object(isLeafNode.a)(col))offsetX+=1,mergeCells(current,1,topHeaderHeight-startDy);else{var childrenWidth=dfs(col.children,startDx+offsetX,startDy+1);mergeCells(current,childrenWidth,1),offsetX+=childrenWidth}}}}catch(err){_iterator.e(err)}finally{_iterator.f()}return offsetX}(columns,0,0)}(origin),function addDataPart(origin){var leafColumns=Object(collectNodes.a)(columns,"leaf-only").filter((function(col){var _col$features2;return!(null===(_col$features2=col.features)||void 0===_col$features2?void 0:_col$features2.noExport)})),spanManager=new SpanManager.a;!function add(data,origin){xlsxPackage.utils.sheet_add_aoa(sheet,data,{origin:origin})}(dataSource.map((function(record,rowIndex){return spanManager.stripUpwards(rowIndex),leafColumns.map((function(col,colIndex){if(spanManager.testSkip(rowIndex,colIndex))return null;var spanRect=function safeGetSpanRect(column,record,rowIndex,colIndex){var colSpan=1,rowSpan=1;if(column.getSpanRect){var value=Object(internals.safeGetValue)(column,record,rowIndex),spanRect=column.getSpanRect(value,record,rowIndex);colSpan=null==spanRect?1:spanRect.right-colIndex,rowSpan=null==spanRect?1:spanRect.bottom-rowIndex}else{var cellProps=Object(internals.safeGetCellProps)(column,record,rowIndex);null!=cellProps.colSpan&&(colSpan=cellProps.colSpan),null!=cellProps.rowSpan&&(rowSpan=cellProps.rowSpan)}return{top:rowIndex,bottom:rowIndex+rowSpan,left:colIndex,right:colIndex+colSpan}}(col,record,rowIndex,colIndex),rowSpan=spanRect.bottom-spanRect.top,colSpan=spanRect.right-spanRect.left;return(rowSpan>1||colSpan>1)&&(spanManager.add(spanRect.top,spanRect.left,colSpan,rowSpan),mergeCells(move(origin,spanRect.left,spanRect.top),colSpan,rowSpan)),function sanitizeCellDatum(value){return value===1/0||value===-1/0||"number"==typeof value&&isNaN(value)?null:value}(Object(internals.safeGetValue)(col,record,rowIndex))}))})),origin)}(move(origin,0,topHeaderHeight)),xlsxPackage.writeFile({SheetNames:["Sheet1"],Sheets:{Sheet1:sheet}},filename)}var react=__webpack_require__(0),react_default=__webpack_require__.n(react),cdn_data=__webpack_require__(80),format=__webpack_require__(12),fusion_style=__webpack_require__(63),components=__webpack_require__(367);function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return table_operation_bar_stories_arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||table_operation_bar_stories_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||table_operation_bar_stories_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function table_operation_bar_stories_unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return table_operation_bar_stories_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?table_operation_bar_stories_arrayLikeToArray(o,minLen):void 0}}function table_operation_bar_stories_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}__webpack_exports__.default={parameters:{storySource:{source:"import {\n  applyTransforms,\n  ArtColumn,\n  BaseTable,\n  exportTableAsExcel,\n  makeFlattenTransform,\n  makeOrderFieldTransform,\n  proto,\n  traverseColumn,\n  useColumnHoverTransform,\n} from 'ali-react-table'\nimport React, { useEffect, useState } from 'react'\nimport { getAppTrafficData } from '../../assets/cdn-data'\nimport { amount, ratio } from '../../assets/format'\nimport { FusionStyles } from '../../assets/fusion-style'\nimport { useOperationBar } from './components'\n\nexport default { title: '示例 / 其他组件 / 表格操作栏示例' }\n\nexport function 表格操作栏示例() {\n  // 例如 proto 创建若干列配置的「原型」，方便后续书写列配置\n  const groupProto = proto.array<ArtColumn>({\n    name: proto.string,\n    children: proto.array({\n      name: proto.string,\n      width: 150,\n      features: proto.object({ defaultVisible: true }),\n    }),\n  })\n\n  const appIndProto = proto.array<ArtColumn>({\n    width: 120,\n    align: 'right',\n    features: { defaultVisible: true, lfl: true },\n  })\n\n  const rateIndProto = proto.array<ArtColumn>({\n    width: 120,\n    align: 'right',\n    render: ratio,\n    features: { defaultVisible: true, lfl: true },\n  })\n\n  const cateFieldProto = proto.array<ArtColumn>({ width: 120 })\n\n  // 列配置\n  const columns: ArtColumn[] = groupProto([\n    {\n      name: '商品信息',\n      features: { flatten: true },\n      children: [\n        { code: 'order', name: '序号', width: 100, lock: true, features: { order: true, enforceVisible: true } },\n        { code: 'sku_code', name: 'SKU code' },\n        { code: 'sku_name', name: 'SKU名称' },\n      ],\n    },\n    {\n      name: '机构信息',\n      features: { flatten: true },\n      children: [\n        { code: 'city_name', name: '城市' },\n        { code: 'shop_name', name: '门店', features: { defaultVisible: true } },\n      ],\n    },\n    {\n      name: '类目信息',\n      children: cateFieldProto([\n        { code: 'merge_cate_level1_name', name: '一级类目' },\n        { code: 'merge_cate_level2_name', name: '二级类目' },\n        { code: 'merge_cate_level3_name', name: '三级类目' },\n      ]),\n    },\n    {\n      name: 'APP指标',\n      children: appIndProto([\n        { code: 'imp_uv_dau_pct', name: '曝光UV占DAU比例', render: ratio },\n        { code: 'app_trd_amt_1d', name: 'APP成交金额', render: amount },\n        { code: 'app_qty_pbt', name: 'APP件单价' },\n        { code: 'all_app_trd_amt_1d', name: 'APP成交金额汇总' },\n        { code: 'app_trd_usr_cnt_1d', name: 'APP成交用户数' },\n        { code: 'appout_shop_num', name: '缺货门店数', render: amount },\n        { code: 'all_time_len', name: '店均缺货时长', render: amount },\n        { code: 'bad_rmk_rate', name: '订单差评率', render: ratio },\n      ]),\n    },\n    {\n      name: '转换率',\n      children: rateIndProto([\n        { code: 'all_imp2pay_rate', name: '整体曝光至成交转化率' },\n        { code: 'search_imp2pay_rate', name: '搜索曝光至成交转化率' },\n        { code: 'classis_imp2pay_rate', name: '分类曝光至成交转化率' },\n        { code: 'cart_imp2pay_rate', name: '购物车曝光至成交转化率' },\n        { code: 'my_page_imp2pay_rate', name: '我的曝光至成交转化率' },\n        { code: 'pq_act_imp2pay_rate', name: '活动页曝光至成交转化率' },\n        { code: 'other_imp2pay_rate', name: '其他曝光至成交转化率' },\n      ]),\n    },\n  ])\n\n  // 自定义的 transform，为 features.lfl 为 true 的列添加对应的 环比列\n  function transformLfl(showLfl: boolean) {\n    return traverseColumn((col) => {\n      if (showLfl && col.features?.lfl) {\n        return [col, { ...col, name: '环比', render: (value) => `lfl_of_${value}` }]\n      }\n      return col\n    })\n  }\n\n  const [state, setState] = useState({ isLoading: true, data: [] as any[] })\n\n  useEffect(() => {\n    getAppTrafficData().then((data) => {\n      setState({ isLoading: false, data: data.slice(0, 8) })\n    })\n  }, [])\n\n  const operationBar = useOperationBar({\n    actionColor: '#5e85f7',\n    features: [\n      { type: 'toggle', key: 'lfl', title: '展示环比', transform: transformLfl },\n      { type: 'separator' },\n      { type: 'export', onExport },\n      { type: 'custom-columns' },\n      { type: 'custom', node: `共 ${state.isLoading ? '-' : state.data.length} 条数据` },\n    ],\n    columns,\n  })\n\n  const renderData = applyTransforms(\n    { columns, dataSource: state.data },\n    ...operationBar.transforms,\n    makeOrderFieldTransform(),\n    makeFlattenTransform(),\n    useColumnHoverTransform(),\n  )\n\n  return (\n    <div>\n      <FusionStyles />\n      <operationBar.view>{operationBar.nodes}</operationBar.view>\n      <BaseTable dataSource={renderData.dataSource} columns={renderData.columns} isLoading={state.isLoading} />\n    </div>\n  )\n\n  function onExport() {\n    return exportTableAsExcel(require('xlsx'), state.data, renderData.columns, 'export.xlsx')\n  }\n}\n",locationsMap:{"表格操作栏示例":{startLoc:{col:7,line:20},endLoc:{col:1,line:149},startBody:{col:7,line:20},endBody:{col:1,line:149}}}}},title:"示例 / 其他组件 / 表格操作栏示例"};var table_operation_bar_stories_=function 表格操作栏示例(){var groupProto=proto.a.array({name:proto.a.string,children:proto.a.array({name:proto.a.string,width:150,features:proto.a.object({defaultVisible:!0})})}),appIndProto=proto.a.array({width:120,align:"right",features:{defaultVisible:!0,lfl:!0}}),rateIndProto=proto.a.array({width:120,align:"right",render:format.c,features:{defaultVisible:!0,lfl:!0}}),columns=groupProto([{name:"商品信息",features:{flatten:!0},children:[{code:"order",name:"序号",width:100,lock:!0,features:{order:!0,enforceVisible:!0}},{code:"sku_code",name:"SKU code"},{code:"sku_name",name:"SKU名称"}]},{name:"机构信息",features:{flatten:!0},children:[{code:"city_name",name:"城市"},{code:"shop_name",name:"门店",features:{defaultVisible:!0}}]},{name:"类目信息",children:proto.a.array({width:120})([{code:"merge_cate_level1_name",name:"一级类目"},{code:"merge_cate_level2_name",name:"二级类目"},{code:"merge_cate_level3_name",name:"三级类目"}])},{name:"APP指标",children:appIndProto([{code:"imp_uv_dau_pct",name:"曝光UV占DAU比例",render:format.c},{code:"app_trd_amt_1d",name:"APP成交金额",render:format.a},{code:"app_qty_pbt",name:"APP件单价"},{code:"all_app_trd_amt_1d",name:"APP成交金额汇总"},{code:"app_trd_usr_cnt_1d",name:"APP成交用户数"},{code:"appout_shop_num",name:"缺货门店数",render:format.a},{code:"all_time_len",name:"店均缺货时长",render:format.a},{code:"bad_rmk_rate",name:"订单差评率",render:format.c}])},{name:"转换率",children:rateIndProto([{code:"all_imp2pay_rate",name:"整体曝光至成交转化率"},{code:"search_imp2pay_rate",name:"搜索曝光至成交转化率"},{code:"classis_imp2pay_rate",name:"分类曝光至成交转化率"},{code:"cart_imp2pay_rate",name:"购物车曝光至成交转化率"},{code:"my_page_imp2pay_rate",name:"我的曝光至成交转化率"},{code:"pq_act_imp2pay_rate",name:"活动页曝光至成交转化率"},{code:"other_imp2pay_rate",name:"其他曝光至成交转化率"}])}]);var _useState2=_slicedToArray(Object(react.useState)({isLoading:!0,data:[]}),2),state=_useState2[0],setState=_useState2[1];Object(react.useEffect)((function(){Object(cdn_data.a)().then((function(data){setState({isLoading:!1,data:data.slice(0,8)})}))}),[]);var operationBar=Object(components.b)({actionColor:"#5e85f7",features:[{type:"toggle",key:"lfl",title:"展示环比",transform:function transformLfl(showLfl){return Object(traverseColumn.a)((function(col){var _col$features;return showLfl&&(null===(_col$features=col.features)||void 0===_col$features?void 0:_col$features.lfl)?[col,Object.assign({},col,{name:"环比",render:function render(value){return"lfl_of_".concat(value)}})]:col}))}},{type:"separator"},{type:"export",onExport:function onExport(){return exportTableAsExcel(__webpack_require__(2175),state.data,renderData.columns,"export.xlsx")}},{type:"custom-columns"},{type:"custom",node:"共 ".concat(state.isLoading?"-":state.data.length," 条数据")}],columns:columns}),renderData=applyTransforms.a.apply(void 0,[{columns:columns,dataSource:state.data}].concat(_toConsumableArray(operationBar.transforms),[makeOrderFieldTransform(),Object(traverseColumn.a)((function(column){var _column$features;return Object(isLeafNode.a)(column)?column:(null===(_column$features=column.features)||void 0===_column$features?void 0:_column$features.flatten)?column.children:column})),Object(columnHover.b)()]));return react_default.a.createElement("div",null,react_default.a.createElement(fusion_style.a,null),react_default.a.createElement(operationBar.view,null,operationBar.nodes),react_default.a.createElement(table.a,{dataSource:renderData.dataSource,columns:renderData.columns,isLoading:state.isLoading}))};table_operation_bar_stories_.parameters=Object.assign({storySource:{source:"function 表格操作栏示例() {\n  // 例如 proto 创建若干列配置的「原型」，方便后续书写列配置\n  const groupProto = proto.array<ArtColumn>({\n    name: proto.string,\n    children: proto.array({\n      name: proto.string,\n      width: 150,\n      features: proto.object({ defaultVisible: true }),\n    }),\n  })\n\n  const appIndProto = proto.array<ArtColumn>({\n    width: 120,\n    align: 'right',\n    features: { defaultVisible: true, lfl: true },\n  })\n\n  const rateIndProto = proto.array<ArtColumn>({\n    width: 120,\n    align: 'right',\n    render: ratio,\n    features: { defaultVisible: true, lfl: true },\n  })\n\n  const cateFieldProto = proto.array<ArtColumn>({ width: 120 })\n\n  // 列配置\n  const columns: ArtColumn[] = groupProto([\n    {\n      name: '商品信息',\n      features: { flatten: true },\n      children: [\n        { code: 'order', name: '序号', width: 100, lock: true, features: { order: true, enforceVisible: true } },\n        { code: 'sku_code', name: 'SKU code' },\n        { code: 'sku_name', name: 'SKU名称' },\n      ],\n    },\n    {\n      name: '机构信息',\n      features: { flatten: true },\n      children: [\n        { code: 'city_name', name: '城市' },\n        { code: 'shop_name', name: '门店', features: { defaultVisible: true } },\n      ],\n    },\n    {\n      name: '类目信息',\n      children: cateFieldProto([\n        { code: 'merge_cate_level1_name', name: '一级类目' },\n        { code: 'merge_cate_level2_name', name: '二级类目' },\n        { code: 'merge_cate_level3_name', name: '三级类目' },\n      ]),\n    },\n    {\n      name: 'APP指标',\n      children: appIndProto([\n        { code: 'imp_uv_dau_pct', name: '曝光UV占DAU比例', render: ratio },\n        { code: 'app_trd_amt_1d', name: 'APP成交金额', render: amount },\n        { code: 'app_qty_pbt', name: 'APP件单价' },\n        { code: 'all_app_trd_amt_1d', name: 'APP成交金额汇总' },\n        { code: 'app_trd_usr_cnt_1d', name: 'APP成交用户数' },\n        { code: 'appout_shop_num', name: '缺货门店数', render: amount },\n        { code: 'all_time_len', name: '店均缺货时长', render: amount },\n        { code: 'bad_rmk_rate', name: '订单差评率', render: ratio },\n      ]),\n    },\n    {\n      name: '转换率',\n      children: rateIndProto([\n        { code: 'all_imp2pay_rate', name: '整体曝光至成交转化率' },\n        { code: 'search_imp2pay_rate', name: '搜索曝光至成交转化率' },\n        { code: 'classis_imp2pay_rate', name: '分类曝光至成交转化率' },\n        { code: 'cart_imp2pay_rate', name: '购物车曝光至成交转化率' },\n        { code: 'my_page_imp2pay_rate', name: '我的曝光至成交转化率' },\n        { code: 'pq_act_imp2pay_rate', name: '活动页曝光至成交转化率' },\n        { code: 'other_imp2pay_rate', name: '其他曝光至成交转化率' },\n      ]),\n    },\n  ])\n\n  // 自定义的 transform，为 features.lfl 为 true 的列添加对应的 环比列\n  function transformLfl(showLfl: boolean) {\n    return traverseColumn((col) => {\n      if (showLfl && col.features?.lfl) {\n        return [col, { ...col, name: '环比', render: (value) => `lfl_of_${value}` }]\n      }\n      return col\n    })\n  }\n\n  const [state, setState] = useState({ isLoading: true, data: [] as any[] })\n\n  useEffect(() => {\n    getAppTrafficData().then((data) => {\n      setState({ isLoading: false, data: data.slice(0, 8) })\n    })\n  }, [])\n\n  const operationBar = useOperationBar({\n    actionColor: '#5e85f7',\n    features: [\n      { type: 'toggle', key: 'lfl', title: '展示环比', transform: transformLfl },\n      { type: 'separator' },\n      { type: 'export', onExport },\n      { type: 'custom-columns' },\n      { type: 'custom', node: `共 ${state.isLoading ? '-' : state.data.length} 条数据` },\n    ],\n    columns,\n  })\n\n  const renderData = applyTransforms(\n    { columns, dataSource: state.data },\n    ...operationBar.transforms,\n    makeOrderFieldTransform(),\n    makeFlattenTransform(),\n    useColumnHoverTransform(),\n  )\n\n  return (\n    <div>\n      <FusionStyles />\n      <operationBar.view>{operationBar.nodes}</operationBar.view>\n      <BaseTable dataSource={renderData.dataSource} columns={renderData.columns} isLoading={state.isLoading} />\n    </div>\n  )\n\n  function onExport() {\n    return exportTableAsExcel(require('xlsx'), state.data, renderData.columns, 'export.xlsx')\n  }\n}"}},table_operation_bar_stories_.parameters)},2198:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"基本示例",(function(){return drillable_tree_table_stories_}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(32),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(7),__webpack_require__(897),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);var cross_tree_table=__webpack_require__(2205),lodash=__webpack_require__(81),lodash_default=__webpack_require__.n(lodash),mobx_module=__webpack_require__(38),mobxreact_esm=__webpack_require__(921),react=__webpack_require__(0),react_default=__webpack_require__.n(react),cdn_data=__webpack_require__(80),format=__webpack_require__(12),fusion_style=__webpack_require__(63),overlay=(__webpack_require__(44),__webpack_require__(89),__webpack_require__(29),__webpack_require__(482),__webpack_require__(103),__webpack_require__(90),__webpack_require__(98),__webpack_require__(219),__webpack_require__(120)),input=__webpack_require__(926),es_checkbox=__webpack_require__(371),es_button=__webpack_require__(53),dialog=__webpack_require__(2223),bucket_7=__webpack_require__(2203),bucket_14=__webpack_require__(2215),bucket_5=__webpack_require__(2219),classnames=__webpack_require__(11),classnames_default=__webpack_require__.n(classnames),immer_esm=__webpack_require__(522),react_beautiful_dnd_esm=__webpack_require__(207),styled_components_browser_esm=__webpack_require__(40);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var PopupDiv=styled_components_browser_esm.b.div.withConfig({displayName:"designers__PopupDiv",componentId:"sc-1d0o9k2-0"})(["padding:12px;width:350px;min-height:200px;max-height:400px;overflow:hidden;background:white;border:1px solid #ccc;display:flex;flex-flow:column;"]),ValueList=styled_components_browser_esm.b.ol.withConfig({displayName:"designers__ValueList",componentId:"sc-1d0o9k2-1"})(["margin:8px 0;> li{height:24px;display:flex;align-items:center;}"]),CheckedDimListDiv=styled_components_browser_esm.b.div.withConfig({displayName:"designers__CheckedDimListDiv",componentId:"sc-1d0o9k2-2"})(["font-size:14px;.tag-list{display:flex;user-select:none;margin-left:-8px;}.tag{padding:4px 8px;border-radius:3px;background:#eee;margin-left:8px;display:flex;align-items:center;&.active{background:#5484ff;color:#fefeff;}&.empty{background:#eb4626;}.filter-icon{cursor:pointer;margin-left:4px;fill:currentColor;}}"]);function CheckedDimList(_ref){var style=_ref.style,className=_ref.className,pivot=_ref.pivot,dimMap=new Map(pivot.allDimensions.map((function(dim){return[dim.code,dim]})));return react_default.a.createElement(CheckedDimListDiv,{style:style,className:className},react_default.a.createElement(react_beautiful_dnd_esm.a,{onDragEnd:function onDragEnd(result){if(result.destination){var i=result.source.index,j=result.destination.index,nextCodes=pivot.dimCodes.slice(),code=_slicedToArray(nextCodes.splice(i,1),1)[0];nextCodes.splice(j,0,code),pivot.changeDimCodes(nextCodes)}}},react_default.a.createElement(react_beautiful_dnd_esm.c,{droppableId:"dimension-list",direction:"horizontal"},(function(dropProvided,snapshot){return react_default.a.createElement("div",{className:"tag-list",ref:dropProvided.innerRef},pivot.dimCodes.map((function(dimCode,index){var allValues=pivot.dimValues[dimCode],values=pivot.filters[dimCode];return react_default.a.createElement(react_beautiful_dnd_esm.b,{key:dimCode,draggableId:dimCode,index:index},(function(dragProvided,snapshot){return react_default.a.createElement(overlay.a.Popup,{key:dimCode,trigger:react_default.a.createElement("div",_extends({key:dimCode,ref:dragProvided.innerRef},dragProvided.draggableProps,dragProvided.dragHandleProps,{className:classnames_default()("tag",{active:values.length<allValues.length,empty:allValues.length>0&&0===values.length})}),dimMap.get(dimCode).name,react_default.a.createElement(bucket_7.a,{className:"filter-icon"})),triggerType:"click"},react_default.a.createElement(CheckedDimFilterPopup,{pivot:pivot,allValues:allValues,values:values,dimCode:dimCode}))}))})),dropProvided.placeholder)}))))}function CheckedDimFilterPopup(_ref2){var allValues=_ref2.allValues,values=_ref2.values,pivot=_ref2.pivot,dimCode=_ref2.dimCode,set=new Set(values),_useState2=_slicedToArray(Object(react.useState)(""),2),rawSearch=_useState2[0],setRawSearch=_useState2[1],search=rawSearch.trim(),filtered=allValues.map((function(value){if(""===search)return{value:value,title:value};var i=value.indexOf(search);return-1===i?null:{value:value,title:react_default.a.createElement("span",null,react_default.a.createElement("span",null,value.slice(0,i)),react_default.a.createElement("span",{style:{color:"blue"}},search),react_default.a.createElement("span",null,value.slice(i+search.length)))}})).filter(Boolean);return react_default.a.createElement(PopupDiv,null,react_default.a.createElement("div",null,react_default.a.createElement(input.a,{placeholder:"搜索",style:{width:"100%"},hasClear:!0,value:rawSearch,onChange:setRawSearch})),react_default.a.createElement("div",{style:{overflow:"auto"}},allValues.length>0&&0===filtered.length&&react_default.a.createElement("div",{style:{margin:16,textAlign:"center"}},"没有符合查询条件的数据"),react_default.a.createElement(ValueList,null,filtered.map((function(_ref3){var value=_ref3.value,title=_ref3.title;return react_default.a.createElement("li",{key:value},react_default.a.createElement(es_checkbox.a,{checked:set.has(value),onChange:function onChange(checked){return pivot.filter(dimCode,value,checked)}},title))})))),react_default.a.createElement("div",{style:{marginTop:"auto",textAlign:"center"}},react_default.a.createElement(es_button.a,{size:"small",onClick:function onClick(){pivot.batchFilter(dimCode,filtered.map((function(v){return v.value})),!0)}},search?"添加到选中":"全选"),react_default.a.createElement(es_button.a,{size:"small",style:{marginLeft:8},onClick:function onClick(){pivot.batchFilter(dimCode,filtered.map((function(v){return v.value})),!1)}},search?"从选中中移除":"全不选")))}CheckedDimList.displayName="CheckedDimList",CheckedDimFilterPopup.displayName="CheckedDimFilterPopup";var IndicatorChooseDiv=styled_components_browser_esm.b.div.withConfig({displayName:"designers__IndicatorChooseDiv",componentId:"sc-1d0o9k2-3"})(["--border-color:#edeff2;display:flex;border:1px solid var(--border-color);"]),IndicatorsPartDiv=styled_components_browser_esm.b.div.withConfig({displayName:"designers__IndicatorsPartDiv",componentId:"sc-1d0o9k2-4"})(["width:300px;.title{background:#eaedf2;color:#7f8a9c;padding-left:8px;height:32px;line-height:32px;}.ind-list{height:300px;overflow:auto;> li{height:28px;display:flex;align-items:center;}.ind-item{padding:0 8px;flex:1 0 auto;height:100%;display:flex;align-items:center;}.clickable-ind-item{cursor:pointer;}.draggable-ind-item{border-bottom:1px solid var(--border-color);background:white;transition:box-shadow 300ms;&.dragging{border:1px solid var(--border-color);box-shadow:#adadad54 0 0 5px 0.5px;}}}"]);function PrimaryColumnTitle(_ref4){var pivot=_ref4.pivot,_useState4=_slicedToArray(Object(react.useState)(!1),2),visible=_useState4[0],setVisible=_useState4[1],onClose=function onClose(){return setVisible(!1)},_useState6=_slicedToArray(Object(react.useState)((function(){return Object(mobx_module.q)(pivot)})),2),state=_useState6[0],setState=_useState6[1];Object(react.useEffect)((function(){visible&&setState(Object(mobx_module.q)(pivot))}),[visible]);var dimMap=new Map(pivot.allDimensions.map((function(dim){return[dim.code,dim]})));return Object(react.useEffect)((function(){}),[visible]),react_default.a.createElement("div",{style:{display:"flex",alignItems:"center"}},react_default.a.createElement("b",null,"数据维度"),react_default.a.createElement("div",{style:{marginLeft:"auto",display:"flex",alignItems:"center",cursor:"pointer",userSelect:"none"},onClick:function onClick(){return setVisible(!0)}},react_default.a.createElement(bucket_14.b,{style:{fill:"currentColor"}}),react_default.a.createElement("span",{style:{marginLeft:4}},"设置"),react_default.a.createElement(dialog.a,{closeable:!1,title:"数据维度配置",visible:visible,onOk:function onOk(){pivot.changeDimCodes(state.dimCodes,pivot.dimValues),onClose()},onCancel:onClose},react_default.a.createElement(IndicatorChooseDiv,null,react_default.a.createElement(IndicatorsPartDiv,null,react_default.a.createElement("div",{className:"title"},"选择维度（",state.dimCodes.length,"/",pivot.allDimensions.length,"）"),react_default.a.createElement("ul",{className:"ind-list"},pivot.allDimensions.map((function(dim){return react_default.a.createElement("li",{key:dim.code},react_default.a.createElement(es_checkbox.a,{className:"ind-item clickable-ind-item",checked:state.dimCodes.includes(dim.code),onChange:function onChange(checked){setState((function(prev){return Object(immer_esm.a)(prev,(function(draft){checked?draft.dimCodes.push(dim.code):draft.dimCodes.splice(draft.dimCodes.indexOf(dim.code),1)}))}))}},dim.name))})))),react_default.a.createElement(IndicatorsPartDiv,{style:{borderLeft:"1px solid var(--border-color)"}},react_default.a.createElement("div",{className:"title"},"已选（",state.dimCodes.length,"）"),react_default.a.createElement(react_beautiful_dnd_esm.a,{onDragEnd:function onDragEnd(result){null!=result.destination&&setState((function(prev){return Object(immer_esm.a)(prev,(function(draft){var i=result.source.index,j=result.destination.index,code=_slicedToArray(draft.dimCodes.splice(i,1),1)[0];draft.dimCodes.splice(j,0,code)}))}))}},react_default.a.createElement(react_beautiful_dnd_esm.c,{droppableId:"selected-dimensions",direction:"vertical"},(function(dropProvided,snapshot){return react_default.a.createElement("ul",{className:"ind-list",ref:dropProvided.innerRef},state.dimCodes.map((function(dimCode,index){return react_default.a.createElement(react_beautiful_dnd_esm.b,{key:dimCode,index:index,draggableId:dimCode},(function(dragProvided,snapshot){return react_default.a.createElement("li",_extends({ref:dragProvided.innerRef},dragProvided.draggableProps),react_default.a.createElement("div",{className:classnames_default()("ind-item draggable-ind-item",{dragging:snapshot.isDragging})},dimMap.get(dimCode).name,react_default.a.createElement("div",_extends({},dragProvided.dragHandleProps,{style:{marginLeft:"auto"}}),react_default.a.createElement(bucket_5.b,{style:{fill:"currentColor"}}))))}))})),dropProvided.placeholder)}))))))))}PrimaryColumnTitle.displayName="PrimaryColumnTitle";try{CheckedDimList.displayName="CheckedDimList",CheckedDimList.__docgenInfo={description:"",displayName:"CheckedDimList",props:{pivot:{defaultValue:null,description:"",name:"pivot",required:!0,type:{name:"Pivot"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/pivot/pivot-examples/drill-tree-table/designers.tsx#CheckedDimList"]={docgenInfo:CheckedDimList.__docgenInfo,name:"CheckedDimList",path:"stories/pivot/pivot-examples/drill-tree-table/designers.tsx#CheckedDimList"})}catch(__react_docgen_typescript_loader_error){}try{PrimaryColumnTitle.displayName="PrimaryColumnTitle",PrimaryColumnTitle.__docgenInfo={description:"",displayName:"PrimaryColumnTitle",props:{pivot:{defaultValue:null,description:"",name:"pivot",required:!0,type:{name:"Pivot"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/pivot/pivot-examples/drill-tree-table/designers.tsx#PrimaryColumnTitle"]={docgenInfo:PrimaryColumnTitle.__docgenInfo,name:"PrimaryColumnTitle",path:"stories/pivot/pivot-examples/drill-tree-table/designers.tsx#PrimaryColumnTitle"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__(33),__webpack_require__(143),__webpack_require__(65),__webpack_require__(102),__webpack_require__(741),__webpack_require__(48),__webpack_require__(2190),__webpack_require__(19),__webpack_require__(66);var _dec,_dec2,_dec3,_dec4,_class,_descriptor,_descriptor2,_descriptor3,_descriptor4,_descriptor5,_descriptor6,_descriptor7,_dec5,_dec6,_class3,buildDrillTree=__webpack_require__(243),builders=__webpack_require__(924),dvt_aggregation_esm=__webpack_require__(238);function _initializerDefineProperty(target,property,descriptor,context){descriptor&&Object.defineProperty(target,property,{enumerable:descriptor.enumerable,configurable:descriptor.configurable,writable:descriptor.writable,value:descriptor.initializer?descriptor.initializer.call(context):void 0})}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}function _applyDecoratedDescriptor(target,property,decorators,descriptor,context){var desc={};return Object.keys(descriptor).forEach((function(key){desc[key]=descriptor[key]})),desc.enumerable=!!desc.enumerable,desc.configurable=!!desc.configurable,("value"in desc||desc.initializer)&&(desc.writable=!0),desc=decorators.slice().reverse().reduce((function(desc,decorator){return decorator(target,property,desc)||desc}),desc),context&&void 0!==desc.initializer&&(desc.value=desc.initializer?desc.initializer.call(context):void 0,desc.initializer=void 0),void 0===desc.initializer&&(Object.defineProperty(target,property,desc),desc=null),desc}var models_Pivot=(_dec=mobx_module.n.ref,_dec2=Object(mobx_module.g)({keepAlive:!0}),_dec3=Object(mobx_module.g)({keepAlive:!0}),_dec4=Object(mobx_module.g)({keepAlive:!0}),_descriptor=_applyDecoratedDescriptor((_class=function(){function Pivot(){var input=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};_classCallCheck(this,Pivot),_initializerDefineProperty(this,"isLoading",_descriptor,this),_initializerDefineProperty(this,"data",_descriptor2,this),_initializerDefineProperty(this,"dimCodes",_descriptor3,this),_initializerDefineProperty(this,"allIndicators",_descriptor4,this),_initializerDefineProperty(this,"allDimensions",_descriptor5,this),_initializerDefineProperty(this,"filters",_descriptor6,this),_initializerDefineProperty(this,"indCodes",_descriptor7,this),Object.assign(this,input),null==this.indCodes&&(this.indCodes=this.allIndicators.map((function(ind){return ind.code}))),null==this.filters&&(this.filters=Object.fromEntries(this.dimCodes.map((function(dimCode){return[dimCode,[]]}))))}return _createClass(Pivot,[{key:"filter",value:function filter(dimCode,value,checked){if(checked)this.filters[dimCode].push(value);else{var values=this.filters[dimCode];values.splice(values.indexOf(value),1)}}},{key:"changeDimCodes",value:function changeDimCodes(dimCodes,filters){this.dimCodes=dimCodes,filters&&(this.filters=filters)}},{key:"batchFilter",value:function batchFilter(dimCode,values,checked){if(checked){var pre=this.filters[dimCode];this.filters[dimCode]=Array.from(new Set(pre.concat(values)))}else{var removeSet=new Set(values);this.filters[dimCode]=this.filters[dimCode].filter((function(v){return!removeSet.has(v)}))}}},{key:"aggregate",get:function get(){return Object(dvt_aggregation_esm.a)(this.allIndicators)}},{key:"dimValues",get:function get(){var _this=this;return Object.fromEntries(this.allDimensions.map((function(dim){return[dim.code,lodash_default.a.uniq(_this.data.map((function(d){return d[dim.code]})))]})))}},{key:"filteredData",get:function get(){var _this2=this,checkedValuesMap=new Map(this.allDimensions.map((function(dim){return[dim.code,new Set(_this2.filters[dim.code])]})));return this.data.filter((function(d){return _this2.allDimensions.every((function(dim){return checkedValuesMap.get(dim.code).has(d[dim.code])}))}))}}]),Pivot}()).prototype,"isLoading",[mobx_module.n],{configurable:!0,enumerable:!0,writable:!0,initializer:function initializer(){return!0}}),_descriptor2=_applyDecoratedDescriptor(_class.prototype,"data",[_dec],{configurable:!0,enumerable:!0,writable:!0,initializer:function initializer(){return[]}}),_descriptor3=_applyDecoratedDescriptor(_class.prototype,"dimCodes",[mobx_module.n],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),_descriptor4=_applyDecoratedDescriptor(_class.prototype,"allIndicators",[mobx_module.n],{configurable:!0,enumerable:!0,writable:!0,initializer:function initializer(){return[]}}),_descriptor5=_applyDecoratedDescriptor(_class.prototype,"allDimensions",[mobx_module.n],{configurable:!0,enumerable:!0,writable:!0,initializer:function initializer(){return[]}}),_descriptor6=_applyDecoratedDescriptor(_class.prototype,"filters",[mobx_module.n],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),_descriptor7=_applyDecoratedDescriptor(_class.prototype,"indCodes",[mobx_module.n],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),_applyDecoratedDescriptor(_class.prototype,"aggregate",[_dec2],Object.getOwnPropertyDescriptor(_class.prototype,"aggregate"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"dimValues",[_dec3],Object.getOwnPropertyDescriptor(_class.prototype,"dimValues"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"filteredData",[_dec4],Object.getOwnPropertyDescriptor(_class.prototype,"filteredData"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"filter",[mobx_module.f],Object.getOwnPropertyDescriptor(_class.prototype,"filter"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"changeDimCodes",[mobx_module.f],Object.getOwnPropertyDescriptor(_class.prototype,"changeDimCodes"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"batchFilter",[mobx_module.f],Object.getOwnPropertyDescriptor(_class.prototype,"batchFilter"),_class.prototype),_class),models_PivotView=(_dec5=Object(mobx_module.g)({keepAlive:!0}),_dec6=Object(mobx_module.g)({keepAlive:!0}),_applyDecoratedDescriptor((_class3=function(){function PivotView(pivot){_classCallCheck(this,PivotView),this.pivot=void 0,this.pivot=pivot}return _createClass(PivotView,[{key:"leftTree",get:function get(){var pivot=this.pivot;return Object(buildDrillTree.a)(pivot.filteredData,pivot.dimCodes,{includeTopWrapper:!0,enforceExpandTotalNode:!1})}},{key:"topTree",get:function get(){return this.pivot.allIndicators.map((function(indicator){return{key:indicator.code,value:indicator.name,align:indicator.align,data:{indicator:indicator}}}))}},{key:"recordMap",get:function get(){var pivot=this.pivot;return Object(builders.a)({data:pivot.filteredData,codes:pivot.dimCodes,aggregate:pivot.aggregate})}}]),PivotView}()).prototype,"leftTree",[mobx_module.g],Object.getOwnPropertyDescriptor(_class3.prototype,"leftTree"),_class3.prototype),_applyDecoratedDescriptor(_class3.prototype,"topTree",[_dec5],Object.getOwnPropertyDescriptor(_class3.prototype,"topTree"),_class3.prototype),_applyDecoratedDescriptor(_class3.prototype,"recordMap",[_dec6],Object.getOwnPropertyDescriptor(_class3.prototype,"recordMap"),_class3.prototype),_class3);function drillable_tree_table_stories_slicedToArray(arr,i){return function drillable_tree_table_stories_arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function drillable_tree_table_stories_iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function drillable_tree_table_stories_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return drillable_tree_table_stories_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return drillable_tree_table_stories_arrayLikeToArray(o,minLen)}(arr,i)||function drillable_tree_table_stories_nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function drillable_tree_table_stories_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}mobx_module.h({enforceActions:"observed"});__webpack_exports__.default={parameters:{storySource:{source:"import { CrossTreeTable } from 'ali-react-table/pivot'\nimport _ from 'lodash'\nimport * as mobx from 'mobx'\nimport { action } from 'mobx'\nimport { observer } from 'mobx-react'\nimport React, { useEffect, useState } from 'react'\nimport { getIncomeData } from '../../../assets/cdn-data'\nimport { amount, lfl, ratio } from '../../../assets/format'\nimport { FusionStyles } from '../../../assets/fusion-style'\nimport { CheckedDimList, PrimaryColumnTitle } from './designers'\nimport { Pivot, PivotView } from './models'\n\nmobx.configure({ enforceActions: 'observed' })\n\nexport default { title: '交叉与透视 / 示例 / 支持下钻的树状表格' }\n\nconst ALL_DIMS = [\n  { code: 'planet', name: '子公司' },\n  { code: 'season', name: '季度' },\n  { code: 'month', name: '月份' },\n  { code: 'area', name: '门店' },\n  { code: 'one', name: '一级类目' },\n  { code: 'two', name: '二级类目' },\n  { code: 'three', name: '三级类目' },\n]\n\nconst INDICATORS = [\n  {\n    code: 'a',\n    name: '目标收入',\n    align: 'right' as const,\n    render: amount,\n    features: { sortable: true },\n    expression: 'SUM(a)',\n  },\n  {\n    code: 'b',\n    name: '实际收入',\n    render: amount,\n    align: 'right' as const,\n    features: { sortable: true },\n    expression: 'SUM(b)',\n  },\n  {\n    code: 'c',\n    name: '上月收入',\n    render: amount,\n    hidden: true,\n    align: 'right' as const,\n    features: { sortable: true },\n    expression: 'SUM(c)',\n  },\n  {\n    code: 'lfl',\n    name: '收入月环比',\n    render: lfl,\n    align: 'right' as const,\n    features: { sortable: true },\n    expression: '(a - c) / a',\n  },\n  {\n    code: 'd',\n    name: '重点商品收入',\n    render: amount,\n    align: 'right' as const,\n    features: { sortable: true },\n    expression: 'SUM(d)',\n  },\n  {\n    code: 'rate',\n    name: '重点商品收入占比',\n    render: ratio,\n    align: 'right' as const,\n    features: { sortable: true },\n    expression: 'd / b',\n  },\n]\n\nconst Inner = observer(() => {\n  const [pivot] = useState(() => {\n    return new Pivot({\n      allDimensions: ALL_DIMS,\n      allIndicators: INDICATORS,\n      dimCodes: ['planet', 'area', 'season'],\n    })\n  })\n\n  const [pivotView] = useState(() => new PivotView(pivot))\n\n  useEffect(() => {\n    getIncomeData().then(\n      action((data: any[]) => {\n        pivot.data = data\n        pivot.isLoading = false\n        pivot.filters = Object.fromEntries(\n          pivot.allDimensions.map((dim) => {\n            return [dim.code, _.uniq(data.map((d) => d[dim.code]))]\n          }),\n        )\n      }),\n    )\n  }, [])\n\n  return (\n    <div>\n      <FusionStyles />\n      <CheckedDimList pivot={pivot} />\n      <CrossTreeTable\n        style={{ marginTop: 8 }}\n        primaryColumn={{\n          lock: true,\n          name: '数据维度',\n          width: 180,\n          title: <PrimaryColumnTitle pivot={pivot} />,\n        }}\n        defaultColumnWidth={120}\n        isLoading={pivot.isLoading}\n        leftTree={pivotView.leftTree}\n        topTree={pivotView.topTree}\n        getValue={(leftNode, topNode) => {\n          const record = pivotView.recordMap.get(leftNode.key)\n          const ind = topNode.data.indicator\n          return record?.[ind.code]\n        }}\n        render={(value, leftNode, topNode) => {\n          const ind = topNode.data.indicator\n          return ind.render ? ind.render(value) : value\n        }}\n      />\n    </div>\n  )\n})\n\nexport function 基本示例() {\n  return <Inner />\n}\n",locationsMap:{"基本示例":{startLoc:{col:7,line:134},endLoc:{col:1,line:136},startBody:{col:7,line:134},endBody:{col:1,line:136}}}}},title:"交叉与透视 / 示例 / 支持下钻的树状表格"};var ALL_DIMS=[{code:"planet",name:"子公司"},{code:"season",name:"季度"},{code:"month",name:"月份"},{code:"area",name:"门店"},{code:"one",name:"一级类目"},{code:"two",name:"二级类目"},{code:"three",name:"三级类目"}],INDICATORS=[{code:"a",name:"目标收入",align:"right",render:format.a,features:{sortable:!0},expression:"SUM(a)"},{code:"b",name:"实际收入",render:format.a,align:"right",features:{sortable:!0},expression:"SUM(b)"},{code:"c",name:"上月收入",render:format.a,hidden:!0,align:"right",features:{sortable:!0},expression:"SUM(c)"},{code:"lfl",name:"收入月环比",render:format.b,align:"right",features:{sortable:!0},expression:"(a - c) / a"},{code:"d",name:"重点商品收入",render:format.a,align:"right",features:{sortable:!0},expression:"SUM(d)"},{code:"rate",name:"重点商品收入占比",render:format.c,align:"right",features:{sortable:!0},expression:"d / b"}],Inner=Object(mobxreact_esm.a)((function(){var pivot=drillable_tree_table_stories_slicedToArray(Object(react.useState)((function(){return new models_Pivot({allDimensions:ALL_DIMS,allIndicators:INDICATORS,dimCodes:["planet","area","season"]})})),1)[0],pivotView=drillable_tree_table_stories_slicedToArray(Object(react.useState)((function(){return new models_PivotView(pivot)})),1)[0];return Object(react.useEffect)((function(){Object(cdn_data.b)().then(Object(mobx_module.f)((function(data){pivot.data=data,pivot.isLoading=!1,pivot.filters=Object.fromEntries(pivot.allDimensions.map((function(dim){return[dim.code,lodash_default.a.uniq(data.map((function(d){return d[dim.code]})))]})))})))}),[]),react_default.a.createElement("div",null,react_default.a.createElement(fusion_style.a,null),react_default.a.createElement(CheckedDimList,{pivot:pivot}),react_default.a.createElement(cross_tree_table.a,{style:{marginTop:8},primaryColumn:{lock:!0,name:"数据维度",width:180,title:react_default.a.createElement(PrimaryColumnTitle,{pivot:pivot})},defaultColumnWidth:120,isLoading:pivot.isLoading,leftTree:pivotView.leftTree,topTree:pivotView.topTree,getValue:function getValue(leftNode,topNode){var record=pivotView.recordMap.get(leftNode.key),ind=topNode.data.indicator;return null==record?void 0:record[ind.code]},render:function render(value,leftNode,topNode){var ind=topNode.data.indicator;return ind.render?ind.render(value):value}}))})),drillable_tree_table_stories_=function 基本示例(){return react_default.a.createElement(Inner,null)};drillable_tree_table_stories_.displayName="基本示例",drillable_tree_table_stories_.parameters=Object.assign({storySource:{source:"function 基本示例() {\n  return <Inner />\n}"}},drillable_tree_table_stories_.parameters)},2199:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"单选",(function(){return select_stories_})),__webpack_require__.d(__webpack_exports__,"多选",(function(){return interactions_select_stories_})),__webpack_require__.d(__webpack_exports__,"树形选择",(function(){return examples_interactions_select_stories_}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(33),__webpack_require__(44),__webpack_require__(30),__webpack_require__(29),__webpack_require__(25),__webpack_require__(20),__webpack_require__(91),__webpack_require__(32),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(7),__webpack_require__(48),__webpack_require__(13),__webpack_require__(27),__webpack_require__(90),__webpack_require__(21),__webpack_require__(24);var es_radio=__webpack_require__(2222),es_checkbox=__webpack_require__(371),ali_react_table=__webpack_require__(73),applyTransforms=__webpack_require__(244),table=__webpack_require__(55),isLeafNode=(__webpack_require__(65),__webpack_require__(103),__webpack_require__(66),__webpack_require__(58));function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _calculateWrapperTree(tree,getNodeValue,value){var valueSet=new Set(value),rootWrapper={root:!0,children:[],parent:null,node:null},wrapperMap=new Map;return function dfs(parentWrapper,nodes,anyAncestorsChecked){var _step,_iterator=_createForOfIteratorHelper(nodes);try{for(_iterator.s();!(_step=_iterator.n()).done;){var _node=_step.value,exactChecked=valueSet.has(getNodeValue(_node));exactChecked&&(parentWrapper.anyDescendentsChecked=!0);var checked=anyAncestorsChecked||exactChecked,wrapper={parent:parentWrapper,node:_node,checked:checked,exactChecked:exactChecked,anyAncestorsChecked:anyAncestorsChecked,anyDescendentsChecked:checked,allDescendentsChecked:!0};if(wrapperMap.set(getNodeValue(_node),wrapper),parentWrapper.children.push(wrapper),!Object(isLeafNode.a)(_node)&&(wrapper.children=[],dfs(wrapper,_node.children,checked),wrapper.anyDescendentsChecked&&(parentWrapper.anyDescendentsChecked=!0),wrapper.allDescendentsChecked)){wrapper.checked=!0;var _step2,_iterator2=_createForOfIteratorHelper(wrapper.children);try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){_step2.value.anyAncestorsChecked=!0}}catch(err){_iterator2.e(err)}finally{_iterator2.f()}}wrapper.checked||(parentWrapper.allDescendentsChecked=!1)}}catch(err){_iterator.e(err)}finally{_iterator.f()}}(rootWrapper,tree,!1),{rootWrapper:rootWrapper,wrapperMap:wrapperMap}}function _getCleanValue(tree,getNodeValue,dirtyValue,checkedStrategy){var rootWrapper=_calculateWrapperTree(tree,getNodeValue,dirtyValue).rootWrapper,result=[];return function dfs(wrappers){var _step3,_iterator3=_createForOfIteratorHelper(wrappers);try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var wrapper=_step3.value;"all"===checkedStrategy?wrapper.checked&&result.push(getNodeValue(wrapper.node)):"parent"===checkedStrategy?wrapper.checked&&!wrapper.anyAncestorsChecked&&result.push(getNodeValue(wrapper.node)):wrapper.checked&&Object(isLeafNode.a)(wrapper)&&result.push(getNodeValue(wrapper.node)),wrapper.anyDescendentsChecked&&!Object(isLeafNode.a)(wrapper)&&dfs(wrapper.children)}}catch(err){_iterator3.e(err)}finally{_iterator3.f()}}(rootWrapper.children),result}function stabilizeArray(prevArray,nextArray){var prevSet=new Set(prevArray),nextSet=new Set(nextArray),existing=prevArray.filter((function(v){return nextSet.has(v)})),adding=nextArray.filter((function(v){return!prevSet.has(v)}));return existing.concat(adding)}function makeTreeDataHelper(_ref){var tree=_ref.tree,value=_ref.value,getNodeValue=_ref.getNodeValue,_ref$checkedStrategy=_ref.checkedStrategy,checkedStrategy=void 0===_ref$checkedStrategy?"parent":_ref$checkedStrategy,_ref$checkStrictly=_ref.checkStrictly,checkStrictly=void 0!==_ref$checkStrictly&&_ref$checkStrictly,_calculateWrapperTree3=_calculateWrapperTree(tree,getNodeValue,value),wrapperMap=_calculateWrapperTree3.wrapperMap,rootWrapper=_calculateWrapperTree3.rootWrapper;function isChecked(nodeValue){var wrapper=wrapperMap.get(nodeValue);return checkStrictly?wrapper.exactChecked:wrapper.checked}function getValueAfterToggle(nodeValue){var node=wrapperMap.get(nodeValue).node;if(checkStrictly)return isChecked(nodeValue)?value.filter((function(v){return v!==nodeValue})):value.concat([nodeValue]);var nextValue=value,wrapper=wrapperMap.get(getNodeValue(node));if(wrapper.checked){for(var current=wrapper;current.anyAncestorsChecked;){var siblings=current.parent.children.filter((function(sibling){return sibling!==wrapper&&!sibling.exactChecked}));nextValue=nextValue.concat(siblings.map((function(wrapper){return getNodeValue(wrapper.node)}))),current=current.parent}var removeSet=function _collectValueWhenUncheck(startWrapper){var set=new Set,wrapper=startWrapper;for(;wrapper.anyAncestorsChecked;)wrapper=wrapper.parent,set.add(getNodeValue(wrapper.node));return function dfs(wrapper){wrapper.checked&&set.add(getNodeValue(wrapper.node));!Object(isLeafNode.a)(wrapper)&&wrapper.anyDescendentsChecked&&wrapper.children.forEach(dfs)}(startWrapper),set}(wrapper);nextValue=nextValue.filter((function(v){return!removeSet.has(v)}))}else nextValue=nextValue.concat([getNodeValue(node)]);var cleanValue=_getCleanValue(tree,getNodeValue,nextValue,checkedStrategy);return stabilizeArray(value,cleanValue)}return{isIndeterminate:function isIndeterminate(nodeValue){if(checkStrictly)return!1;var wrapper=wrapperMap.get(nodeValue);return!wrapper.checked&&wrapper.anyDescendentsChecked},isChecked:isChecked,getValueAfterCheck:function getValueAfterCheck(nodeValue){return isChecked(nodeValue)?value:getValueAfterToggle(nodeValue)},getValueAfterUncheck:function getValueAfterUncheck(nodeValue){return isChecked(nodeValue)?getValueAfterToggle(nodeValue):value},getValueAfterToggle:getValueAfterToggle,getValueAfterCheckAll:function getValueAfterCheckAll(){if(checkStrictly)return function collectAllValue(wrappers){var result=[];return function dfs(wrappers){var _step4,_iterator4=_createForOfIteratorHelper(wrappers);try{for(_iterator4.s();!(_step4=_iterator4.n()).done;){var wrapper=_step4.value;result.push(getNodeValue(wrapper.node)),Object(isLeafNode.a)(wrapper)||dfs(wrapper.children)}}catch(err){_iterator4.e(err)}finally{_iterator4.f()}}(wrappers),result}(rootWrapper.children);var nextValue=rootWrapper.children.map((function(wrapper){return getNodeValue(wrapper.node)}));return _getCleanValue(tree,getNodeValue,nextValue,checkedStrategy)},getValueAfterUncheckAll:function getValueAfterUncheckAll(){return[]},getWrapper:function getWrapper(nodeValue){return wrapperMap.get(nodeValue)},getNode:function getNode(nodeValue){var _wrapperMap$get;return null===(_wrapperMap$get=wrapperMap.get(nodeValue))||void 0===_wrapperMap$get?void 0:_wrapperMap$get.node},getCleanValue:function getCleanValue(){return stabilizeArray(value,_getCleanValue(tree,getNodeValue,value,checkedStrategy))}}}try{makeTreeDataHelper.displayName="makeTreeDataHelper",makeTreeDataHelper.__docgenInfo={description:"树状数据工具包\n@param tree 输入的树\n@param value 选中的值\n@param getNodeValue 树节点 value 获取方法\n@param checkedStrategy 勾选策略（默认为 parent)\n@param checkStrictly 是否为严格模式，为 true 时表示父子节点状态不关联；默认为 false",displayName:"makeTreeDataHelper",props:{tree:{defaultValue:null,description:"",name:"tree",required:!0,type:{name:"N[]"}},getNodeValue:{defaultValue:null,description:"",name:"getNodeValue",required:!0,type:{name:"(node: N) => string"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"string[]"}},checkedStrategy:{defaultValue:{value:"parent"},description:"",name:"checkedStrategy",required:!1,type:{name:"enum",value:[{value:'"all"'},{value:'"parent"'},{value:'"child"'}]}},checkStrictly:{defaultValue:{value:!1},description:"",name:"checkStrictly",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/utils/makeTreeDataHelper.tsx#makeTreeDataHelper"]={docgenInfo:makeTreeDataHelper.__docgenInfo,name:"makeTreeDataHelper",path:"src/utils/makeTreeDataHelper.tsx#makeTreeDataHelper"})}catch(__react_docgen_typescript_loader_error){}var treeMode=__webpack_require__(523),react=__webpack_require__(0),react_default=__webpack_require__.n(react),fusion_style=__webpack_require__(63),ncov19_assets=__webpack_require__(18);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return select_stories_arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||select_stories_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||select_stories_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function select_stories_unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return select_stories_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?select_stories_arrayLikeToArray(o,minLen):void 0}}function select_stories_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var safeGetRowKey=ali_react_table.internals.safeGetRowKey,select_stories_=(__webpack_exports__.default={parameters:{storySource:{source:"import { Checkbox, Radio } from '@alifd/next'\nimport {\n  applyTransforms,\n  ArtColumn,\n  BaseTable,\n  BaseTableProps,\n  internals,\n  makeTreeDataHelper,\n  TableTransform,\n  useTreeModeTransform,\n} from 'ali-react-table'\nimport React, { useState } from 'react'\nimport { FusionStyles } from '../../assets/fusion-style'\nimport { cols, testProvColumns, useCityDataSource, useProvinceDataSource } from '../../assets/ncov19-assets'\n\nconst { safeGetRowKey } = internals\n\nexport default {\n  title: '示例 / 表格交互 / 单选与多选',\n}\n\nexport function 单选() {\n  const { isLoading, dataSource } = useProvinceDataSource()\n\n  const [value, onChange] = useState('')\n\n  const singleSelectColumn: ArtColumn = {\n    name: '',\n    width: 60,\n    align: 'center',\n    render(_: any, record: any) {\n      const key = record.provinceName\n      return <Radio checked={value === key} onChange={() => onChange(key)} />\n    },\n  }\n\n  const renderData = applyTransforms({\n    dataSource: dataSource.slice(0, 10),\n    columns: [singleSelectColumn, ...testProvColumns],\n  })\n\n  return (\n    <>\n      <FusionStyles />\n      <div style={{ lineHeight: '24px' }}>当前选中的 value 为 {value || '[空]'}</div>\n      <BaseTable\n        primaryKey=\"provinceName\"\n        isLoading={isLoading}\n        dataSource={renderData.dataSource}\n        columns={renderData.columns}\n        getRowProps={(record) => {\n          const key = record.provinceName\n          return {\n            style: {\n              backgroundColor: key === value ? '#f5f5f5' : undefined,\n              cursor: 'pointer',\n            },\n            onClick() {\n              onChange(key)\n            },\n          }\n        }}\n      />\n    </>\n  )\n}\n\nfunction makeMultiSelectTransform({\n  primaryKey,\n  value,\n  onChange,\n}: {\n  primaryKey: BaseTableProps['primaryKey']\n  value: { keys: string[]; lastKey: string }\n  onChange(next: { keys: string[]; lastKey: string }, keys: string[], action: 'check' | 'uncheck'): void\n}): TableTransform {\n  return ({ columns, dataSource }) => {\n    const checkedKeySet = new Set(value.keys)\n\n    const allKeys = dataSource.map((record, rowIndex) => {\n      return safeGetRowKey(primaryKey, record, rowIndex)\n    })\n\n    const isAllChecked = allKeys.length === value.keys.length\n\n    const title = (\n      <Checkbox\n        checked={isAllChecked}\n        indeterminate={0 < value.keys.length && value.keys.length < allKeys.length}\n        onChange={(_: any) => {\n          if (isAllChecked) {\n            onChange({ keys: [], lastKey: null }, value.keys, 'uncheck')\n          } else {\n            onChange({ keys: allKeys, lastKey: null }, allKeys, 'check')\n          }\n        }}\n      />\n    )\n\n    const checkboxColumn: ArtColumn = {\n      name: '是否选中',\n      title,\n      width: 60,\n      align: 'center',\n\n      render(_: any, record: any, rowIndex: number) {\n        const key = safeGetRowKey(primaryKey, record, rowIndex)\n        const checked = checkedKeySet.has(key)\n        return (\n          <Checkbox\n            checked={checked}\n            onChange={(_: any, e: React.MouseEvent) => {\n              onCheckboxChange(checked, key, e.nativeEvent.shiftKey)\n            }}\n          />\n        )\n      },\n    }\n\n    return { columns: [checkboxColumn].concat(columns), dataSource }\n\n    function onCheckboxChange(prevChecked: boolean, key: string, batch: boolean) {\n      let batchKeys = [key]\n\n      if (batch && value.lastKey) {\n        const lastIdx = allKeys.indexOf(value.lastKey)\n        const cntIdx = allKeys.indexOf(key)\n        const [start, end] = lastIdx < cntIdx ? [lastIdx, cntIdx] : [cntIdx, lastIdx]\n        batchKeys = allKeys.slice(start, end + 1)\n      }\n\n      if (prevChecked) {\n        const batchKeySet = new Set(batchKeys)\n        onChange(\n          {\n            keys: value.keys.filter((v) => !batchKeySet.has(v)),\n            lastKey: key,\n          },\n          batchKeys,\n          'uncheck',\n        )\n      } else {\n        onChange(\n          {\n            keys: value.keys.concat(batchKeys.filter((k) => !checkedKeySet.has(k))),\n            lastKey: key,\n          },\n          batchKeys,\n          'check',\n        )\n      }\n    }\n  }\n}\n\nexport function 多选() {\n  const [value, onChange] = useState({ keys: [] as string[], lastKey: '' })\n\n  const { isLoading, dataSource } = useProvinceDataSource()\n\n  const renderData = applyTransforms(\n    { dataSource: dataSource.slice(0, 10), columns: testProvColumns },\n    makeMultiSelectTransform({ primaryKey: 'provinceName', value, onChange }),\n  )\n\n  return (\n    <>\n      <FusionStyles />\n      <div style={{ lineHeight: '24px' }}>交互提示：按住 shift 键来来批量选中多行</div>\n      <div style={{ lineHeight: '24px' }}>当前选中的 value 为 {value.keys.join(',') || '[空]'}</div>\n      <BaseTable\n        primaryKey=\"provinceName\"\n        isLoading={isLoading}\n        dataSource={renderData.dataSource}\n        columns={renderData.columns}\n      />\n    </>\n  )\n}\n\ntype CheckedStrategy = 'all' | 'parent' | 'child'\n\nfunction makeTreeSelectTransform({\n  checkedStrategy,\n  value,\n  onChange,\n  rootKey,\n  primaryKey,\n  checkStrictly,\n  checkboxColumn,\n  tree,\n}: {\n  value: string[]\n  onChange(nextValue: string[]): void\n  tree: any[]\n  rootKey?: string\n  checkedStrategy?: CheckedStrategy\n  checkStrictly?: boolean\n  primaryKey: string\n  checkboxColumn?: Partial<ArtColumn>\n}): TableTransform {\n  return ({ dataSource, columns }) => {\n    const treeDataHelper = makeTreeDataHelper<any>({\n      tree: rootKey != null ? [{ [primaryKey]: rootKey, children: tree }] : tree,\n      getNodeValue: (node) => node[primaryKey],\n      value,\n      checkedStrategy,\n      checkStrictly,\n    })\n\n    const makeCheckbox = (key: string) => (\n      <Checkbox\n        checked={treeDataHelper.isChecked(key)}\n        indeterminate={treeDataHelper.isIndeterminate(key)}\n        onChange={(_, e) => {\n          e.stopPropagation()\n          onChange(treeDataHelper.getValueAfterToggle(key))\n        }}\n      />\n    )\n\n    return {\n      dataSource,\n      columns: [\n        // 在左侧添加一列用于渲染 checkbox\n        {\n          name: '',\n          ...checkboxColumn,\n          title: rootKey != null ? makeCheckbox(rootKey) : undefined,\n          render(value, record) {\n            return makeCheckbox(record[primaryKey])\n          },\n        },\n        ...columns,\n      ],\n    }\n  }\n}\n\nexport function 树形选择() {\n  const [checkedKeys, setCheckedKeys] = useState<string[]>([])\n\n  const { dataSource: rawDataSource, isLoading } = useCityDataSource()\n\n  // 处理数据： 选取前 4 个省份，每个省份下选取 3 个城市\n  //  为每一行设置 name 作为展示名称；\n  //  为每一行数据设置 key，作为该行的主键；注意在相应的地方配置 primaryKey=\"key\"\n  const dataSource = rawDataSource.slice(0, 4).map((prov) => ({\n    ...prov,\n    name: prov.provinceName,\n    key: `prov:${prov.provinceName}`,\n    children: prov.children.slice(0, 3).map((city) => ({\n      ...city,\n      name: city.cityName,\n      key: `city:${city.cityName}`,\n    })),\n  }))\n\n  const columns = [{ name: '省份/城市', code: 'name', width: 160 }, ...cols.indCols, cols.updateTime]\n\n  const renderData = applyTransforms(\n    { dataSource, columns },\n    useTreeModeTransform({ primaryKey: 'key' }),\n    makeTreeSelectTransform({\n      // treeModeTransform 会对 dataSource 进行过滤，导致树不完整\n      // 这里要将 dataSource 传给 makeTreeSelectTransform，传递的树是完整的\n      tree: dataSource,\n      primaryKey: 'key',\n      value: checkedKeys,\n      onChange: setCheckedKeys,\n      checkboxColumn: { width: 48, lock: true },\n\n      // 可以省略 rootKey，此时将不会出现全选的 checkbox\n      rootKey: 'all',\n      // checkStrictly 可以设置为 true，此时父子节点的选中状态不再关联\n      checkStrictly: false,\n      // checkedStrategy 也可以设置为 all / child\n      checkedStrategy: 'parent',\n    }),\n  )\n\n  return (\n    <div>\n      <FusionStyles />\n      <p>\n        当前选中的 key 值：<code>{JSON.stringify(checkedKeys)}</code>\n      </p>\n      <BaseTable\n        primaryKey=\"key\"\n        isLoading={isLoading}\n        dataSource={renderData.dataSource}\n        columns={renderData.columns}\n      />\n    </div>\n  )\n}\n",locationsMap:{"单选":{startLoc:{col:7,line:22},endLoc:{col:1,line:66},startBody:{col:7,line:22},endBody:{col:1,line:66}},"多选":{startLoc:{col:7,line:156},endLoc:{col:1,line:179},startBody:{col:7,line:156},endBody:{col:1,line:179}},"树形选择":{startLoc:{col:7,line:240},endLoc:{col:1,line:296},startBody:{col:7,line:240},endBody:{col:1,line:296}}}}},title:"示例 / 表格交互 / 单选与多选"},function 单选(){var _useProvinceDataSourc=Object(ncov19_assets.e)(),isLoading=_useProvinceDataSourc.isLoading,dataSource=_useProvinceDataSourc.dataSource,_useState2=_slicedToArray(Object(react.useState)(""),2),value=_useState2[0],_onChange=_useState2[1],singleSelectColumn={name:"",width:60,align:"center",render:function render(_,record){var key=record.provinceName;return react_default.a.createElement(es_radio.a,{checked:value===key,onChange:function onChange(){return _onChange(key)}})}},renderData=Object(applyTransforms.a)({dataSource:dataSource.slice(0,10),columns:[singleSelectColumn].concat(_toConsumableArray(ncov19_assets.b))});return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement(fusion_style.a,null),react_default.a.createElement("div",{style:{lineHeight:"24px"}},"当前选中的 value 为 ",value||"[空]"),react_default.a.createElement(table.a,{primaryKey:"provinceName",isLoading:isLoading,dataSource:renderData.dataSource,columns:renderData.columns,getRowProps:function getRowProps(record){var key=record.provinceName;return{style:{backgroundColor:key===value?"#f5f5f5":void 0,cursor:"pointer"},onClick:function onClick(){_onChange(key)}}}}))});function makeMultiSelectTransform(_ref){var primaryKey=_ref.primaryKey,value=_ref.value,_onChange2=_ref.onChange;return function(_ref2){var columns=_ref2.columns,dataSource=_ref2.dataSource,checkedKeySet=new Set(value.keys),allKeys=dataSource.map((function(record,rowIndex){return safeGetRowKey(primaryKey,record,rowIndex)})),isAllChecked=allKeys.length===value.keys.length;return{columns:[{name:"是否选中",title:react_default.a.createElement(es_checkbox.a,{checked:isAllChecked,indeterminate:0<value.keys.length&&value.keys.length<allKeys.length,onChange:function onChange(_){isAllChecked?_onChange2({keys:[],lastKey:null},value.keys,"uncheck"):_onChange2({keys:allKeys,lastKey:null},allKeys,"check")}}),width:60,align:"center",render:function render(_,record,rowIndex){var key=safeGetRowKey(primaryKey,record,rowIndex),checked=checkedKeySet.has(key);return react_default.a.createElement(es_checkbox.a,{checked:checked,onChange:function onChange(_,e){!function onCheckboxChange(prevChecked,key,batch){var batchKeys=[key];if(batch&&value.lastKey){var lastIdx=allKeys.indexOf(value.lastKey),cntIdx=allKeys.indexOf(key),_ref4=_slicedToArray(lastIdx<cntIdx?[lastIdx,cntIdx]:[cntIdx,lastIdx],2),start=_ref4[0],end=_ref4[1];batchKeys=allKeys.slice(start,end+1)}if(prevChecked){var batchKeySet=new Set(batchKeys);_onChange2({keys:value.keys.filter((function(v){return!batchKeySet.has(v)})),lastKey:key},batchKeys,"uncheck")}else _onChange2({keys:value.keys.concat(batchKeys.filter((function(k){return!checkedKeySet.has(k)}))),lastKey:key},batchKeys,"check")}(checked,key,e.nativeEvent.shiftKey)}})}}].concat(columns),dataSource:dataSource}}}var interactions_select_stories_=function 多选(){var _useState4=_slicedToArray(Object(react.useState)({keys:[],lastKey:""}),2),value=_useState4[0],onChange=_useState4[1],_useProvinceDataSourc2=Object(ncov19_assets.e)(),isLoading=_useProvinceDataSourc2.isLoading,dataSource=_useProvinceDataSourc2.dataSource,renderData=Object(applyTransforms.a)({dataSource:dataSource.slice(0,10),columns:ncov19_assets.b},makeMultiSelectTransform({primaryKey:"provinceName",value:value,onChange:onChange}));return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement(fusion_style.a,null),react_default.a.createElement("div",{style:{lineHeight:"24px"}},"交互提示：按住 shift 键来来批量选中多行"),react_default.a.createElement("div",{style:{lineHeight:"24px"}},"当前选中的 value 为 ",value.keys.join(",")||"[空]"),react_default.a.createElement(table.a,{primaryKey:"provinceName",isLoading:isLoading,dataSource:renderData.dataSource,columns:renderData.columns}))};var examples_interactions_select_stories_=function 树形选择(){var _useState6=_slicedToArray(Object(react.useState)([]),2),checkedKeys=_useState6[0],setCheckedKeys=_useState6[1],_useCityDataSource=Object(ncov19_assets.d)(),rawDataSource=_useCityDataSource.dataSource,isLoading=_useCityDataSource.isLoading,dataSource=rawDataSource.slice(0,4).map((function(prov){return Object.assign({},prov,{name:prov.provinceName,key:"prov:".concat(prov.provinceName),children:prov.children.slice(0,3).map((function(city){return Object.assign({},city,{name:city.cityName,key:"city:".concat(city.cityName)})}))})})),columns=[{name:"省份/城市",code:"name",width:160}].concat(_toConsumableArray(ncov19_assets.a.indCols),[ncov19_assets.a.updateTime]),renderData=Object(applyTransforms.a)({dataSource:dataSource,columns:columns},Object(treeMode.b)({primaryKey:"key"}),function makeTreeSelectTransform(_ref5){var checkedStrategy=_ref5.checkedStrategy,value=_ref5.value,_onChange3=_ref5.onChange,rootKey=_ref5.rootKey,primaryKey=_ref5.primaryKey,checkStrictly=_ref5.checkStrictly,checkboxColumn=_ref5.checkboxColumn,tree=_ref5.tree;return function(_ref6){var _ref7,dataSource=_ref6.dataSource,columns=_ref6.columns,treeDataHelper=makeTreeDataHelper({tree:null!=rootKey?[(_ref7={},_defineProperty(_ref7,primaryKey,rootKey),_defineProperty(_ref7,"children",tree),_ref7)]:tree,getNodeValue:function getNodeValue(node){return node[primaryKey]},value:value,checkedStrategy:checkedStrategy,checkStrictly:checkStrictly}),makeCheckbox=function makeCheckbox(key){return react_default.a.createElement(es_checkbox.a,{checked:treeDataHelper.isChecked(key),indeterminate:treeDataHelper.isIndeterminate(key),onChange:function onChange(_,e){e.stopPropagation(),_onChange3(treeDataHelper.getValueAfterToggle(key))}})};return{dataSource:dataSource,columns:[Object.assign({name:""},checkboxColumn,{title:null!=rootKey?makeCheckbox(rootKey):void 0,render:function render(value,record){return makeCheckbox(record[primaryKey])}})].concat(_toConsumableArray(columns))}}}({tree:dataSource,primaryKey:"key",value:checkedKeys,onChange:setCheckedKeys,checkboxColumn:{width:48,lock:!0},rootKey:"all",checkStrictly:!1,checkedStrategy:"parent"}));return react_default.a.createElement("div",null,react_default.a.createElement(fusion_style.a,null),react_default.a.createElement("p",null,"当前选中的 key 值：",react_default.a.createElement("code",null,JSON.stringify(checkedKeys))),react_default.a.createElement(table.a,{primaryKey:"key",isLoading:isLoading,dataSource:renderData.dataSource,columns:renderData.columns}))};examples_interactions_select_stories_.displayName="树形选择",select_stories_.parameters=Object.assign({storySource:{source:"function 单选() {\n  const { isLoading, dataSource } = useProvinceDataSource()\n\n  const [value, onChange] = useState('')\n\n  const singleSelectColumn: ArtColumn = {\n    name: '',\n    width: 60,\n    align: 'center',\n    render(_: any, record: any) {\n      const key = record.provinceName\n      return <Radio checked={value === key} onChange={() => onChange(key)} />\n    },\n  }\n\n  const renderData = applyTransforms({\n    dataSource: dataSource.slice(0, 10),\n    columns: [singleSelectColumn, ...testProvColumns],\n  })\n\n  return (\n    <>\n      <FusionStyles />\n      <div style={{ lineHeight: '24px' }}>当前选中的 value 为 {value || '[空]'}</div>\n      <BaseTable\n        primaryKey=\"provinceName\"\n        isLoading={isLoading}\n        dataSource={renderData.dataSource}\n        columns={renderData.columns}\n        getRowProps={(record) => {\n          const key = record.provinceName\n          return {\n            style: {\n              backgroundColor: key === value ? '#f5f5f5' : undefined,\n              cursor: 'pointer',\n            },\n            onClick() {\n              onChange(key)\n            },\n          }\n        }}\n      />\n    </>\n  )\n}"}},select_stories_.parameters),interactions_select_stories_.parameters=Object.assign({storySource:{source:"function 多选() {\n  const [value, onChange] = useState({ keys: [] as string[], lastKey: '' })\n\n  const { isLoading, dataSource } = useProvinceDataSource()\n\n  const renderData = applyTransforms(\n    { dataSource: dataSource.slice(0, 10), columns: testProvColumns },\n    makeMultiSelectTransform({ primaryKey: 'provinceName', value, onChange }),\n  )\n\n  return (\n    <>\n      <FusionStyles />\n      <div style={{ lineHeight: '24px' }}>交互提示：按住 shift 键来来批量选中多行</div>\n      <div style={{ lineHeight: '24px' }}>当前选中的 value 为 {value.keys.join(',') || '[空]'}</div>\n      <BaseTable\n        primaryKey=\"provinceName\"\n        isLoading={isLoading}\n        dataSource={renderData.dataSource}\n        columns={renderData.columns}\n      />\n    </>\n  )\n}"}},interactions_select_stories_.parameters),examples_interactions_select_stories_.parameters=Object.assign({storySource:{source:"function 树形选择() {\n  const [checkedKeys, setCheckedKeys] = useState<string[]>([])\n\n  const { dataSource: rawDataSource, isLoading } = useCityDataSource()\n\n  // 处理数据： 选取前 4 个省份，每个省份下选取 3 个城市\n  //  为每一行设置 name 作为展示名称；\n  //  为每一行数据设置 key，作为该行的主键；注意在相应的地方配置 primaryKey=\"key\"\n  const dataSource = rawDataSource.slice(0, 4).map((prov) => ({\n    ...prov,\n    name: prov.provinceName,\n    key: `prov:${prov.provinceName}`,\n    children: prov.children.slice(0, 3).map((city) => ({\n      ...city,\n      name: city.cityName,\n      key: `city:${city.cityName}`,\n    })),\n  }))\n\n  const columns = [{ name: '省份/城市', code: 'name', width: 160 }, ...cols.indCols, cols.updateTime]\n\n  const renderData = applyTransforms(\n    { dataSource, columns },\n    useTreeModeTransform({ primaryKey: 'key' }),\n    makeTreeSelectTransform({\n      // treeModeTransform 会对 dataSource 进行过滤，导致树不完整\n      // 这里要将 dataSource 传给 makeTreeSelectTransform，传递的树是完整的\n      tree: dataSource,\n      primaryKey: 'key',\n      value: checkedKeys,\n      onChange: setCheckedKeys,\n      checkboxColumn: { width: 48, lock: true },\n\n      // 可以省略 rootKey，此时将不会出现全选的 checkbox\n      rootKey: 'all',\n      // checkStrictly 可以设置为 true，此时父子节点的选中状态不再关联\n      checkStrictly: false,\n      // checkedStrategy 也可以设置为 all / child\n      checkedStrategy: 'parent',\n    }),\n  )\n\n  return (\n    <div>\n      <FusionStyles />\n      <p>\n        当前选中的 key 值：<code>{JSON.stringify(checkedKeys)}</code>\n      </p>\n      <BaseTable\n        primaryKey=\"key\"\n        isLoading={isLoading}\n        dataSource={renderData.dataSource}\n        columns={renderData.columns}\n      />\n    </div>\n  )\n}"}},examples_interactions_select_stories_.parameters)},2200:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19);var react=__webpack_require__(0),react_default=__webpack_require__.n(react),esm=__webpack_require__(2),blocks=__webpack_require__(9),buildDrillTree=(__webpack_require__(16),__webpack_require__(26),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(32),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24),__webpack_require__(243)),builders=__webpack_require__(924),cross_table=__webpack_require__(929),convert_utils=__webpack_require__(925),dvt_aggregation_esm=__webpack_require__(238),main=__webpack_require__(202),main_default=__webpack_require__.n(main),MinimumPivotTableDesigner=__webpack_require__(363);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function DrillTreeIllustration(){var dwdData=[{subs:"上海子公司",shop:"上海大宁店",month:"2022-01",valueA:782,valueB:566},{subs:"上海子公司",shop:"上海大宁店",month:"2022-02",valueA:856,valueB:403},{subs:"上海子公司",shop:"上海大宁店",month:"2022-03",valueA:886,valueB:555},{subs:"上海子公司",shop:"上海大宁店",month:"2022-04",valueA:555,valueB:444},{subs:"上海子公司",shop:"上海大宁店",month:"2022-05",valueA:444,valueB:333},{subs:"上海子公司",shop:"上海曹家渡店",month:"2022-01",valueA:922,valueB:778},{subs:"上海子公司",shop:"上海曹家渡店",month:"2022-02",valueA:888,valueB:887},{subs:"上海子公司",shop:"上海曹家渡店",month:"2022-03",valueA:879,valueB:870},{subs:"上海子公司",shop:"上海曹家渡店",month:"2022-04",valueA:800,valueB:723},{subs:"上海子公司",shop:"上海曹家渡店",month:"2022-05",valueA:813,valueB:789},{subs:"浙江子公司",shop:"亲橙里",month:"2022-01",valueA:500,valueB:463},{subs:"浙江子公司",shop:"亲橙里",month:"2022-02",valueA:833,valueB:456},{subs:"浙江子公司",shop:"亲橙里",month:"2022-03",valueA:821,valueB:442},{subs:"浙江子公司",shop:"亲橙里",month:"2022-04",valueA:834,valueB:456},{subs:"浙江子公司",shop:"亲橙里",month:"2022-05",valueA:803,valueB:700}],drillTree=Object(buildDrillTree.a)(dwdData,["subs","shop","month"]);return react_default.a.createElement("div",{style:{border:"1px dashed #ccc",padding:8}},react_default.a.createElement("div",{style:{fontSize:14,lineHeight:2}},"1. 输入数据（输入格式为一个对象的数组）"),react_default.a.createElement(main_default.a,{name:"输入数据",src:dwdData,collapsed:0,enableClipboard:!1,displayObjectSize:!1,displayDataTypes:!1}),react_default.a.createElement("div",{style:{marginTop:16,fontSize:14,lineHeight:2}},react_default.a.createElement("div",null,"2. 处理过程"),react_default.a.createElement("code",null,"buildDrillTree(data, ['subs', 'shop', 'month'])")),react_default.a.createElement("div",{style:{marginTop:16,fontSize:14,lineHeight:2}},"3. 输出一个 DrillNode 的数组"),react_default.a.createElement(main_default.a,{name:"输出结果",src:drillTree,collapsed:0,enableClipboard:!1,displayObjectSize:!1,displayDataTypes:!1}))}function SimpleCrossTable(){var data=[{subs:"上海子公司",shop:"上海大宁店",season:"一季度",month:"2022-01",valueA:782,valueB:566},{subs:"上海子公司",shop:"上海大宁店",season:"一季度",month:"2022-02",valueA:856,valueB:403},{subs:"上海子公司",shop:"上海大宁店",season:"一季度",month:"2022-03",valueA:886,valueB:555},{subs:"上海子公司",shop:"上海大宁店",season:"二季度",month:"2022-04",valueA:555,valueB:444},{subs:"上海子公司",shop:"上海大宁店",season:"二季度",month:"2022-05",valueA:444,valueB:333},{subs:"上海子公司",shop:"上海曹家渡店",season:"一季度",month:"2022-01",valueA:922,valueB:778},{subs:"上海子公司",shop:"上海曹家渡店",season:"一季度",month:"2022-02",valueA:888,valueB:887},{subs:"上海子公司",shop:"上海曹家渡店",season:"一季度",month:"2022-03",valueA:879,valueB:870},{subs:"上海子公司",shop:"上海曹家渡店",season:"二季度",month:"2022-04",valueA:800,valueB:723},{subs:"上海子公司",shop:"上海曹家渡店",season:"二季度",month:"2022-05",valueA:813,valueB:789},{subs:"浙江子公司",shop:"亲橙里",season:"一季度",month:"2022-01",valueA:500,valueB:463},{subs:"浙江子公司",shop:"亲橙里",season:"一季度",month:"2022-02",valueA:833,valueB:456},{subs:"浙江子公司",shop:"亲橙里",season:"一季度",month:"2022-03",valueA:821,valueB:442},{subs:"浙江子公司",shop:"亲橙里",season:"二季度",month:"2022-04",valueA:834,valueB:456},{subs:"浙江子公司",shop:"亲橙里",season:"二季度",month:"2022-05",valueA:803,valueB:700}],leftDims=[{code:"subs",name:"子公司"},{code:"shop",name:"门店"}],leftCodes=leftDims.map((function(dim){return dim.code})),topCodes=[{code:"season",name:"季度"},{code:"month",name:"月份"}].map((function(dim){return dim.code})),leftTree=Object(buildDrillTree.a)(data,leftCodes),topTree=Object(buildDrillTree.a)(data,topCodes),matrix=Object(builders.b)({data:data,leftCodes:leftCodes,topCodes:topCodes});return react_default.a.createElement(cross_table.a,{defaultColumnWidth:100,leftTree:leftTree,topTree:topTree,leftMetaColumns:leftDims,getValue:function getValue(leftNode,topNode){return matrix.get(leftNode.key).get(topNode.key).valueA}})}function SimplePivotTable(){var data=[{subs:"上海子公司",shop:"上海大宁店",season:"一季度",month:"2022-01",valueA:782,valueB:566},{subs:"上海子公司",shop:"上海大宁店",season:"一季度",month:"2022-02",valueA:856,valueB:403},{subs:"上海子公司",shop:"上海大宁店",season:"一季度",month:"2022-03",valueA:886,valueB:555},{subs:"上海子公司",shop:"上海大宁店",season:"二季度",month:"2022-04",valueA:555,valueB:444},{subs:"上海子公司",shop:"上海大宁店",season:"二季度",month:"2022-05",valueA:444,valueB:333},{subs:"上海子公司",shop:"上海曹家渡店",season:"一季度",month:"2022-01",valueA:922,valueB:778},{subs:"上海子公司",shop:"上海曹家渡店",season:"一季度",month:"2022-02",valueA:888,valueB:887},{subs:"上海子公司",shop:"上海曹家渡店",season:"一季度",month:"2022-03",valueA:879,valueB:870},{subs:"上海子公司",shop:"上海曹家渡店",season:"二季度",month:"2022-04",valueA:800,valueB:723},{subs:"上海子公司",shop:"上海曹家渡店",season:"二季度",month:"2022-05",valueA:813,valueB:789},{subs:"浙江子公司",shop:"亲橙里",season:"一季度",month:"2022-01",valueA:500,valueB:463},{subs:"浙江子公司",shop:"亲橙里",season:"一季度",month:"2022-02",valueA:833,valueB:456},{subs:"浙江子公司",shop:"亲橙里",season:"一季度",month:"2022-03",valueA:821,valueB:442},{subs:"浙江子公司",shop:"亲橙里",season:"二季度",month:"2022-04",valueA:834,valueB:456},{subs:"浙江子公司",shop:"亲橙里",season:"二季度",month:"2022-05",valueA:803,valueB:700}],indicators=[{code:"valueA",name:"指标A",width:100,align:"right",expression:"SUM(valueA)"},{code:"valueB",name:"指标B",width:100,align:"right",expression:"SUM(valueB)"}],_useState2=_slicedToArray(Object(react.useState)("top"),2),indicatorSide=_useState2[0],onChangeIndicatorSide=_useState2[1],_useState4=_slicedToArray(Object(react.useState)(["season"]),2),topCodes=_useState4[0],onChangeTopCodes=_useState4[1],_useState6=_slicedToArray(Object(react.useState)(["subs","shop"]),2),leftCodes=_useState6[0],onChangeLeftCodes=_useState6[1],_useState8=_slicedToArray(Object(react.useState)(!0),2),showSubtotal=_useState8[0],onChangeShowSubtotal=_useState8[1];function generateSubtotalNode(drillNode){return{position:"start",value:0===drillNode.path.length?"总计":"小计"}}var leftDrillTree=Object(buildDrillTree.a)(data,leftCodes,{includeTopWrapper:!0}),leftTreeRoot=_slicedToArray(Object(convert_utils.a)(leftDrillTree,{indicators:"left"===indicatorSide?indicators:null,generateSubtotalNode:showSubtotal?generateSubtotalNode:null}),1)[0],topDrillTree=Object(buildDrillTree.a)(data,topCodes,{includeTopWrapper:!0}),topTreeRoot=_slicedToArray(Object(convert_utils.a)(topDrillTree,{indicators:"top"===indicatorSide?indicators:null,generateSubtotalNode:showSubtotal?generateSubtotalNode:null}),1)[0],aggregate=Object(dvt_aggregation_esm.a)(indicators),matrix=Object(builders.b)({data:data,leftCodes:leftCodes,topCodes:topCodes,aggregate:aggregate});return react_default.a.createElement("div",null,react_default.a.createElement(MinimumPivotTableDesigner.a,{showSubtotal:showSubtotal,onChangeShowSubtotal:onChangeShowSubtotal,dimensions:[{code:"subs",name:"子公司"},{code:"shop",name:"门店"},{code:"season",name:"季度"},{code:"month",name:"月份"}],leftCodes:leftCodes,onChangeLeftCodes:onChangeLeftCodes,topCodes:topCodes,onChangeTopCodes:onChangeTopCodes,indicatorSide:indicatorSide,onChangeIndicatorSide:onChangeIndicatorSide}),react_default.a.createElement(cross_table.a,{defaultColumnWidth:100,leftTree:leftTreeRoot.children,leftTotalNode:leftTreeRoot,topTree:topTreeRoot.children,topTotalNode:topTreeRoot,getValue:function getValue(leftNode,topNode){var _leftNode$data$indica,_leftNode$data,_topNode$data,record=matrix.get(leftNode.data.dataKey).get(topNode.data.dataKey);return null==record?"-":record[(null!==(_leftNode$data$indica=null===(_leftNode$data=leftNode.data)||void 0===_leftNode$data?void 0:_leftNode$data.indicator)&&void 0!==_leftNode$data$indica?_leftNode$data$indica:null===(_topNode$data=topNode.data)||void 0===_topNode$data?void 0:_topNode$data.indicator).code]}}))}function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}DrillTreeIllustration.displayName="DrillTreeIllustration",SimpleCrossTable.displayName="SimpleCrossTable",SimplePivotTable.displayName="SimplePivotTable";var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"交叉与透视 / 透视工具文档",mdxType:"Meta"}),Object(esm.mdx)("h1",{id:"透视工具"},"透视工具"),Object(esm.mdx)("p",null,"注意：",Object(esm.mdx)("strong",{parentName:"p"},"透视工具 API 尚不稳定，请谨慎使用。")),Object(esm.mdx)("p",null,"透视能力增强相关工具。包括了以下方法和相关的 TypeScript 类型定义，通过这些工具你可以快速地从明细数据中构建并定制交叉表/透视表。"),Object(esm.mdx)("ul",null,Object(esm.mdx)("li",{parentName:"ul"},Object(esm.mdx)("inlineCode",{parentName:"li"},"buildDrillTree"),": 从明细数据中构建下钻树"),Object(esm.mdx)("li",{parentName:"ul"},Object(esm.mdx)("inlineCode",{parentName:"li"},"buildRecordMatrix"),": 从明细数据中构建 RecordMatrix"),Object(esm.mdx)("li",{parentName:"ul"},Object(esm.mdx)("inlineCode",{parentName:"li"},"convertDrillTreeToCrossTree"),": 将下钻树转换为 CrossTable 的输入")),Object(esm.mdx)("h2",{id:"数据结构下钻树"},"数据结构——下钻树"),Object(esm.mdx)("p",null,"下钻树用来表示数据按照一定的维度序列被不断分组后形成的树结构。ali-react-table 提供了 ",Object(esm.mdx)("inlineCode",{parentName:"p"},"buildDrillTree")," 方法来从数据中构建下钻树。"),Object(esm.mdx)("h3",{id:"下钻树构建示例"},"下钻树构建示例"),Object(esm.mdx)(DrillTreeIllustration,{mdxType:"DrillTreeIllustration"}),Object(esm.mdx)("h3",{id:"下钻树节点结构"},"下钻树节点结构"),Object(esm.mdx)("p",null,"下钻树中的树节点 ",Object(esm.mdx)("inlineCode",{parentName:"p"},"DrillNode")," 结构如下："),Object(esm.mdx)("pre",null,Object(esm.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"interface DrillNode {\n  key: string\n  value: string\n  path: string[]\n  children?: DrillNode[]\n  hasChild?: boolean\n}\n")),Object(esm.mdx)("ul",null,Object(esm.mdx)("li",{parentName:"ul"},Object(esm.mdx)("inlineCode",{parentName:"li"},"key")," 用于唯一标记该节点"),Object(esm.mdx)("li",{parentName:"ul"},Object(esm.mdx)("inlineCode",{parentName:"li"},"value")," 字段表示该节点的值"),Object(esm.mdx)("li",{parentName:"ul"},Object(esm.mdx)("inlineCode",{parentName:"li"},"path")," 表示下钻树中到当前节点路径上的值的序列"),Object(esm.mdx)("li",{parentName:"ul"},Object(esm.mdx)("inlineCode",{parentName:"li"},"children")," 记录了当前节点的根节点"),Object(esm.mdx)("li",{parentName:"ul"},Object(esm.mdx)("inlineCode",{parentName:"li"},"hasChild")," 用于标记当前是否有子节点")),Object(esm.mdx)("h3",{id:"builddrilltree"},"buildDrillTree"),Object(esm.mdx)("p",null,"在构建下钻树时，",Object(esm.mdx)("inlineCode",{parentName:"p"},"buildDrillTree(data, codes, options?)")," 的 options 参数可以调整默认的构建配置："),Object(esm.mdx)("ul",null,Object(esm.mdx)("li",{parentName:"ul"},Object(esm.mdx)("inlineCode",{parentName:"li"},"options.encode"),Object(esm.mdx)("ul",{parentName:"li"},Object(esm.mdx)("li",{parentName:"ul"},"默认情况下，buildDrillTree 会使用默认的 ",Object(esm.mdx)("inlineCode",{parentName:"li"},"simpleEncode")," 来编码 ",Object(esm.mdx)("inlineCode",{parentName:"li"},"path")," 来生成 key 字段"),Object(esm.mdx)("li",{parentName:"ul"},"你也可以通过 ",Object(esm.mdx)("inlineCode",{parentName:"li"},"options.encode")," 提供一个自定义的编码函数用于自定义 key 的生成方式。"))),Object(esm.mdx)("li",{parentName:"ul"},Object(esm.mdx)("inlineCode",{parentName:"li"},"options.includeTopWrapper"),Object(esm.mdx)("ul",{parentName:"li"},Object(esm.mdx)("li",{parentName:"ul"},"默认情况下，buildDrillTree 不会生成「总计」节点。"),Object(esm.mdx)("li",{parentName:"ul"},"当 ",Object(esm.mdx)("inlineCode",{parentName:"li"},"options.includeTopWrapper = true")," 时，buildDrillTree 返回的结果的第一层将为「总计」节点"),Object(esm.mdx)("li",{parentName:"ul"},"注意 buildDrillTree 的返回结果总是一个数组，即使数组中只有一个「总计」节点"))),Object(esm.mdx)("li",{parentName:"ul"},Object(esm.mdx)("inlineCode",{parentName:"li"},"options.topValue"),"：用于指定「总计」节点的 ",Object(esm.mdx)("inlineCode",{parentName:"li"},"value"),"，默认为 ",Object(esm.mdx)("inlineCode",{parentName:"li"},'"总计"')),Object(esm.mdx)("li",{parentName:"ul"},Object(esm.mdx)("inlineCode",{parentName:"li"},"options.isExpand"),"：根据节点的 key 判断一个节点是否展开，没有展开的节点将不进行下钻；默认为 ",Object(esm.mdx)("inlineCode",{parentName:"li"},"(key: string) => true"))),Object(esm.mdx)("h3",{id:"optionsisexpand-与剪枝优化"},Object(esm.mdx)("inlineCode",{parentName:"h3"},"options.isExpand")," 与剪枝优化"),Object(esm.mdx)("p",null,"当数据量较大且维度序列较深时，buildDrillTree 会构建出一棵非常庞大的树，但后续使用时我们往往并不需要用到所有的节点，大部分节点在使用时都是被「折叠」的。isExpand 回调可以告诉 buildDrillTree 哪些节点被展开了，哪些节点是收拢的。当 ",Object(esm.mdx)("inlineCode",{parentName:"p"},"isExpand(key)")," 返回值为 false 时，buildDrillTree 将跳过当前节点的子节点的生成过程。"),Object(esm.mdx)("p",null,"在当前节点的子节点被跳过的时候，buildDrillTree 会为当前节点设置 ",Object(esm.mdx)("inlineCode",{parentName:"p"},"node.hasChild = true"),"。"),Object(esm.mdx)("h3",{id:"交叉表与下钻树"},"交叉表与下钻树"),Object(esm.mdx)("p",null,"交叉表左侧/上方的数据结构与下钻树非常类似："),Object(esm.mdx)("ul",null,Object(esm.mdx)("li",{parentName:"ul"},"节点的主要字段均为 key/value/children"),Object(esm.mdx)("li",{parentName:"ul"},"简单情况下，下钻树可以直接作为 CrossTable 的 leftTree/topTree")),Object(esm.mdx)("p",null,"但两者描述的结构是不同的："),Object(esm.mdx)("ul",null,Object(esm.mdx)("li",{parentName:"ul"},"LeftCrossTreeNode/TopCrossTreeNode 描述了表格结构，是",Object(esm.mdx)("strong",{parentName:"li"},"展现层面"),"的结构；"),Object(esm.mdx)("li",{parentName:"ul"},"DrillNode 描述数据被不断分组后的结果，是",Object(esm.mdx)("strong",{parentName:"li"},"数据层面"),"的结构。")),Object(esm.mdx)("p",null,"很多时候，下钻树与交叉表的 leftTree/topTree 并不是对应的，ali-react-table 提供了一些其他方法来在两者之间进行转换。"),Object(esm.mdx)("h2",{id:"数据结构数据立方"},"数据结构——数据立方"),Object(esm.mdx)("p",null,"下钻树具有一个下钻维度序列；而透视表具有两个下钻维度序列：左侧维度序列（也称行维度），以及上方维度序列（也成列维度）。在实践中，我们可以使用「左侧的值序列」+「上方的值序列」来唯一确定透视表中的每一个单元格。对这两个值序列进行编码（分别记为 leftKey 和 topKey），我们可以用两个字符串来表示一个单元格。"),Object(esm.mdx)("p",null,"RecordMatrix 是透视表的数据源容器，存放了一个透视表所有单元格的数据。RecordMatrix 的数据结构是一个二维的 Map，类型为 ",Object(esm.mdx)("inlineCode",{parentName:"p"},"type RecordMatrix = Map<string, Map<string, any>>"),"。根据 leftKey 和 topKey，从 matrix 中可以快速找到对应单元格的数据，对应的使用方式为 ",Object(esm.mdx)("inlineCode",{parentName:"p"},"matrix.get(leftKey).get(topKey)"),"."),Object(esm.mdx)("h3",{id:"buildrecordmatrix-从明细数据中构建数据立方"},Object(esm.mdx)("inlineCode",{parentName:"h3"},"buildRecordMatrix")," 从明细数据中构建数据立方"),Object(esm.mdx)("p",null,"RecordMatrix 的用法非常简单，但其构建过程则相对麻烦一些。pivot-table 提供了 ",Object(esm.mdx)("inlineCode",{parentName:"p"},"buildRecordMatrix")," 方法，该方法用于从明细数据中根据两个下钻维度序列生成相应的数据立方，具体接口如下："),Object(esm.mdx)("pre",null,Object(esm.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"function buildRecordMatrix(buildConfig: BuildRecordMatrixConfig): RecordMatrix\n")),Object(esm.mdx)("p",null,Object(esm.mdx)("inlineCode",{parentName:"p"},"BuildRecordMatrixConfig")," 结构："),Object(esm.mdx)("table",null,Object(esm.mdx)("thead",{parentName:"table"},Object(esm.mdx)("tr",{parentName:"thead"},Object(esm.mdx)("th",_extends({parentName:"tr"},{align:null}),"字段"),Object(esm.mdx)("th",_extends({parentName:"tr"},{align:null}),"类型"),Object(esm.mdx)("th",_extends({parentName:"tr"},{align:null}),"必传/可选"),Object(esm.mdx)("th",_extends({parentName:"tr"},{align:null}),"说明"))),Object(esm.mdx)("tbody",{parentName:"table"},Object(esm.mdx)("tr",{parentName:"tbody"},Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"leftCodes")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"string[]")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"必传"),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"表格左侧 下钻维度（行维度）")),Object(esm.mdx)("tr",{parentName:"tbody"},Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"topCodes")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"string[]")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"必传"),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"表格上方 下钻维度（列维度）")),Object(esm.mdx)("tr",{parentName:"tbody"},Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"data")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"any[]")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"必传"),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"明细数据，格式为 对象数组")),Object(esm.mdx)("tr",{parentName:"tbody"},Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"aggregate")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"(slice:any[]) => any")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"可选"),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"聚合函数，若不提供则不对数据进行聚合")),Object(esm.mdx)("tr",{parentName:"tbody"},Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"encode")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"(valuePath: string[]) => string")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"可选"),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"参见上方 ",Object(esm.mdx)("inlineCode",{parentName:"td"},"buildDrillTree")," 文档中的 ",Object(esm.mdx)("inlineCode",{parentName:"td"},"encode"))),Object(esm.mdx)("tr",{parentName:"tbody"},Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"isLeftExpand")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"(key: string) => boolean")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"可选"),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"参见上方 ",Object(esm.mdx)("inlineCode",{parentName:"td"},"buildDrillTree")," 文档中的 ",Object(esm.mdx)("inlineCode",{parentName:"td"},"isExpand"))),Object(esm.mdx)("tr",{parentName:"tbody"},Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"isTopExpand")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"(key: string) => boolean")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"可选"),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"参见上方 ",Object(esm.mdx)("inlineCode",{parentName:"td"},"buildDrillTree")," 文档中的 ",Object(esm.mdx)("inlineCode",{parentName:"td"},"isExpand"))),Object(esm.mdx)("tr",{parentName:"tbody"},Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"prebuiltLeftTree")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"DrillNode[]")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"可选"),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"预先构建好的 左侧下钻树")),Object(esm.mdx)("tr",{parentName:"tbody"},Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"prebuiltTopTree")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),Object(esm.mdx)("inlineCode",{parentName:"td"},"DrillNode[]")),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"可选"),Object(esm.mdx)("td",_extends({parentName:"tr"},{align:null}),"预先构建好的 上方下钻树")))),Object(esm.mdx)("p",null,"注意事项："),Object(esm.mdx)("ul",null,Object(esm.mdx)("li",{parentName:"ul"},"如果提供了 ",Object(esm.mdx)("inlineCode",{parentName:"li"},"prebuiltLeftTree"),"，预构建的左侧下钻树必须使用相同的 leftCodes 和 data 进行构建，且构建时必须包含总计节点。（同理于 prebuiltTopTree）")),Object(esm.mdx)("h3",{id:"todo-buildrecordmatrix-的详细-api-文档"},"TODO ",Object(esm.mdx)("inlineCode",{parentName:"h3"},"buildRecordMatrix")," 的详细 api 文档"),Object(esm.mdx)("h3",{id:"buildrecordmatrix-示例"},Object(esm.mdx)("inlineCode",{parentName:"h3"},"buildRecordMatrix")," 示例"),Object(esm.mdx)("p",null,"下面的例子描述了 buildDrillTree，buildRecordMatrix 以及交叉表是如何配套使用的。在下面的示例中，我们直接将 下钻树作为了交叉表组件的 leftTree 和 topTree，故 leftTree/topTree 中节点的 key 与 matrix 中的索引是一致的。在交叉表的 getValue 回调中，我们直接使用 leftNode.key 与 topNode.key 就能从 matrix 取出对应单元格的数据。"),Object(esm.mdx)(SimpleCrossTable,{mdxType:"SimpleCrossTable"}),Object(esm.mdx)("h3",{id:"convertdrilltreetocrosstree"},Object(esm.mdx)("inlineCode",{parentName:"h3"},"convertDrillTreeToCrossTree")),Object(esm.mdx)("p",null,"「下钻树直接作为 leftTree 和 topTree」虽然方便，但有一些明显的不足："),Object(esm.mdx)("ul",null,Object(esm.mdx)("li",{parentName:"ul"},"缺少总计/小计节点，需要手动添加"),Object(esm.mdx)("li",{parentName:"ul"},"无法满足多个指标同时展示的需求"),Object(esm.mdx)("li",{parentName:"ul"},"不支持收拢展开功能"),Object(esm.mdx)("li",{parentName:"ul"},"小计节点与父节点共用同一份数据，但在表格结构上两者又必须使用不同的 key，两者发生冲突")),Object(esm.mdx)("p",null,"这些限制的原因在于",Object(esm.mdx)("strong",{parentName:"p"},"表格展现层和数据层使用了相同的 key"),"，导致两者必须具有相同的结构。 ",Object(esm.mdx)("inlineCode",{parentName:"p"},"convertDrillTreeToCrossTree")," 用于将下钻树转换为交叉表的 leftTree/topTree，在转换过程中为展现层和数据层分配不同的 key 从而解除了上述限制。并提供以下特性："),Object(esm.mdx)("ul",null,Object(esm.mdx)("li",{parentName:"ul"},"支持单指标或多指标，多指标情况下支持指标放在交叉表左侧或上方"),Object(esm.mdx)("li",{parentName:"ul"},"支持生成小计节点"),Object(esm.mdx)("li",{parentName:"ul"},"支持收拢展开")),Object(esm.mdx)("p",null,"转换过程中，该函数会执行以下处理："),Object(esm.mdx)("ul",null,Object(esm.mdx)("li",{parentName:"ul"},"该函数会将下钻树中的 key 复制到 ",Object(esm.mdx)("inlineCode",{parentName:"li"},"crossTreeNode.data.dataKey")," 上（crossTreeNode 指生成的交叉树节点）"),Object(esm.mdx)("li",{parentName:"ul"},"该函数会将下钻树中的 path 复制到 ",Object(esm.mdx)("inlineCode",{parentName:"li"},"crossTreeNode.data.dataPath")," 上"),Object(esm.mdx)("li",{parentName:"ul"},"根据多指标或小计节点相关配置，生成对应的 CrossTreeNode，并为新的节点生成 key 值",Object(esm.mdx)("ul",{parentName:"li"},Object(esm.mdx)("li",{parentName:"ul"},"多指标的情况下，指标配置会被复制到 ",Object(esm.mdx)("inlineCode",{parentName:"li"},"crossTreeNode.data.indicator")," 上"),Object(esm.mdx)("li",{parentName:"ul"},"新增的节点中，data.dataKey 和 data.dataPath 保存了对应下钻树节点的 key 和 path"))),Object(esm.mdx)("li",{parentName:"ul"},"开启展开/收拢功能后，为部分 CrossTreeNode 生成 title 用于渲染交互按钮")),Object(esm.mdx)("p",null,"转换函数具体 api:"),Object(esm.mdx)("pre",null,Object(esm.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"function convertDrillTreeToCrossTree<T extends CrossTreeNode = CrossTreeNode>(\n  drillTree: DrillNode[],\n  options: ConvertOptions<T> = {},\n): T[]\n\ntype ConvertOptions<T extends CrossTreeNode = CrossTreeNode> = {\n  /** 需要在子节点处附加的 指标节点 */\n  indicators?: CrossTableIndicator[]\n\n  /** 自定义的编码函数，用于根据下钻的值序列生成唯一的字符串.\n   * 该参数留空 表示使用默认的编码方式 */\n  encode?(valuePath: string[]): string\n\n  /** 为一个值序列生成小计（sub-total）节点.\n   * 针对每一个父节点，该函数都将被调用一次；\n   * * 函数返回 null, 表示对应父节点不需要小计节点；\n   * * 返回 `{ position: 'start' | 'end', value: string; data?: any }`\n   *  表明所要生成的小计节点的摆放位置、文本、附加的数据\n   *\n   * 该参数留空 表示所有节点均不需要生成小计节点 */\n  generateSubtotalNode?(\n    drillNode: DrillNode,\n  ): null | {\n    position: 'start' | 'end'\n    value: string\n  }\n\n  /** 是否支持节点的展开与收拢，默认为 false。\n   * 当该选项为 true 时，展开/收拢才会开启，相关的按钮也才会被渲染 */\n  supportsExpand?: boolean\n\n  /** 展开的节点的 key 数组 */\n  expandKeys?: string[]\n\n  /** 展开节点发生变化时的回调 */\n  onChangeExpandKeys?(nextKeys: string[], targetNode: DrillNode, action: 'collapse' | 'expand'): void\n\n  /** 是否强制展开总计节点，默认为 true */\n  enforceExpandTotalNode?: boolean\n}\n")),Object(esm.mdx)("h3",{id:"基于交叉表和透视工具构建透视表"},"基于交叉表和透视工具构建透视表"),Object(esm.mdx)("p",null,"有了这些透视工具和合适的渲染层，接下来我们就可以从明细数据中构建透视表了。下面这个例子中引入了一个简单的透视表设计器，提供了最基本的维度选择和表格结构调整功能。根据设计器的状态，调整构建下钻树或转换时的参数，就能够方便地实现透视表的各项功能了。"),Object(esm.mdx)(SimplePivotTable,{mdxType:"SimplePivotTable"}))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"交叉与透视 / 透视工具文档",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},2205:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return cross_tree_table_CrossTreeTable}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(29),__webpack_require__(20),__webpack_require__(28),__webpack_require__(7),__webpack_require__(216),__webpack_require__(48),__webpack_require__(183),__webpack_require__(19),__webpack_require__(217),__webpack_require__(13),__webpack_require__(218),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);var react=__webpack_require__(0),react_default=__webpack_require__.n(react),noop=__webpack_require__(2202),table=__webpack_require__(55),constants=__webpack_require__(362),treeMode=(__webpack_require__(33),__webpack_require__(30),__webpack_require__(25),__webpack_require__(23),__webpack_require__(10),__webpack_require__(523)),utils_isLeafNode=__webpack_require__(58);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function buildCrossTreeTable(options){var _options$leftTree,_options$topTree,primaryColumn=options.primaryColumn,openKeys=options.openKeys,onChangeOpenKeys=options.onChangeOpenKeys,indentSize=options.indentSize,_options$isLeafNode=options.isLeafNode,isLeafNodeOpt=void 0===_options$isLeafNode?utils_isLeafNode.a:_options$isLeafNode,leftTree=null!==(_options$leftTree=options.leftTree)&&void 0!==_options$leftTree?_options$leftTree:[],topTree=null!==(_options$topTree=options.topTree)&&void 0!==_options$topTree?_options$topTree:[];return Object(treeMode.a)({primaryKey:constants.a,openKeys:openKeys,onChangeOpenKeys:onChangeOpenKeys,indentSize:indentSize,isLeafNode:function isLeafNode(row,nodeMeta){return isLeafNodeOpt(row.node,nodeMeta)}})({columns:function getColumns(){return[Object.assign({},primaryColumn,{getValue:function getValue(row){return row.node.value},getCellProps:function getCellProps(value,row){if(primaryColumn.getCellProps)return primaryColumn.getCellProps(row.node,row.nodes.length-1)},render:function render(value,row){return primaryColumn.render?primaryColumn.render(row.node,row.nodes.length-1):value}})].concat(_toConsumableArray(function getDataPartColumns(){return function dfs(nodes,ctx){var _step,result=[],_iterator=_createForOfIteratorHelper(nodes);try{for(_iterator.s();!(_step=_iterator.n()).done;){var _node=_step.value;if(Object(utils_isLeafNode.a)(_node))result.push(getDataColumn(_node,ctx.depth));else{_node.key;var value=_node.value,children=_node.children,others=_objectWithoutProperties(_node,["key","value","children"]);result.push(Object.assign({},others,{name:value,children:dfs(children,{depth:ctx.depth+1})}))}}}catch(err){_iterator.e(err)}finally{_iterator.f()}return result}(topTree,{depth:0})}()));function getDataColumn(topNode,topDepth){topNode.key;var value=topNode.value,others=(topNode.children,_objectWithoutProperties(topNode,["key","value","children"]));return Object.assign({},others,{getValue:function columnGetValue(row){var leftDepth=row.nodes.length-1,leftNode=row.node;return options.getValue(leftNode,topNode,leftDepth,topDepth)},name:value,children:null,render:function render(value,row){if(options.render){var leftDepth=row.nodes.length-1,leftNode=row.node;return options.render(value,leftNode,topNode,leftDepth,topDepth)}return value},getCellProps:function getCellProps(value,row){if(options.getCellProps){var leftDepth=row.nodes.length-1,leftNode=row.node;return options.getCellProps(value,leftNode,topNode,leftDepth,topDepth)}}})}}(),dataSource:function getDataSource(){return function dfs(nodes,ctx){var _step2,result=[],_iterator2=_createForOfIteratorHelper(nodes);try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _node2=_step2.value;if(!_node2.hidden)if(Object(utils_isLeafNode.a)(_node2)){var _result$push;result.push((_defineProperty(_result$push={},constants.a,_node2.key),_defineProperty(_result$push,"node",_node2),_defineProperty(_result$push,"nodes",[].concat(_toConsumableArray(ctx.nodes),[_node2])),_result$push))}else{var _result$push2,_nodes=[].concat(_toConsumableArray(ctx.nodes),[_node2]);ctx.nodes.push(_node2);var children=dfs(_node2.children,ctx);result.push((_defineProperty(_result$push2={},constants.a,_node2.key),_defineProperty(_result$push2,"node",_node2),_defineProperty(_result$push2,"nodes",_nodes),_defineProperty(_result$push2,"children",children),_result$push2)),ctx.nodes.pop()}}}catch(err){_iterator2.e(err)}finally{_iterator2.f()}return result}(leftTree,{nodes:[]})}()})}try{buildCrossTreeTable.displayName="buildCrossTreeTable",buildCrossTreeTable.__docgenInfo={description:"",displayName:"buildCrossTreeTable",props:{leftTree:{defaultValue:null,description:"",name:"leftTree",required:!0,type:{name:"LeftCrossTreeNode[]"}},topTree:{defaultValue:null,description:"",name:"topTree",required:!0,type:{name:"TopCrossTreeNode[]"}},getValue:{defaultValue:null,description:"",name:"getValue",required:!0,type:{name:"(leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number) => any"}},getCellProps:{defaultValue:null,description:"",name:"getCellProps",required:!1,type:{name:"(value: any, leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number) => CellProps"}},render:{defaultValue:null,description:"",name:"render",required:!1,type:{name:"(value: any, leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number) => ReactNode"}},primaryColumn:{defaultValue:null,description:"",name:"primaryColumn",required:!0,type:{name:"CrossTableLeftMetaColumn"}},openKeys:{defaultValue:null,description:"",name:"openKeys",required:!0,type:{name:"string[]"}},onChangeOpenKeys:{defaultValue:null,description:"",name:"onChangeOpenKeys",required:!0,type:{name:"(nextOpenKeys: string[]) => void"}},indentSize:{defaultValue:null,description:"",name:"indentSize",required:!1,type:{name:"number"}},isLeafNode:{defaultValue:null,description:"",name:"isLeafNode",required:!1,type:{name:"(node: any, nodeMeta: { depth: number; expanded: boolean; rowKey: string; }) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/pivot/cross-tree-table/buildCrossTreeTable.tsx#buildCrossTreeTable"]={docgenInfo:buildCrossTreeTable.__docgenInfo,name:"buildCrossTreeTable",path:"src/pivot/cross-tree-table/buildCrossTreeTable.tsx#buildCrossTreeTable"})}catch(__react_docgen_typescript_loader_error){}function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function cross_tree_table_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function cross_tree_table_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}function _setPrototypeOf(o,p){return(_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){return o.__proto__=p,o})(o,p)}function _createSuper(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}function _possibleConstructorReturn(self,call){return!call||"object"!==_typeof(call)&&"function"!=typeof call?function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}(self):call}function _getPrototypeOf(o){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o)})(o)}var cross_tree_table_CrossTreeTable=function(_React$Component){!function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),superClass&&_setPrototypeOf(subClass,superClass)}(CrossTreeTable,_React$Component);var _super=_createSuper(CrossTreeTable);function CrossTreeTable(props){var _this;return function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,CrossTreeTable),(_this=_super.call(this,props)).onChangeOpenKeys=function(nextOpenKeys){_this.props.onChangeOpenKeys(nextOpenKeys),"openKeys"in _this.props||_this.setState({openKeys:nextOpenKeys})},_this.state={openKeys:props.defaultOpenKeys},_this}return _createClass(CrossTreeTable,null,[{key:"getDerivedStateFromProps",value:function getDerivedStateFromProps(nextProps){return"openKeys"in nextProps?{openKeys:nextProps.openKeys}:null}}]),_createClass(CrossTreeTable,[{key:"render",value:function render(){var _this$props=this.props,leftTree=_this$props.leftTree,topTree=_this$props.topTree,getValue=_this$props.getValue,getCellProps=_this$props.getCellProps,primaryColumn=_this$props.primaryColumn,render=_this$props.render,openKeysProp=_this$props.openKeys,indentSize=(_this$props.defaultOpenKeys,_this$props.onChangeOpenKeys,_this$props.indentSize),isLeafNode=_this$props.isLeafNode,baseTableRef=_this$props.baseTableRef,others=cross_tree_table_objectWithoutProperties(_this$props,["leftTree","topTree","getValue","getCellProps","primaryColumn","render","openKeys","defaultOpenKeys","onChangeOpenKeys","indentSize","isLeafNode","baseTableRef"]),_buildCrossTreeTable=buildCrossTreeTable({leftTree:leftTree,topTree:topTree,getValue:getValue,getCellProps:getCellProps,render:render,primaryColumn:primaryColumn,openKeys:null!=openKeysProp?openKeysProp:this.state.openKeys,onChangeOpenKeys:this.onChangeOpenKeys,indentSize:indentSize,isLeafNode:isLeafNode}),dataSource=_buildCrossTreeTable.dataSource,columns=_buildCrossTreeTable.columns;return react_default.a.createElement(table.a,_extends({ref:baseTableRef},others,{primaryKey:constants.a,dataSource:dataSource,columns:columns}))}}]),CrossTreeTable}(react_default.a.Component);cross_tree_table_CrossTreeTable.defaultProps={defaultOpenKeys:[],onChangeOpenKeys:noop.a};try{crosstreetable.displayName="crosstreetable",crosstreetable.__docgenInfo={description:"",displayName:"crosstreetable",props:{baseTableRef:{defaultValue:null,description:"",name:"baseTableRef",required:!1,type:{name:"Ref<BaseTable>"}},primaryColumn:{defaultValue:null,description:"",name:"primaryColumn",required:!0,type:{name:"CrossTableLeftMetaColumn"}},leftTree:{defaultValue:null,description:"",name:"leftTree",required:!0,type:{name:"LeftCrossTreeNode[]"}},topTree:{defaultValue:null,description:"",name:"topTree",required:!0,type:{name:"TopCrossTreeNode[]"}},defaultOpenKeys:{defaultValue:{value:"[] as string[]"},description:"",name:"defaultOpenKeys",required:!1,type:{name:"string[]"}},openKeys:{defaultValue:null,description:"",name:"openKeys",required:!1,type:{name:"string[]"}},onChangeOpenKeys:{defaultValue:null,description:"",name:"onChangeOpenKeys",required:!1,type:{name:"(nextOpenKeys: string[]) => void"}},indentSize:{defaultValue:null,description:"",name:"indentSize",required:!1,type:{name:"number"}},isLeafNode:{defaultValue:null,description:"",name:"isLeafNode",required:!1,type:{name:"(node: any, nodeMeta: { depth: number; expanded: boolean; rowKey: string; }) => boolean"}},getValue:{defaultValue:null,description:"",name:"getValue",required:!0,type:{name:"(leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number) => any"}},render:{defaultValue:null,description:"",name:"render",required:!1,type:{name:"(value: any, leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number) => ReactNode"}},getCellProps:{defaultValue:null,description:"",name:"getCellProps",required:!1,type:{name:"(value: any, leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number) => CellProps"}},useVirtual:{defaultValue:null,description:"是否开启虚拟滚动",name:"useVirtual",required:!1,type:{name:'boolean | "auto" | { horizontal?: VirtualEnum; vertical?: VirtualEnum; header?: VirtualEnum; }'}},isStickyHead:{defaultValue:null,description:"表格头部是否置顶，默认为 true",name:"isStickyHead",required:!1,type:{name:"boolean"}},stickyTop:{defaultValue:null,description:"表格置顶后，距离顶部的距离",name:"stickyTop",required:!1,type:{name:"number"}},stickyBottom:{defaultValue:null,description:"表格置顶后，距离底部的距离",name:"stickyBottom",required:!1,type:{name:"number"}},className:{defaultValue:null,description:"自定义类名",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"自定义内联样式",name:"style",required:!1,type:{name:"CSSProperties & Partial<{ '--color': string; '--bgcolor': string; '--hover-color': string; '--row-height': string; '--header-color': string; '--header-bgcolor': string; '--header-row-height': string; ... 6 more ...; '--header-cell-border-vertical': string; }>"}},hasHeader:{defaultValue:null,description:"表格是否具有头部",name:"hasHeader",required:!1,type:{name:"boolean"}},useOuterBorder:{defaultValue:null,description:"使用来自外层 div 的边框代替单元格的外边框",name:"useOuterBorder",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"表格是否在加载中",name:"isLoading",required:!1,type:{name:"boolean"}},emptyContent:{defaultValue:null,description:"数据为空的时候的表格内容展现",name:"emptyContent",required:!1,type:{name:"ReactNode"}},defaultColumnWidth:{defaultValue:null,description:"列的默认宽度",name:"defaultColumnWidth",required:!1,type:{name:"number"}},flowRoot:{defaultValue:null,description:"表格所处于的块格式化上下文(BFC)\nhttps://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context",name:"flowRoot",required:!1,type:{name:'"auto" | "self" | (() => HTMLElement | (Window & typeof globalThis)) | HTMLElement | (Window & typeof globalThis)'}},getRowProps:{defaultValue:null,description:"",name:"getRowProps",required:!1,type:{name:"(record: any, rowIndex: number) => HTMLAttributes<HTMLTableRowElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/pivot/cross-tree-table/cross-tree-table.tsx#crosstreetable"]={docgenInfo:crosstreetable.__docgenInfo,name:"crosstreetable",path:"src/pivot/cross-tree-table/cross-tree-table.tsx#crosstreetable"})}catch(__react_docgen_typescript_loader_error){}},2213:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return makeColumnHoverTransform})),__webpack_require__.d(__webpack_exports__,"b",(function(){return useColumnHoverTransform}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(7),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);var react__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(0),_utils__WEBPACK_IMPORTED_MODULE_15__=__webpack_require__(525),_utils__WEBPACK_IMPORTED_MODULE_16__=__webpack_require__(58),_utils__WEBPACK_IMPORTED_MODULE_17__=__webpack_require__(923);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function makeColumnHoverTransform(_ref){var _ref$hoverColor=_ref.hoverColor,hoverColor=void 0===_ref$hoverColor?"#f5f5f5":_ref$hoverColor,hoverColIndex=_ref.hoverColIndex,onChangeHoverColIndex=_ref.onChangeHoverColIndex;return Object(_utils__WEBPACK_IMPORTED_MODULE_15__.a)((function(col,_ref2){var range=_ref2.range;if(!Object(_utils__WEBPACK_IMPORTED_MODULE_16__.a)(col))return col;var colIndexMatched=range.start<=hoverColIndex&&hoverColIndex<range.end,prevGetCellProps=col.getCellProps;return Object.assign({},col,{getCellProps:function getCellProps(value,record,rowIndex){var prevCellProps=null==prevGetCellProps?void 0:prevGetCellProps(value,record,rowIndex);return Object(_utils__WEBPACK_IMPORTED_MODULE_17__.a)(prevCellProps,{style:{backgroundColor:colIndexMatched?hoverColor:void 0},onMouseEnter:function onMouseEnter(){onChangeHoverColIndex(range.start)},onMouseLeave:function onMouseLeave(){onChangeHoverColIndex(-1)}})}})}))}function useColumnHoverTransform(){var _ref3=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},hoverColor=_ref3.hoverColor,_ref3$defaultHoverCol=_ref3.defaultHoverColIndex,defaultHoverColIndex=void 0===_ref3$defaultHoverCol?-1:_ref3$defaultHoverCol,_useState=Object(react__WEBPACK_IMPORTED_MODULE_14__.useState)(defaultHoverColIndex),_useState2=_slicedToArray(_useState,2),hoverColIndex=_useState2[0],onChangeHoverColIndex=_useState2[1];return makeColumnHoverTransform({hoverColor:hoverColor,hoverColIndex:hoverColIndex,onChangeHoverColIndex:onChangeHoverColIndex})}try{makeColumnHoverTransform.displayName="makeColumnHoverTransform",makeColumnHoverTransform.__docgenInfo={description:"",displayName:"makeColumnHoverTransform",props:{hoverColor:{defaultValue:{value:"#f5f5f5"},description:"",name:"hoverColor",required:!1,type:{name:"string"}},hoverColIndex:{defaultValue:null,description:"",name:"hoverColIndex",required:!0,type:{name:"number"}},onChangeHoverColIndex:{defaultValue:null,description:"",name:"onChangeHoverColIndex",required:!0,type:{name:"(nextColIndex: number) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/transforms/columnHover.tsx#makeColumnHoverTransform"]={docgenInfo:makeColumnHoverTransform.__docgenInfo,name:"makeColumnHoverTransform",path:"src/transforms/columnHover.tsx#makeColumnHoverTransform"})}catch(__react_docgen_typescript_loader_error){}try{useColumnHoverTransform.displayName="useColumnHoverTransform",useColumnHoverTransform.__docgenInfo={description:"",displayName:"useColumnHoverTransform",props:{hoverColor:{defaultValue:null,description:"",name:"hoverColor",required:!1,type:{name:"string"}},defaultHoverColIndex:{defaultValue:{value:-1},description:"",name:"defaultHoverColIndex",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/transforms/columnHover.tsx#useColumnHoverTransform"]={docgenInfo:useColumnHoverTransform.__docgenInfo,name:"useColumnHoverTransform",path:"src/transforms/columnHover.tsx#useColumnHoverTransform"})}catch(__react_docgen_typescript_loader_error){}},243:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return buildDrillTree}));__webpack_require__(23),__webpack_require__(19);var _utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(526),_simpleEncode__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(205);function buildDrillTree(data,codes){var array,_ref=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},_ref$encode=_ref.encode,encode=void 0===_ref$encode?_simpleEncode__WEBPACK_IMPORTED_MODULE_3__.a:_ref$encode,_ref$totalValue=_ref.totalValue,totalValue=void 0===_ref$totalValue?"总计":_ref$totalValue,_ref$includeTopWrappe=_ref.includeTopWrapper,includeTopWrapper=void 0!==_ref$includeTopWrappe&&_ref$includeTopWrappe,_ref$isExpand=_ref.isExpand,isExpand=void 0===_ref$isExpand?function(){return!0}:_ref$isExpand,_ref$enforceExpandTot=_ref.enforceExpandTotalNode,enforceExpandTotalNode=void 0===_ref$enforceExpandTot||_ref$enforceExpandTot,emptyPath=[],totalKey=encode(emptyPath),hasChild=!1;if(0===codes.length?array=[]:enforceExpandTotalNode||isExpand(totalKey)?array=dfs(data,[]):(array=[],hasChild=data.length>0),includeTopWrapper){var rootNode={key:totalKey,value:totalValue,path:emptyPath,children:array};return hasChild&&(rootNode.hasChild=hasChild),[rootNode]}return includeTopWrapper?[{key:totalKey,value:totalValue,path:emptyPath,children:array}]:array;function dfs(slice,path){for(var depth=path.length,array=[],code=codes[depth],groups=Object(_utils__WEBPACK_IMPORTED_MODULE_2__.a)(slice,(function(row){return row[code]})),_i=0,_Object$keys=Object.keys(groups);_i<_Object$keys.length;_i++){var groupKey=_Object$keys[_i];path.push(groupKey);var node={key:encode(path),value:groupKey,path:path.slice()};array.push(node);var group=groups[groupKey];group.length>0&&depth<codes.length-1&&(isExpand(node.key)?node.children=dfs(group,path):node.hasChild=!0),path.pop()}return array}}},244:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return applyTransforms}));__webpack_require__(102);function applyTransforms(input){for(var _len=arguments.length,transforms=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++)transforms[_key-1]=arguments[_key];return transforms.reduce((function(v,fn){return fn(v)}),input)}},281:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return flatMap})),__webpack_require__.d(__webpack_exports__,"b",(function(){return fromEntries}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(65),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(66),__webpack_require__(24);function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function flatMap(array,callback){var result=[];return array.forEach((function(value,index){result.push.apply(result,_toConsumableArray(callback(value,index,array)))})),result}function fromEntries(entries){var _step,result={},_iterator=function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e2){throw _e2},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e3){didErr=!0,err=_e3},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}(entries);try{for(_iterator.s();!(_step=_iterator.n()).done;){var _ref2=_slicedToArray(_step.value,2),key=_ref2[0],_value=_ref2[1];result[key]=_value}}catch(err){_iterator.e(err)}finally{_iterator.f()}return result}},358:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return SpanManager}));__webpack_require__(44),__webpack_require__(334),__webpack_require__(48);function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}var SpanManager=function(){function SpanManager(){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,SpanManager),this.rects=[]}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}(SpanManager,[{key:"testSkip",value:function testSkip(rowIndex,colIndex){return this.rects.some((function(_ref){var left=_ref.left,right=_ref.right,top=_ref.top,bottom=_ref.bottom;return left<=colIndex&&colIndex<right&&top<=rowIndex&&rowIndex<bottom}))}},{key:"stripUpwards",value:function stripUpwards(rowIndex){this.rects=this.rects.filter((function(rect){return rect.bottom>rowIndex}))}},{key:"add",value:function add(rowIndex,colIndex,colSpan,rowSpan){this.rects.push({left:colIndex,right:colIndex+colSpan,top:rowIndex,bottom:rowIndex+rowSpan})}}]),SpanManager}()},362:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return ROW_KEY}));var ROW_KEY="rowKey"},363:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return MinimumPivotTableDesigner}));__webpack_require__(33),__webpack_require__(44),__webpack_require__(89),__webpack_require__(20),__webpack_require__(32),__webpack_require__(10),__webpack_require__(103),__webpack_require__(13),__webpack_require__(98),__webpack_require__(21),__webpack_require__(24);var _alifd_next__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(53),react__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_12___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_12__),styled_components__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(40),_assets_fusion_style__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(63),PivotTableDesignerDiv=styled_components__WEBPACK_IMPORTED_MODULE_13__.b.div.withConfig({displayName:"MinimumPivotTableDesigner__PivotTableDesignerDiv",componentId:"hp41vm-0"})([".row{height:36px;display:flex;align-items:center;.label{width:120px;}}.prompt{color:#999;}.spare-dim{text-decoration:underline;margin-left:8px;cursor:pointer;:hover{outline:1px dashed #ccc;outline-offset:4px;}}"]);function MinimumPivotTableDesigner(_ref){var dimensions=_ref.dimensions,leftCodes=_ref.leftCodes,topCodes=_ref.topCodes,indicatorSide=_ref.indicatorSide,onChangeIndicatorSide=_ref.onChangeIndicatorSide,onChangeLeftCodes=_ref.onChangeLeftCodes,onChangeTopCodes=_ref.onChangeTopCodes,showSubtotal=_ref.showSubtotal,onChangeShowSubtotal=_ref.onChangeShowSubtotal,showSupportsExpandToggle=_ref.showSupportsExpandToggle,supportsExpand=_ref.supportsExpand,onChangeSupportsExpand=_ref.onChangeSupportsExpand,dimMap=new Map(dimensions.map((function(dim){return[dim.code,dim]}))),spareDims=dimensions.filter((function(dim){return!leftCodes.includes(dim.code)&&!topCodes.includes(dim.code)}));return react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(PivotTableDesignerDiv,null,react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_assets_fusion_style__WEBPACK_IMPORTED_MODULE_14__.a,null),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div",{className:"row"},react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span",{className:"label"},"表格结构："),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_11__.a.Group,null,react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_11__.a,{type:"left"===indicatorSide?"primary":"normal",onClick:function onClick(){return onChangeIndicatorSide("left")}},"指标放在左侧"),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_11__.a,{type:"top"===indicatorSide?"primary":"normal",onClick:function onClick(){return onChangeIndicatorSide("top")}},"指标放在上方")),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_11__.a.Group,{style:{marginLeft:16}},react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_11__.a,{onClick:function onClick(){return onChangeShowSubtotal(!0)},type:showSubtotal?"primary":"normal"},"显示总计/小计"),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_11__.a,{onClick:function onClick(){return onChangeShowSubtotal(!1)},type:showSubtotal?"normal":"primary"},"隐藏总计/小计")),showSupportsExpandToggle&&react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_11__.a.Group,{style:{marginLeft:16}},react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_11__.a,{onClick:function onClick(){return onChangeSupportsExpand(!0)},type:supportsExpand?"primary":"normal"},"开启展开/收拢"),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_11__.a,{onClick:function onClick(){return onChangeSupportsExpand(!1)},type:supportsExpand?"normal":"primary"},"关闭展开/收拢"))),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div",{className:"row"},react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span",{className:"label"},"清空维度："),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_11__.a.Group,null,react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_11__.a,{onClick:function onClick(){return onChangeLeftCodes([])},disabled:0===leftCodes.length},"清空左侧维度"),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(_alifd_next__WEBPACK_IMPORTED_MODULE_11__.a,{onClick:function onClick(){return onChangeTopCodes([])},disabled:0===topCodes.length},"清空上方维度"))),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div",{className:"row"},react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span",{className:"label"},"左侧的维度序列："),0===leftCodes.length&&react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span",{className:"prompt"},"暂无维度"),leftCodes.map((function(code,i){return react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment,{key:i},i>0&&react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span",{style:{margin:"0 4px"}},">"),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span",null,dimMap.get(code).name))}))),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div",{className:"row"},react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span",{className:"label"},"左侧的可添加的维度："),0===spareDims.length&&react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span",{className:"prompt"},"暂无维度"),spareDims.map((function(dim){return react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span",{key:dim.code,className:"spare-dim",onClick:function onClick(){return onChangeLeftCodes(leftCodes.concat([dim.code]))}},dim.name)}))),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div",{className:"row"},react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span",{className:"label"},"上方维度序列："),0===topCodes.length&&react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span",{className:"prompt"},"暂无维度"),topCodes.map((function(code,i){return react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_12___default.a.Fragment,{key:i},i>0&&react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span",{style:{margin:"0 4px"}},">"),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span",null,dimMap.get(code).name))}))),react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("div",{className:"row"},react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span",{className:"label"},"上方的可添加的维度："),0===spareDims.length&&react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span",{className:"prompt"},"暂无维度"),spareDims.map((function(dim){return react__WEBPACK_IMPORTED_MODULE_12___default.a.createElement("span",{key:dim.code,className:"spare-dim",onClick:function onClick(){return onChangeTopCodes(topCodes.concat([dim.code]))}},dim.name)}))))}MinimumPivotTableDesigner.displayName="MinimumPivotTableDesigner";try{MinimumPivotTableDesigner.displayName="MinimumPivotTableDesigner",MinimumPivotTableDesigner.__docgenInfo={description:"",displayName:"MinimumPivotTableDesigner",props:{dimensions:{defaultValue:null,description:"",name:"dimensions",required:!0,type:{name:"{ code: string; name: string; }[]"}},leftCodes:{defaultValue:null,description:"",name:"leftCodes",required:!0,type:{name:"string[]"}},topCodes:{defaultValue:null,description:"",name:"topCodes",required:!0,type:{name:"string[]"}},indicatorSide:{defaultValue:null,description:"",name:"indicatorSide",required:!0,type:{name:"string"}},onChangeIndicatorSide:{defaultValue:null,description:"",name:"onChangeIndicatorSide",required:!0,type:{name:"(side: string) => void"}},onChangeLeftCodes:{defaultValue:null,description:"",name:"onChangeLeftCodes",required:!0,type:{name:"(codes: string[]) => void"}},onChangeTopCodes:{defaultValue:null,description:"",name:"onChangeTopCodes",required:!0,type:{name:"(codes: string[]) => void"}},showSubtotal:{defaultValue:null,description:"",name:"showSubtotal",required:!0,type:{name:"boolean"}},onChangeShowSubtotal:{defaultValue:null,description:"",name:"onChangeShowSubtotal",required:!0,type:{name:"(show: boolean) => void"}},showSupportsExpandToggle:{defaultValue:null,description:"",name:"showSupportsExpandToggle",required:!1,type:{name:"boolean"}},supportsExpand:{defaultValue:null,description:"",name:"supportsExpand",required:!1,type:{name:"boolean"}},onChangeSupportsExpand:{defaultValue:null,description:"",name:"onChangeSupportsExpand",required:!1,type:{name:"(bool: boolean) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/pivot/MinimumPivotTableDesigner.tsx#MinimumPivotTableDesigner"]={docgenInfo:MinimumPivotTableDesigner.__docgenInfo,name:"MinimumPivotTableDesigner",path:"stories/pivot/MinimumPivotTableDesigner.tsx#MinimumPivotTableDesigner"})}catch(__react_docgen_typescript_loader_error){}},367:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return CustomColumnsDialog})),__webpack_require__.d(__webpack_exports__,"b",(function(){return useOperationBar}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(33),__webpack_require__(44),__webpack_require__(30),__webpack_require__(89),__webpack_require__(25),__webpack_require__(20),__webpack_require__(32),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(7),__webpack_require__(48),__webpack_require__(13),__webpack_require__(27),__webpack_require__(90),__webpack_require__(98),__webpack_require__(21),__webpack_require__(24);var drawer=__webpack_require__(2226),es_checkbox=__webpack_require__(371),es_button=__webpack_require__(53),bucket_4=__webpack_require__(2218),bucket_5=__webpack_require__(2219),isLeafNode=__webpack_require__(58),collectNodes=__webpack_require__(370),traverseColumn=__webpack_require__(525);var react=__webpack_require__(0),react_default=__webpack_require__.n(react),styled_components_browser_esm=__webpack_require__(40);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var TreeDiv=styled_components_browser_esm.b.div.withConfig({displayName:"components__TreeDiv",componentId:"husv4u-0"})([".group{margin:8px 0;.group{margin:4px 0;}}.line{height:28px;display:flex;align-items:center;.checkbox{flex:0 0 50%;}}.group-header{height:32px;display:flex;align-items:center;}.group-content{margin-left:16px;}"]),Header=styled_components_browser_esm.b.header.withConfig({displayName:"components__Header",componentId:"husv4u-1"})(["flex:0 0 40px;display:flex;align-items:center;border-bottom:1px solid var(--bd-color);padding:0 20px;.actions{margin-left:auto;margin-right:20px;> .action{margin-left:8px;color:var(--action-color);cursor:pointer;font-size:14px;}}"]),Footer=styled_components_browser_esm.b.footer.withConfig({displayName:"components__Footer",componentId:"husv4u-2"})(["flex:0 0 48px;display:flex;justify-content:center;align-items:center;border-top:1px solid var(--bd-color);margin-top:auto;"]);CustomColumnsDialog.defaultProps={showCheckAll:!0,showUncheckAll:!0};var StyledDiv=function makeStyledDrawer(Drawer){return Object(styled_components_browser_esm.b)(Drawer).withConfig({displayName:"components",componentId:"husv4u-3"})(["--action-color:#5584ff;--bd-color:#e8e8e8;.hippo-drawer-header,.next-dialog-header{display:none;}.next-drawer-body,.hippo-drawer-body,.next-dialog-body{padding:0;display:flex;flex-flow:column;height:100%;> main{overflow:auto;padding:20px;}}"])}("div");function CustomColumnsDialog(_ref){var trigger=_ref.trigger,defaultVisible=_ref.defaultVisible,defaultCheckedCodes=_ref.defaultCheckedCodes,enforceCheckedCodes=_ref.enforceCheckedCodes,checkedCodes=_ref.checkedCodes,onChangeCheckedCodes=_ref.onChangeCheckedCodes,columns=_ref.columns,style=_ref.style,className=_ref.className,showCheckAll=_ref.showCheckAll,showUncheckAll=_ref.showUncheckAll,drawerProps=_ref.drawerProps,drawerComponentProp=_ref.drawerComponent,DrawerComponent=drawer.a,_useState2=_slicedToArray(Object(react.useState)(Boolean(defaultVisible)),2),visible=_useState2[0],setVisible=_useState2[1],onClose=function onClose(){return setVisible(!1)},_useState4=_slicedToArray(Object(react.useState)(checkedCodes),2),editingCheckedCodes=_useState4[0],updateEditingCheckedCodes=_useState4[1],editingCheckedCodeSet=new Set(editingCheckedCodes);Object(react.useEffect)((function(){visible&&updateEditingCheckedCodes(checkedCodes)}),[visible]);var onCheck=function onCheck(targetCodes,action){if("check"===action)updateEditingCheckedCodes(editingCheckedCodes.concat(targetCodes.filter((function(code){return!editingCheckedCodeSet.has(code)}))));else{var targetCodeSet=new Set(targetCodes);updateEditingCheckedCodes(editingCheckedCodes.filter((function(code){return!targetCodeSet.has(code)})))}};var dfsResult=function dfs(columns){for(var lineCount=0,tempLine=[],nodes=[],codes=[],allCheck=!0,anyCheck=!1,_loop=function _loop(colIndex){var col=columns[colIndex];if(Object(isLeafNode.a)(col)){if(col.code){var enforce=enforceCheckedCodes&&enforceCheckedCodes.includes(col.code),_checked=editingCheckedCodeSet.has(col.code);enforce||(codes.push(col.code),_checked?anyCheck=!0:allCheck=!1),function addToTempLine(node){flushTempLine(!1),tempLine.push(node)}(react_default.a.createElement(es_checkbox.a,{key:colIndex,className:"checkbox",checked:_checked||enforce,disabled:enforce,onChange:function onChange(){return onCheck([col.code],_checked?"uncheck":"check")}},col.name))}}else{var sub=dfs(col.children);sub.allCheck||(allCheck=!1),sub.anyCheck&&(anyCheck=!0),codes.push.apply(codes,_toConsumableArray(sub.codes)),flushTempLine(!0),nodes.push(react_default.a.createElement("div",{className:"group",key:colIndex},react_default.a.createElement("div",{className:"group-header"},react_default.a.createElement(es_checkbox.a,{className:"checkbox",checked:sub.allCheck,indeterminate:!sub.allCheck&&sub.anyCheck,onChange:function onChange(){return onCheck(sub.codes,sub.allCheck?"uncheck":"check")}},col.name)),react_default.a.createElement("div",{className:"group-content"},sub.nodes)))}},colIndex=0;colIndex<columns.length;colIndex++)_loop(colIndex);return flushTempLine(!0),{nodes:nodes,allCheck:allCheck,anyCheck:anyCheck,codes:codes};function flushTempLine(force){(force&&tempLine.length>0||tempLine.length>=2)&&(nodes.push(react_default.a.createElement("div",{className:"line",key:"line-".concat(lineCount)},tempLine)),lineCount+=1,tempLine=[])}}(columns),props=Object.assign({title:null,footer:null,visible:visible,onClose:onClose,className:className,style:Object.assign({width:500},style)},drawerProps),content=react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement(Header,null,react_default.a.createElement("span",{style:{fontSize:14}},"自定义显示列"),react_default.a.createElement("div",{className:"actions"},defaultCheckedCodes&&react_default.a.createElement("span",{className:"action",onClick:function onClick(){return updateEditingCheckedCodes(defaultCheckedCodes)}},"恢复默认"),showCheckAll&&react_default.a.createElement("span",{className:"action",onClick:function onClick(){return onCheck(dfsResult.codes,"check")}},"全选"),showUncheckAll&&react_default.a.createElement("span",{className:"action",onClick:function onClick(){return onCheck(dfsResult.codes,"uncheck")}},"全不选"))),react_default.a.createElement("main",null,react_default.a.createElement(TreeDiv,null,dfsResult.nodes)),react_default.a.createElement(Footer,null,react_default.a.createElement(es_button.a,{type:"primary",onClick:function onOk(){onChangeCheckedCodes(editingCheckedCodes),onClose()}},"确认"),react_default.a.createElement(es_button.a,{style:{marginLeft:8},onClick:onClose},"取消")));return react_default.a.createElement(react_default.a.Fragment,null,trigger((function onOpen(){return setVisible(!0)})),drawerComponentProp?react_default.a.createElement(drawerComponentProp,props,content):react_default.a.createElement(StyledDiv,Object.assign({as:DrawerComponent},props),content))}var OperationBarDiv=styled_components_browser_esm.b.div.withConfig({displayName:"components__OperationBarDiv",componentId:"husv4u-4"})(["z-index:50;height:32px;display:flex;align-items:center;background-color:white;.item{margin-left:16px;&:first-child{margin-left:0;}}.group{display:flex;align-items:center;}.separator{margin-left:auto;margin-right:auto;}.action{display:flex;align-items:center;color:var(--action-color);cursor:pointer;padding:4px;> .icon{fill:currentColor;margin-right:2px;}}"]);function useOperationBar(_ref2){for(var features=_ref2.features,columns=_ref2.columns,_ref2$actionColor=_ref2.actionColor,actionColor=void 0===_ref2$actionColor?"#23a3ff":_ref2$actionColor,codeGroups=Object(react.useMemo)((function(){var leafColumns=Object(collectNodes.a)(columns,"leaf-only");return{defaultVisible:leafColumns.filter((function(col){var _col$features;return null===(_col$features=col.features)||void 0===_col$features?void 0:_col$features.defaultVisible})).map((function(col){return col.code})),enforceVisible:leafColumns.filter((function(col){var _col$features2;return null===(_col$features2=col.features)||void 0===_col$features2?void 0:_col$features2.enforceVisible})).map((function(col){return col.code}))}}),[columns]),_useState6=_slicedToArray(Object(react.useState)(codeGroups.defaultVisible),2),visibleCodes=_useState6[0],onChangeVisibleCodes=_useState6[1],_useState8=_slicedToArray(Object(react.useState)({}),2),map=_useState8[0],setMap=_useState8[1],transforms=[],nodes=[],_loop2=function _loop2(index){var feat=features[index];if("separator"===feat.type)nodes.push(react_default.a.createElement("span",{className:"item separator",key:index}));else if("custom-columns"===feat.type)nodes.push(react_default.a.createElement(CustomColumnsDialog,{key:index,columns:columns,drawerComponent:feat.drawerComponent,checkedCodes:visibleCodes,onChangeCheckedCodes:onChangeVisibleCodes,defaultCheckedCodes:codeGroups.defaultVisible,enforceCheckedCodes:codeGroups.enforceVisible,trigger:function trigger(onOpen){return react_default.a.createElement("span",{className:"item action",onClick:onOpen},react_default.a.createElement(bucket_4.a,{className:"icon"}),"自定义列")},style:{"--action-color":actionColor}})),transforms.push(function makeVisibleTransform(visibleCodes){var set=new Set(visibleCodes);return Object(traverseColumn.a)((function(column){return Object(isLeafNode.a)(column)?set.has(column.code)?column:Object.assign({},column,{hidden:!0}):column}))}(visibleCodes.concat(codeGroups.enforceVisible)));else if("export"===feat.type)nodes.push(react_default.a.createElement("span",{key:index,className:"item action",onClick:feat.onExport},react_default.a.createElement(bucket_5.a,{className:"icon"}),"导出"));else if("click"===feat.type)nodes.push(react_default.a.createElement("span",{key:index,className:"item action",onClick:feat.onClick},feat.title));else if("toggle"===feat.type){var _map$feat$key,_checked2=null!==(_map$feat$key=map[feat.key])&&void 0!==_map$feat$key&&_map$feat$key;nodes.push(react_default.a.createElement(es_checkbox.a,{key:index,className:"item",checked:_checked2,onChange:function onChange(){return setMap(Object.assign({},map,function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({},feat.key,!map[feat.key])))}},feat.title)),feat.transform&&transforms.push(feat.transform(_checked2))}else{if("custom"!==feat.type)throw new Error("Unsupported action");feat.node&&nodes.push(react_default.a.createElement("span",{className:"item",key:index},feat.node)),feat.transform&&transforms.push(feat.transform)}},index=0;index<features.length;index++)_loop2(index);var view=Object(react.useCallback)((function(props){return react_default.a.createElement(OperationBarDiv,_extends({},props,{style:Object.assign({"--action-color":actionColor},props.style)}))}),[OperationBarDiv,actionColor]);return{transforms:transforms,nodes:nodes,view:view}}try{CustomColumnsDialog.displayName="CustomColumnsDialog",CustomColumnsDialog.__docgenInfo={description:"",displayName:"CustomColumnsDialog",props:{defaultVisible:{defaultValue:null,description:"",name:"defaultVisible",required:!1,type:{name:"boolean"}},trigger:{defaultValue:null,description:"",name:"trigger",required:!0,type:{name:"(onOpen: () => void) => ReactNode"}},defaultCheckedCodes:{defaultValue:null,description:"",name:"defaultCheckedCodes",required:!1,type:{name:"string[]"}},enforceCheckedCodes:{defaultValue:null,description:"",name:"enforceCheckedCodes",required:!1,type:{name:"string[]"}},checkedCodes:{defaultValue:null,description:"",name:"checkedCodes",required:!0,type:{name:"string[]"}},onChangeCheckedCodes:{defaultValue:null,description:"",name:"onChangeCheckedCodes",required:!0,type:{name:"(cols: string[]) => void"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"ArtColumn[]"}},drawerProps:{defaultValue:null,description:"",name:"drawerProps",required:!1,type:{name:"any"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},showCheckAll:{defaultValue:{value:!0},description:"",name:"showCheckAll",required:!1,type:{name:"boolean"}},showUncheckAll:{defaultValue:{value:!0},description:"",name:"showUncheckAll",required:!1,type:{name:"boolean"}},drawerComponent:{defaultValue:null,description:"",name:"drawerComponent",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/examples/components/components.tsx#CustomColumnsDialog"]={docgenInfo:CustomColumnsDialog.__docgenInfo,name:"CustomColumnsDialog",path:"stories/examples/components/components.tsx#CustomColumnsDialog"})}catch(__react_docgen_typescript_loader_error){}try{useOperationBar.displayName="useOperationBar",useOperationBar.__docgenInfo={description:"",displayName:"useOperationBar",props:{features:{defaultValue:null,description:"",name:"features",required:!0,type:{name:"TableOperationFeature[]"}},columns:{defaultValue:null,description:"",name:"columns",required:!0,type:{name:"ArtColumn[]"}},actionColor:{defaultValue:{value:"#23a3ff"},description:"",name:"actionColor",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["stories/examples/components/components.tsx#useOperationBar"]={docgenInfo:useOperationBar.__docgenInfo,name:"useOperationBar",path:"stories/examples/components/components.tsx#useOperationBar"})}catch(__react_docgen_typescript_loader_error){}},370:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return collectNodes}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);var _isLeafNode__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(58);function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function collectNodes(nodes,order){var result=[];return function dfs(nodes){var _step,_iterator=_createForOfIteratorHelper(nodes);try{for(_iterator.s();!(_step=_iterator.n()).done;){var node=_step.value;Object(_isLeafNode__WEBPACK_IMPORTED_MODULE_13__.a)(node)?result.push(node):"pre"===order?(result.push(node),dfs(node.children)):"post"===order?(dfs(node.children),result.push(node)):dfs(node.children)}}catch(err){_iterator.e(err)}finally{_iterator.f()}}(nodes),result}},41:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return Classes})),__webpack_require__.d(__webpack_exports__,"b",(function(){return Styled}));var styled_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(40),Classes={artTableWrapper:"".concat("art-","table-wrapper"),artTable:"".concat("art-","table"),tableHeader:"".concat("art-","table-header"),tableBody:"".concat("art-","table-body"),tableRow:"".concat("art-","table-row"),tableHeaderRow:"".concat("art-","table-header-row"),tableCell:"".concat("art-","table-cell"),tableHeaderCell:"".concat("art-","table-header-cell"),virtualBlank:"".concat("art-","virtual-blank"),stickyScroll:"".concat("art-","sticky-scroll"),stickyScrollItem:"".concat("art-","sticky-scroll-item"),leftLockShadow:"".concat("art-","left-lock-shadow"),rightLockShadow:"".concat("art-","right-lock-shadow"),emptyWrapper:"".concat("art-","empty-wrapper"),loadingWrapper:"".concat("art-","loading-wrapper"),loadingIndicatorWrapper:"".concat("art-","loading-indicator-wrapper"),loadingIndicator:"".concat("art-","loading-indicator"),loadingIndicatorIcon:"".concat("art-","loading-indicator-icon"),loadingContentWrapper:"".concat("art-","loading-content-wrapper")},Z_lock=5,Z_header=10,Z_lockShadow=20,Z_scrollItem=30,ArtTableWrapper=styled_components__WEBPACK_IMPORTED_MODULE_0__.b.div.withConfig({displayName:"styles__ArtTableWrapper",componentId:"sc-1nii5ed-0"})(["--color:#333;--bgcolor:white;--hover-color:#f5f5f5;--row-height:48px;--header-color:#5a6c84;--header-bgcolor:#e9edf2;--header-row-height:32px;--border-color:#dfe3e8;--cell-border:1px solid var(--border-color);--cell-border-horizontal:var(--cell-border);--cell-border-vertical:var(--cell-border);--header-cell-border:1px solid var(--border-color);--header-cell-border-horizontal:var(--header-cell-border);--header-cell-border-vertical:var(--header-cell-border);background:var(--bgcolor);box-sizing:border-box;*{box-sizing:border-box;}&.use-outer-border{border:1px solid var(--border-color);td.first,th.first{border-left:none;}td.last,th.last{border-right:none;}tr.first th,tr.first td{border-top:none;}tr.last td{border-bottom:none;}}.","{background:var(--bgcolor);}"],Classes.virtualBlank),ArtTable=styled_components__WEBPACK_IMPORTED_MODULE_0__.b.div.withConfig({displayName:"styles__ArtTable",componentId:"sc-1nii5ed-1"})(["cursor:default;color:var(--color);font-size:12px;line-height:1.28571;position:relative;.","{overflow-x:auto;overflow-y:hidden;background:var(--header-bgcolor);::-webkit-scrollbar{display:none;}}.","{overflow-x:auto;overflow-y:hidden;}&.sticky{.","{position:sticky;top:0;z-index:",";}}table{width:100%;table-layout:fixed;background:var(--bgcolor);border-collapse:separate;border-spacing:0;}tr:hover{--bgcolor:var(--hover-color);}th{font-weight:normal;text-align:left;padding:8px 12px;height:var(--header-row-height);color:var(--header-color);background:var(--header-bgcolor);border-right:var(--header-cell-border-vertical);border-bottom:var(--header-cell-border-horizontal);}tr.first th{border-top:var(--header-cell-border-horizontal);}th.first{border-left:var(--header-cell-border-vertical);}td{padding:8px 12px;background:var(--bgcolor);height:var(--row-height);border-right:var(--cell-border-vertical);border-bottom:var(--cell-border-horizontal);}td.first{border-left:var(--cell-border-vertical);}tr.first td{border-top:var(--cell-border-horizontal);}&.has-header{tr.first td{border-top:none;}}.lock-left,.lock-right{z-index:",";}.","{display:none;position:absolute;left:0;top:0;bottom:0;z-index:",";box-shadow:rgba(0,0,0,0.25) 10px 0 8px -8px;border-right:var(--cell-border-vertical);pointer-events:none;}.","{display:none;position:absolute;right:0;top:0;bottom:0;z-index:",";box-shadow:rgba(0,0,0,0.25) -10px 0 8px -8px;pointer-events:none;}"],Classes.tableHeader,Classes.tableBody,Classes.tableHeader,Z_header,Z_lock,Classes.leftLockShadow,Z_lockShadow,Classes.rightLockShadow,Z_lockShadow),EmptyWrapper=styled_components__WEBPACK_IMPORTED_MODULE_0__.b.div.withConfig({displayName:"styles__EmptyWrapper",componentId:"sc-1nii5ed-2"})(["color:#99a3b3;font-size:12px;text-align:center;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);.empty-image{width:50px;height:50px;}.empty-tips{margin-top:16px;line-height:1.5;}"]),Styled={ArtTableWrapper:ArtTableWrapper,ArtTable:ArtTable,StickyScroll:styled_components__WEBPACK_IMPORTED_MODULE_0__.b.div.withConfig({displayName:"styles__StickyScroll",componentId:"sc-1nii5ed-3"})(["overflow:auto;position:sticky;bottom:0;z-index:",";margin-top:-17px;.","{height:1px;visibility:hidden;}"],Z_scrollItem,Classes.stickyScrollItem),EmptyWrapper:EmptyWrapper}},523:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return makeTreeModeTransform})),__webpack_require__.d(__webpack_exports__,"b",(function(){return useTreeModeTransform}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(33),__webpack_require__(44),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(7),__webpack_require__(48),__webpack_require__(13),__webpack_require__(27),__webpack_require__(90),__webpack_require__(21),__webpack_require__(24);var _carbon_icons_react__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(524),classnames__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(11),classnames__WEBPACK_IMPORTED_MODULE_19___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_19__),react__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_20___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_20__),styled_components__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(40),_internals__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__(60),_utils__WEBPACK_IMPORTED_MODULE_23__=__webpack_require__(58),_utils__WEBPACK_IMPORTED_MODULE_24__=__webpack_require__(923);function _slicedToArray(arr,i){return _arrayWithHoles(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest()}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var ExpansionCell=styled_components__WEBPACK_IMPORTED_MODULE_21__.b.div.withConfig({displayName:"treeMode__ExpansionCell",componentId:"sc-1ktuue2-0"})(["display:flex;align-items:center;&.leaf{cursor:default;}.expansion-icon{fill:#999;flex:0 0 16px;transition:transform 200ms;&.expanded{transform-origin:center center;transform:rotate(90deg);}}"]),treeMetaSymbol=Symbol("treeMetaSymbol");function makeTreeModeTransform(_ref){var onChangeOpenKeys=_ref.onChangeOpenKeys,openKeys=_ref.openKeys,primaryKey=_ref.primaryKey,_ref$indentSize=_ref.indentSize,indentSize=void 0===_ref$indentSize?16:_ref$indentSize,_ref$isLeafNode=_ref.isLeafNode,isLeafNode=void 0===_ref$isLeafNode?_utils__WEBPACK_IMPORTED_MODULE_23__.a:_ref$isLeafNode,openKeySet=new Set(openKeys);return function(_ref2){var columns=_ref2.columns,dataSource=_ref2.dataSource;return{columns:function processColumns(columns){if(0===columns.length)return columns;var _columns=function _toArray(arr){return _arrayWithHoles(arr)||_iterableToArray(arr)||_unsupportedIterableToArray(arr)||_nonIterableRest()}(columns),firstCol=_columns[0],others=_columns.slice(1);return[Object.assign({},firstCol,{render:function render(value,record,recordIndex){var content=Object(_internals__WEBPACK_IMPORTED_MODULE_22__.safeRender)(firstCol,record,recordIndex);if(null==record[treeMetaSymbol])return content;var _record$treeMetaSymbo=record[treeMetaSymbol],depth=_record$treeMetaSymbo.depth,isLeaf=_record$treeMetaSymbo.isLeaf,expanded=_record$treeMetaSymbo.expanded;if(isLeaf)return react__WEBPACK_IMPORTED_MODULE_20___default.a.createElement(ExpansionCell,{className:"expansion-cell leaf"},react__WEBPACK_IMPORTED_MODULE_20___default.a.createElement("span",{style:{marginLeft:10+depth*indentSize}},content));var marginLeft=depth*indentSize-6,expandCls=expanded?"expanded":"collapsed";return react__WEBPACK_IMPORTED_MODULE_20___default.a.createElement(ExpansionCell,{className:classnames__WEBPACK_IMPORTED_MODULE_19___default()("expansion-cell",expandCls)},react__WEBPACK_IMPORTED_MODULE_20___default.a.createElement(_carbon_icons_react__WEBPACK_IMPORTED_MODULE_18__.a,{className:classnames__WEBPACK_IMPORTED_MODULE_19___default()("expansion-icon",expandCls),style:{marginLeft:marginLeft}}),content)},getCellProps:function getCellProps(value,record,rowIndex){var _firstCol$getCellProp,onClick,_record$treeMetaSymbo2=record[treeMetaSymbol],isLeaf=_record$treeMetaSymbo2.isLeaf,rowKey=_record$treeMetaSymbo2.rowKey,expanded=_record$treeMetaSymbo2.expanded;isLeaf||(onClick=expanded?function onClick(){onChangeOpenKeys(openKeys.filter((function(key){return key!==rowKey})),rowKey,"collapse")}:function onClick(){onChangeOpenKeys([].concat(_toConsumableArray(openKeys),[rowKey]),rowKey,"expand")});var prevProps=null===(_firstCol$getCellProp=firstCol.getCellProps)||void 0===_firstCol$getCellProp?void 0:_firstCol$getCellProp.call(firstCol,value,record,rowIndex);return Object(_utils__WEBPACK_IMPORTED_MODULE_24__.a)(prevProps,{onClick:onClick,style:{cursor:isLeaf?void 0:"pointer"}})}})].concat(_toConsumableArray(others))}(columns),dataSource:function processDataSource(input){var result=[];return function dfs(nodes,depth){if(null==nodes)return;var _step,_iterator=function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e2){throw _e2},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e3){didErr=!0,err=_e3},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}(nodes);try{for(_iterator.s();!(_step=_iterator.n()).done;){var _node=_step.value,rowKey=_node[primaryKey],expanded=openKeySet.has(rowKey),isLeaf=isLeafNode(_node,{depth:depth,expanded:expanded,rowKey:rowKey}),treeMeta={depth:depth,isLeaf:isLeaf,expanded:expanded,rowKey:rowKey};result.push(Object.assign((value=treeMeta,(key=treeMetaSymbol)in(obj={})?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj),_node)),!isLeaf&&expanded&&dfs(_node.children,depth+1)}}catch(err){_iterator.e(err)}finally{_iterator.f()}var obj,key,value}(input,0),result}(dataSource)}}}function useTreeModeTransform(_ref3){var isLeafNode=_ref3.isLeafNode,indentSize=_ref3.indentSize,primaryKey=_ref3.primaryKey,_ref3$defaultOpenKeys=_ref3.defaultOpenKeys,defaultOpenKeys=void 0===_ref3$defaultOpenKeys?[]:_ref3$defaultOpenKeys,_useState2=_slicedToArray(Object(react__WEBPACK_IMPORTED_MODULE_20__.useState)(defaultOpenKeys),2);return makeTreeModeTransform({indentSize:indentSize,primaryKey:primaryKey,isLeafNode:isLeafNode,openKeys:_useState2[0],onChangeOpenKeys:_useState2[1]})}try{makeTreeModeTransform.displayName="makeTreeModeTransform",makeTreeModeTransform.__docgenInfo={description:"",displayName:"makeTreeModeTransform",props:{primaryKey:{defaultValue:null,description:"",name:"primaryKey",required:!0,type:{name:"string"}},openKeys:{defaultValue:null,description:"",name:"openKeys",required:!0,type:{name:"string[]"}},onChangeOpenKeys:{defaultValue:null,description:"",name:"onChangeOpenKeys",required:!0,type:{name:'(nextKeys: string[], key: string, action: "expand" | "collapse") => void'}},indentSize:{defaultValue:{value:16},description:"",name:"indentSize",required:!1,type:{name:"number"}},isLeafNode:{defaultValue:null,description:"",name:"isLeafNode",required:!1,type:{name:"(node: any, nodeMeta: { depth: number; expanded: boolean; rowKey: string; }) => boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/transforms/treeMode.tsx#makeTreeModeTransform"]={docgenInfo:makeTreeModeTransform.__docgenInfo,name:"makeTreeModeTransform",path:"src/transforms/treeMode.tsx#makeTreeModeTransform"})}catch(__react_docgen_typescript_loader_error){}try{useTreeModeTransform.displayName="useTreeModeTransform",useTreeModeTransform.__docgenInfo={description:"",displayName:"useTreeModeTransform",props:{primaryKey:{defaultValue:null,description:"",name:"primaryKey",required:!0,type:{name:"string"}},indentSize:{defaultValue:null,description:"",name:"indentSize",required:!1,type:{name:"number"}},isLeafNode:{defaultValue:null,description:"",name:"isLeafNode",required:!1,type:{name:"(node: any, nodeMeta: { depth: number; expanded: boolean; rowKey: string; }) => boolean"}},defaultOpenKeys:{defaultValue:{value:"[]"},description:"",name:"defaultOpenKeys",required:!1,type:{name:"string[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/transforms/treeMode.tsx#useTreeModeTransform"]={docgenInfo:useTreeModeTransform.__docgenInfo,name:"useTreeModeTransform",path:"src/transforms/treeMode.tsx#useTreeModeTransform"})}catch(__react_docgen_typescript_loader_error){}},525:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return traverseColumn}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(7),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);var _isLeafNode__WEBPACK_IMPORTED_MODULE_14__=__webpack_require__(58);function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function traverseColumn(fn){return function(_ref){var columns=_ref.columns,dataSource=_ref.dataSource;return{dataSource:dataSource,columns:function dfs(columns,parentStartColIndex){var _step,flatColCount=0,result=[],_iterator=function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}(columns);try{for(_iterator.s();!(_step=_iterator.n()).done;){var col=_step.value,startColIndex=parentStartColIndex+flatColCount,unNormalized=void 0;if(Object(_isLeafNode__WEBPACK_IMPORTED_MODULE_14__.a)(col))unNormalized=fn(col,{range:{start:startColIndex,end:startColIndex+1},dataSource:dataSource}),flatColCount+=1;else{var dfsResult=dfs(col.children,startColIndex);unNormalized=fn(Object.assign({},col,{children:dfsResult.result}),{range:{start:startColIndex,end:startColIndex+dfsResult.flatColCount},dataSource:dataSource}),flatColCount+=dfsResult.flatColCount}result.push.apply(result,_toConsumableArray(null==(input=unNormalized)?[]:Array.isArray(input)?input:[input]))}}catch(err){_iterator.e(err)}finally{_iterator.f()}var input;return{result:result,flatColCount:flatColCount}}(columns,0).result}}}},526:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return groupBy}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function groupBy(list,iteratee){var _step,groups={},_iterator=_createForOfIteratorHelper(list);try{for(_iterator.s();!(_step=_iterator.n()).done;){var item=_step.value,key=iteratee(item);null==groups[key]&&(groups[key]=[]),groups[key].push(item)}}catch(err){_iterator.e(err)}finally{_iterator.f()}return groups}},55:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return table_BaseTable}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(33),__webpack_require__(44),__webpack_require__(337),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(32),__webpack_require__(23),__webpack_require__(338),__webpack_require__(28),__webpack_require__(10),__webpack_require__(167),__webpack_require__(7),__webpack_require__(216),__webpack_require__(48),__webpack_require__(183),__webpack_require__(217),__webpack_require__(13),__webpack_require__(218),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);var classnames=__webpack_require__(11),classnames_default=__webpack_require__.n(classnames),react=__webpack_require__(0),react_default=__webpack_require__.n(react),Subscription=__webpack_require__(79),BehaviorSubject=__webpack_require__(2220),of=__webpack_require__(2209),timer=__webpack_require__(2228),animationFrame=__webpack_require__(2224),combineLatest=__webpack_require__(2221),noop=__webpack_require__(2202),map=__webpack_require__(236),switchMap=__webpack_require__(2208),distinctUntilChanged=__webpack_require__(2210),filter=__webpack_require__(2211),internals=__webpack_require__(60),styles=__webpack_require__(41);function EmptyTable(_ref){var colgroup=_ref.colgroup,colSpan=_ref.colSpan,isLoading=_ref.isLoading,emptyContent=_ref.emptyContent;return react_default.a.createElement("table",null,colgroup,react_default.a.createElement("tbody",null,react_default.a.createElement("tr",{className:classnames_default()(styles.a.tableRow,"first","last"),"data-rowindex":0},react_default.a.createElement("td",{className:classnames_default()(styles.a.tableCell,"first","last"),colSpan:colSpan,style:{height:200,background:"var(--bgcolor)"}},!isLoading&&react_default.a.createElement(styles.b.EmptyWrapper,{className:styles.a.emptyWrapper},emptyContent)))))}EmptyTable.defaultProps={emptyContent:react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("img",{alt:"empty-image",className:"empty-image",src:"//img.alicdn.com/tfs/TB1l1LcM3HqK1RjSZJnXXbNLpXa-50-50.svg"}),react_default.a.createElement("div",{className:"empty-tips"},"没有符合查询条件的数据",react_default.a.createElement("br",null),"请修改条件后重新查询"))},EmptyTable.displayName="EmptyTable";try{empty.displayName="empty",empty.__docgenInfo={description:"",displayName:"empty",props:{colgroup:{defaultValue:null,description:"",name:"colgroup",required:!0,type:{name:"ReactNode"}},colSpan:{defaultValue:null,description:"",name:"colSpan",required:!0,type:{name:"number"}},isLoading:{defaultValue:null,description:"",name:"isLoading",required:!0,type:{name:"boolean"}},emptyContent:{defaultValue:{value:'(\n    <>\n      <img alt="empty-image" className="empty-image" src="//img.alicdn.com/tfs/TB1l1LcM3HqK1RjSZJnXXbNLpXa-50-50.svg" />\n      <div className="empty-tips">\n        没有符合查询条件的数据\n        <br />\n        请修改条件后重新查询\n      </div>\n    </>\n  )'},description:"",name:"emptyContent",required:!1,type:{name:"ReactNode"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/base-table/empty.tsx#empty"]={docgenInfo:empty.__docgenInfo,name:"empty",path:"src/base-table/empty.tsx#empty"})}catch(__react_docgen_typescript_loader_error){}__webpack_require__(143),__webpack_require__(741),__webpack_require__(334),__webpack_require__(103);var isLeafNode=__webpack_require__(58),collectNodes=__webpack_require__(370),defer=(__webpack_require__(65),__webpack_require__(2085),__webpack_require__(19),__webpack_require__(90),__webpack_require__(66),__webpack_require__(2227)),fromEvent=__webpack_require__(2207),scheduler_async=__webpack_require__(357),throttleTime=__webpack_require__(2229);function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var STYLED_VERSION=null!=__webpack_require__(40).a?"v5":"v3",STYLED_REF_PROP="v3"===STYLED_VERSION?"innerRef":"ref";function sum(arr){var result=0;return arr.forEach((function(x){result+=x})),result}var scrollBarSize$,throttledWindowResize$=Object(defer.a)((function(){return Object(fromEvent.a)(window,"resize").pipe(Object(throttleTime.a)(150,scheduler_async.b,{leading:!0,trailing:!0}))}));function getScrollbarSizeImpl(){var scrollDiv=document.createElement("div");scrollDiv.style.position="absolute",scrollDiv.style.width="100px",scrollDiv.style.height="100px",scrollDiv.style.overflow="scroll",scrollDiv.style.top="-9999px",document.body.appendChild(scrollDiv);var scrollbarWidth=scrollDiv.offsetWidth-scrollDiv.clientWidth,scrollbarHeight=scrollDiv.offsetHeight-scrollDiv.clientHeight;return document.body.removeChild(scrollDiv),{width:scrollbarWidth,height:scrollbarHeight}}function syncScrollLeft(elements,callback){var bypassSet=new Set;var _step2,subscription=new Subscription.a,_loop=function _loop(ele){var listener=function listener(){if(bypassSet.has(ele))bypassSet.delete(ele);else{var scrollLeft=ele.scrollLeft;!function publishScrollLeft(origin,scrollLeft){bypassSet.clear();var _step,_iterator=_createForOfIteratorHelper(elements);try{for(_iterator.s();!(_step=_iterator.n()).done;){var elem=_step.value;elem!==origin&&(elem.scrollLeft=scrollLeft,bypassSet.add(elem))}}catch(err){_iterator.e(err)}finally{_iterator.f()}}(ele,scrollLeft),callback(scrollLeft)}};ele.addEventListener("scroll",listener,{passive:!0}),subscription.add((function(){return ele.removeEventListener("scroll",listener)}))},_iterator2=_createForOfIteratorHelper(elements);try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){_loop(_step2.value)}}catch(err){_iterator2.e(err)}finally{_iterator2.f()}return subscription}function query(elem,className){return null==elem?void 0:elem.querySelector("."+className)}function shallowEqual(objA,objB){var hasOwnProperty=Object.prototype.hasOwnProperty;if(Object.is(objA,objB))return!0;if("object"!==_typeof(objA)||null===objA||"object"!==_typeof(objB)||null===objB)return!1;var keysA=Object.keys(objA),keysB=Object.keys(objB);if(keysA.length!==keysB.length)return!1;for(var i=0;i<keysA.length;i++)if(!hasOwnProperty.call(objB,keysA[i])||!Object.is(objA[keysA[i]],objB[keysA[i]]))return!1;return!0}try{sum.displayName="sum",sum.__docgenInfo={description:"",displayName:"sum",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/base-table/utils.tsx#sum"]={docgenInfo:sum.__docgenInfo,name:"sum",path:"src/base-table/utils.tsx#sum"})}catch(__react_docgen_typescript_loader_error){}try{syncScrollLeft.displayName="syncScrollLeft",syncScrollLeft.__docgenInfo={description:"同步多个元素之间的 scrollLeft, 每当 scrollLeft 发生变化时 callback 会被调用",displayName:"syncScrollLeft",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/base-table/utils.tsx#syncScrollLeft"]={docgenInfo:syncScrollLeft.__docgenInfo,name:"syncScrollLeft",path:"src/base-table/utils.tsx#syncScrollLeft"})}catch(__react_docgen_typescript_loader_error){}try{shallowEqual.displayName="shallowEqual",shallowEqual.__docgenInfo={description:"Performs equality by iterating through keys on an object and returning false\nwhen any key has values which are not strictly equal between the arguments.\nReturns true when the values of all keys are strictly equal.",displayName:"shallowEqual",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/base-table/utils.tsx#shallowEqual"]={docgenInfo:shallowEqual.__docgenInfo,name:"shallowEqual",path:"src/base-table/utils.tsx#shallowEqual"})}catch(__react_docgen_typescript_loader_error){}try{STYLED_VERSION.displayName="STYLED_VERSION",STYLED_VERSION.__docgenInfo={description:"styled-components 类库的版本，ali-react-table 同时支持 v3 和 v5",displayName:"STYLED_VERSION",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/base-table/utils.tsx#STYLED_VERSION"]={docgenInfo:STYLED_VERSION.__docgenInfo,name:"STYLED_VERSION",path:"src/base-table/utils.tsx#STYLED_VERSION"})}catch(__react_docgen_typescript_loader_error){}function getDerivedStateFromProps_typeof(obj){return(getDerivedStateFromProps_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function getDerivedStateFromProps_createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=function getDerivedStateFromProps_unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return getDerivedStateFromProps_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return getDerivedStateFromProps_arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function getDerivedStateFromProps_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function resolveVirtualEnabled(virtualEnum,defaultValue){return null==virtualEnum||"auto"===virtualEnum?defaultValue:virtualEnum}function getLeftNestedLockCount(columns){var _step2,nestedCount=0,_iterator2=getDerivedStateFromProps_createForOfIteratorHelper(columns);try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){if(!isLock(_step2.value))break;nestedCount+=1}}catch(err){_iterator2.e(err)}finally{_iterator2.f()}return nestedCount;function isLock(col){return Object(isLeafNode.a)(col)?col.lock:col.lock||col.children.some(isLock)}}function getDerivedStateFromProps(props,state){var useVirtualProp=props.useVirtual,columnsProp=props.columns,dataSourceProp=props.dataSource,columns=function processColumns(columns,defaultColumnWidth){return function dfs(columns){var _step,result=[],_iterator=getDerivedStateFromProps_createForOfIteratorHelper(columns);try{for(_iterator.s();!(_step=_iterator.n()).done;){var column=_step.value;if(null==column.width&&null!=defaultColumnWidth&&(column=Object.assign({},column,{width:defaultColumnWidth})),Object(isLeafNode.a)(column))column.hidden||result.push(column);else{var nextChildren=dfs(column.children);nextChildren.length>0&&result.push(Object.assign({},column,{children:nextChildren}))}}}catch(err){_iterator.e(err)}finally{_iterator.f()}return result}(columns)}(columnsProp,props.defaultColumnWidth),leftNestedLockCount=getLeftNestedLockCount(columns),fullFlat=Object(collectNodes.a)(columns,"leaf-only");if(leftNestedLockCount===columns.length)return{flat:{left:[],right:[],full:fullFlat,center:fullFlat},nested:{left:[],right:[],full:columns,center:columns},useVirtual:{horizontal:!1,vertical:!1,header:!1},stickyLeftMap:new Map,stickyRightMap:new Map};for(var leftNested=columns.slice(0,leftNestedLockCount),rightNestedLockCount=getLeftNestedLockCount(columns.slice().reverse()),centerNested=columns.slice(leftNestedLockCount,columns.length-rightNestedLockCount),rightNested=columns.slice(columns.length-rightNestedLockCount),shouldEnableHozVirtual=fullFlat.length>=100&&fullFlat.every((function(col){return null!=col.width})),shouldEnableVerVirtual=dataSourceProp.length>=100,useVirtual="object"!==getDerivedStateFromProps_typeof(useVirtualProp)?{horizontal:resolveVirtualEnabled(useVirtualProp,shouldEnableHozVirtual),vertical:resolveVirtualEnabled(useVirtualProp,shouldEnableVerVirtual),header:resolveVirtualEnabled(useVirtualProp,!1)}:{horizontal:resolveVirtualEnabled(useVirtualProp.horizontal,shouldEnableHozVirtual),vertical:resolveVirtualEnabled(useVirtualProp.vertical,shouldEnableVerVirtual),header:resolveVirtualEnabled(useVirtualProp.header,shouldEnableVerVirtual)},flat={left:Object(collectNodes.a)(leftNested,"leaf-only"),full:fullFlat,right:Object(collectNodes.a)(rightNested,"leaf-only"),center:Object(collectNodes.a)(centerNested,"leaf-only")},fullFlatCount=flat.full.length,leftFlatCount=flat.left.length,rightFlatCount=flat.right.length,stickyLeftMap=new Map,stickyLeft=0,i=0;i<leftFlatCount;i++)stickyLeftMap.set(i,stickyLeft),stickyLeft+=flat.full[i].width;for(var stickyRightMap=new Map,stickyRight=0,_i=0;_i<rightFlatCount;_i++)stickyRightMap.set(fullFlatCount-1-_i,stickyRight),stickyRight+=flat.full[fullFlatCount-1-_i].width;return{flat:flat,nested:{left:leftNested,full:columns,right:rightNested,center:centerNested},useVirtual:useVirtual,stickyLeftMap:stickyLeftMap,stickyRightMap:stickyRightMap}}try{getDerivedStateFromProps.displayName="getDerivedStateFromProps",getDerivedStateFromProps.__docgenInfo={description:"",displayName:"getDerivedStateFromProps",props:{primaryKey:{defaultValue:null,description:"主键",name:"primaryKey",required:!1,type:{name:"string | ((record: any, rowIndex: number) => string)"}},dataSource:{defaultValue:null,description:"表格展示的数据源",name:"dataSource",required:!0,type:{name:"any[]"}},columns:{defaultValue:null,description:"表格的列配置",name:"columns",required:!0,type:{name:"ArtColumn[]"}},useVirtual:{defaultValue:null,description:"是否开启虚拟滚动",name:"useVirtual",required:!1,type:{name:'boolean | "auto" | { horizontal?: VirtualEnum; vertical?: VirtualEnum; header?: VirtualEnum; }'}},isStickyHead:{defaultValue:null,description:"表格头部是否置顶，默认为 true",name:"isStickyHead",required:!1,type:{name:"boolean"}},stickyTop:{defaultValue:null,description:"表格置顶后，距离顶部的距离",name:"stickyTop",required:!1,type:{name:"number"}},stickyBottom:{defaultValue:null,description:"表格置顶后，距离底部的距离",name:"stickyBottom",required:!1,type:{name:"number"}},className:{defaultValue:null,description:"自定义类名",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"自定义内联样式",name:"style",required:!1,type:{name:"CSSProperties & Partial<{ '--color': string; '--bgcolor': string; '--hover-color': string; '--row-height': string; '--header-color': string; '--header-bgcolor': string; '--header-row-height': string; ... 6 more ...; '--header-cell-border-vertical': string; }>"}},hasHeader:{defaultValue:null,description:"表格是否具有头部",name:"hasHeader",required:!1,type:{name:"boolean"}},useOuterBorder:{defaultValue:null,description:"使用来自外层 div 的边框代替单元格的外边框",name:"useOuterBorder",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"表格是否在加载中",name:"isLoading",required:!1,type:{name:"boolean"}},emptyContent:{defaultValue:null,description:"数据为空的时候的表格内容展现",name:"emptyContent",required:!1,type:{name:"ReactNode"}},defaultColumnWidth:{defaultValue:null,description:"列的默认宽度",name:"defaultColumnWidth",required:!1,type:{name:"number"}},flowRoot:{defaultValue:null,description:"表格所处于的块格式化上下文(BFC)\nhttps://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context",name:"flowRoot",required:!1,type:{name:'"auto" | "self" | (() => HTMLElement | (Window & typeof globalThis)) | HTMLElement | (Window & typeof globalThis)'}},getRowProps:{defaultValue:null,description:"",name:"getRowProps",required:!1,type:{name:"(record: any, rowIndex: number) => HTMLAttributes<HTMLTableRowElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/base-table/getDerivedStateFromProps.tsx#getDerivedStateFromProps"]={docgenInfo:getDerivedStateFromProps.__docgenInfo,name:"getDerivedStateFromProps",path:"src/base-table/getDerivedStateFromProps.tsx#getDerivedStateFromProps"})}catch(__react_docgen_typescript_loader_error){}var getTreeDepth=__webpack_require__(912);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return header_arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||header_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function header_unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return header_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?header_arrayLikeToArray(o,minLen):void 0}}function header_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function range(n){for(var array=[],i=0;i<n;i++)array.push(i);return array}function filterNestedCenter(centerNested,hoz,leftFlatCount){return function dfs(cols,startColIndex){var _step,leafCount=0,filtered=[],_iterator=function header_createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=header_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}(cols);try{for(_iterator.s();!(_step=_iterator.n()).done;){var col=_step.value,colIndex=startColIndex+leafCount;if(Object(isLeafNode.a)(col))leafCount+=1,leftFlatCount+hoz.leftIndex<=colIndex&&colIndex<leftFlatCount+hoz.rightIndex&&filtered.push({colIndex:colIndex,col:col});else{var dfsRes=dfs(col.children,colIndex);leafCount+=dfsRes.leafCount,dfsRes.filtered.length>0&&filtered.push({colIndex:colIndex,col:col,children:dfsRes.filtered})}}}catch(err){_iterator.e(err)}finally{_iterator.f()}return{filtered:filtered,leafCount:leafCount}}(centerNested,leftFlatCount).filtered}function calculateLeveledAndFlat(inputNested,rowCount){for(var leveled=[],depth=0;depth<rowCount;depth++)leveled.push([]);var flat=[];return function dfs(input,depth){for(var leafCount=0,i=0;i<input.length;i++){var indexedCol=input[i];if(Object(isLeafNode.a)(indexedCol)){leafCount+=1;var wrapped={type:"normal",width:indexedCol.col.width,col:indexedCol.col,colIndex:indexedCol.colIndex,colSpan:1,isLeaf:!0};leveled[depth].push(wrapped),flat.push(wrapped)}else{var dfsRes=dfs(indexedCol.children,depth+1);leafCount+=dfsRes.leafCount,dfsRes.leafCount>0&&leveled[depth].push({type:"normal",width:indexedCol.col.width,col:indexedCol.col,colIndex:indexedCol.colIndex,colSpan:dfsRes.leafCount,isLeaf:!1})}}return{leafCount:leafCount}}(inputNested,0),{flat:flat,leveled:leveled}}function attachColIndex(inputNested,colIndexOffset){return function dfs(input,startColIndex){for(var result=[],leafCount=0,i=0;i<input.length;i++){var col=input[i],colIndex=startColIndex+leafCount;if(Object(isLeafNode.a)(col))leafCount+=1,result.push({colIndex:colIndex,col:col});else{var sub=dfs(col.children,colIndex);leafCount+=sub.leafCount,sub.leafCount>0&&result.push({col:col,colIndex:colIndex,children:sub.result})}}return{result:result,leafCount:leafCount}}(inputNested,colIndexOffset).result}function TableHeader(props){var nested=props.nested,flat=props.flat,stickyLeftMap=props.stickyLeftMap,stickyRightMap=props.stickyRightMap,rowCount=Object(getTreeDepth.a)(nested.full)+1,renderInfo=function calculateRenderInfo(_ref,rowCount){var flat=_ref.flat,nested=_ref.nested,hoz=_ref.hoz;if(_ref.useVirtual.header){var leftPart=calculateLeveledAndFlat(attachColIndex(nested.left,0),rowCount),centerPart=calculateLeveledAndFlat(filterNestedCenter(nested.center,hoz,flat.left.length),rowCount),rightPart=calculateLeveledAndFlat(attachColIndex(nested.right,flat.left.length+flat.center.length),rowCount);return{flat:[].concat(_toConsumableArray(leftPart.flat),[{type:"blank",width:hoz.leftBlank,blankSide:"left"}],_toConsumableArray(centerPart.flat),[{type:"blank",width:hoz.rightBlank,blankSide:"right"}],_toConsumableArray(rightPart.flat)),leveled:range(rowCount).map((function(depth){return[].concat(_toConsumableArray(leftPart.leveled[depth]),[{type:"blank",width:hoz.leftBlank,blankSide:"left"}],_toConsumableArray(centerPart.leveled[depth]),[{type:"blank",width:hoz.rightBlank,blankSide:"right"}],_toConsumableArray(rightPart.leveled[depth]))}))}}return calculateLeveledAndFlat(attachColIndex(nested.full,0),rowCount)}(props,rowCount),fullFlatCount=flat.full.length,leftFlatCount=flat.left.length,rightFlatCount=flat.right.length,tbody=renderInfo.leveled.map((function(wrappedCols,level){var headerCells=wrappedCols.map((function(wrapped){if("normal"===wrapped.type){var _col$headerCellProps,_col$title,colIndex=wrapped.colIndex,colSpan=wrapped.colSpan,isLeaf=wrapped.isLeaf,col=wrapped.col,headerCellProps=null!==(_col$headerCellProps=col.headerCellProps)&&void 0!==_col$headerCellProps?_col$headerCellProps:{},positionStyle={};return colIndex<leftFlatCount?(positionStyle.position="sticky",positionStyle.left=stickyLeftMap.get(colIndex)):colIndex>=fullFlatCount-rightFlatCount&&(positionStyle.position="sticky",positionStyle.right=stickyRightMap.get(colIndex)),react_default.a.createElement("th",_extends({key:colIndex},headerCellProps,{className:classnames_default()(styles.a.tableHeaderCell,headerCellProps.className,{first:0===colIndex,last:colIndex+colSpan===fullFlatCount,"lock-left":colIndex<leftFlatCount,"lock-right":colIndex>=fullFlatCount-rightFlatCount}),colSpan:colSpan,rowSpan:isLeaf?rowCount-level:void 0,style:Object.assign({textAlign:col.align},headerCellProps.style,positionStyle)}),null!==(_col$title=col.title)&&void 0!==_col$title?_col$title:col.name)}return wrapped.width>0?react_default.a.createElement("th",{key:wrapped.blankSide}):null}));return react_default.a.createElement("tr",{key:level,className:classnames_default()(styles.a.tableHeaderRow,{first:0===level,last:level===rowCount-1})},headerCells)}));return react_default.a.createElement("table",null,react_default.a.createElement("colgroup",null,renderInfo.flat.map((function(wrapped){return"blank"===wrapped.type?wrapped.width>0?react_default.a.createElement("col",{key:wrapped.blankSide,style:{width:wrapped.width}}):null:react_default.a.createElement("col",{key:wrapped.colIndex,style:{width:wrapped.width}})}))),react_default.a.createElement("tbody",null,tbody))}TableHeader.displayName="TableHeader";try{header.displayName="header",header.__docgenInfo={description:"",displayName:"header",props:{nested:{defaultValue:null,description:"",name:"nested",required:!0,type:{name:"{ full: ArtColumn[]; left: ArtColumn[]; center: ArtColumn[]; right: ArtColumn[]; }"}},flat:{defaultValue:null,description:"",name:"flat",required:!0,type:{name:"{ full: ArtColumn[]; left: ArtColumn[]; center: ArtColumn[]; right: ArtColumn[]; }"}},useVirtual:{defaultValue:null,description:"",name:"useVirtual",required:!0,type:{name:"{ horizontal: boolean; vertical: boolean; header: boolean; }"}},hoz:{defaultValue:null,description:"",name:"hoz",required:!0,type:{name:"HorizontalRenderRange"}},stickyLeftMap:{defaultValue:null,description:"",name:"stickyLeftMap",required:!0,type:{name:"Map<number, number>"}},stickyRightMap:{defaultValue:null,description:"",name:"stickyRightMap",required:!0,type:{name:"Map<number, number>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/base-table/header.tsx#header"]={docgenInfo:header.__docgenInfo,name:"header",path:"src/base-table/header.tsx#header"})}catch(__react_docgen_typescript_loader_error){}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}var ItemSizeStore_ItemSizeStore=function(){function ItemSizeStore(){!function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,ItemSizeStore),this.cache=[]}return function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}(ItemSizeStore,[{key:"getRenderRangeWhenBelowView",value:function getRenderRangeWhenBelowView(itemCount){var start={topIndex:0,topBlank:0},end=this.getEnd(0,start,itemCount);return Object.assign({},start,end)}},{key:"getRenderRangeWhenAboveView",value:function getRenderRangeWhenAboveView(itemCount){var totalSize=this.getEstimatedTotalSize(itemCount),start=this.getStart(totalSize,itemCount),end=this.getEnd(totalSize,start,itemCount);return Object.assign({},start,end)}},{key:"getRenderRangeWhenInView",value:function getRenderRangeWhenInView(offset,maxRenderHeight,itemCount){var start=this.getStart(offset,itemCount),end=this.getEnd(offset+maxRenderHeight,start,itemCount);return Object.assign({},start,end)}},{key:"binarySearchStart",value:function binarySearchStart(searchOffset){for(var min=0,max=this.cache.length-1;min<max;){var middle=Math.ceil((min+max)/2);this.cache[middle].offset<=searchOffset?min=middle:max=middle-1}return max}},{key:"getStart",value:function getStart(offset,itemCount){if(0===this.cache.length)return{topIndex:0,topBlank:0};var maxBottom=this.getMaxBottom();if(maxBottom<offset){for(var lack=offset-maxBottom,maxLackCount=itemCount-this.cache.length,lackCount=Math.min(Math.floor(lack/48),maxLackCount),i=0,cntOffset=maxBottom;i<lackCount;i+=1,cntOffset+=48)this.cache.push({offset:cntOffset,size:48});var topIndex=this.cache.length-1,topBlank=this.cache[topIndex].offset;return this.overscanUpwards(topIndex,topBlank)}var _topIndex=this.binarySearchStart(offset),_topBlank=this.cache[_topIndex].offset;return this.overscanUpwards(_topIndex,_topBlank)}},{key:"overscanUpwards",value:function overscanUpwards(topIndex,topBlank){for(var overscanSize=0,overscanCount=0;overscanCount<topIndex&&overscanSize<100;)overscanCount+=1,overscanSize+=this.getItemSize(topIndex-overscanCount);return{topIndex:topIndex-overscanCount,topBlank:topBlank-overscanSize}}},{key:"getEnd",value:function getEnd(endOffset,startInfo,itemCount){for(var bottomIndex=startInfo.topIndex,offset=startInfo.topBlank;bottomIndex<itemCount&&offset<endOffset;)offset+=this.getItemSize(bottomIndex),bottomIndex+=1;var bottomBlank=this.getEstimatedTotalSize(itemCount)-offset;return this.overscanDownwards(bottomIndex,bottomBlank,itemCount)}},{key:"overscanDownwards",value:function overscanDownwards(bottomIndex,bottomBlank,itemCount){for(var overscanSize=0,overscanCount=0;overscanCount<itemCount-bottomIndex&&overscanSize<100;)overscanSize+=this.getItemSize(bottomIndex+overscanCount),overscanCount+=1;return{bottomIndex:bottomIndex+overscanCount,bottomBlank:bottomBlank-overscanSize}}},{key:"getItemSize",value:function getItemSize(index){return index<this.cache.length?this.cache[index].size:48}},{key:"setMaxItemCount",value:function setMaxItemCount(itemCount){itemCount<this.cache.length&&(this.cache.length=itemCount)}},{key:"updateItem",value:function updateItem(index,offset,size){this.cache[index]={offset:offset,size:size}}},{key:"getEstimatedTotalSize",value:function getEstimatedTotalSize(itemCount){var measuredTotalSize=0,measuredCount=0,size=this.cache.length;if(size>0){var lastItem=this.cache[size-1];measuredTotalSize=lastItem.offset+lastItem.size,measuredCount=size}return measuredTotalSize+48*(itemCount-measuredCount)}},{key:"getMaxBottom",value:function getMaxBottom(){if(0===this.cache.length)return 0;var item=this.cache[this.cache.length-1];return item.offset+item.size}}],[{key:"getFullRenderRange",value:function getFullRenderRange(itemCount){return{topIndex:0,topBlank:0,bottomIndex:itemCount,bottomBlank:0}}}]),ItemSizeStore}(),SpanManager=__webpack_require__(358),ResizeObserver_es=__webpack_require__(913),Observable=__webpack_require__(49),merge=__webpack_require__(2225);function getRect(ele){return ele===window?{left:0,top:0,bottom:window.innerHeight,right:window.innerWidth}:ele.getBoundingClientRect()}function fromResizeEvent(element){return element===window?Object(fromEvent.a)(element,"resize"):new Observable.a((function(subscriber){var resizeObserver=new ResizeObserver_es.a((function(){subscriber.next()}));return resizeObserver.observe(element),function(){resizeObserver.disconnect()}}))}function getVisiblePartObservable(target,flowRoot){return Object(merge.a)(Object(fromEvent.a)(flowRoot,"scroll"),fromResizeEvent(flowRoot),fromResizeEvent(target)).pipe(map.a((function(){return function getVisiblePart(target,flowRoot){var targetRect=getRect(target),rootRect=getRect(flowRoot);return{offsetY:Math.max(0,rootRect.top-targetRect.top),offsetX:Math.max(0,rootRect.left-targetRect.left),clipRect:{left:Math.max(targetRect.left,rootRect.left),top:Math.max(targetRect.top,rootRect.top),right:Math.min(targetRect.right,rootRect.right),bottom:Math.min(targetRect.bottom,rootRect.bottom)}}}(target,flowRoot)})))}var loading_LoadingIndicatorIcon=function LoadingIndicatorIcon(_ref){var size=_ref.size;return react_default.a.createElement("svg",{className:styles.a.loadingIndicatorIcon,style:{margin:"auto",display:"block",shapeRendering:"auto"},width:size,height:size,viewBox:"0 0 100 100",preserveAspectRatio:"xMidYMid"},react_default.a.createElement("circle",{cx:"50",cy:"50",r:"40",fill:"none",stroke:"#23a7fa",strokeDasharray:"188 64",strokeLinecap:"round",strokeWidth:"10"},react_default.a.createElement("animateTransform",{attributeName:"transform",dur:"1.5s",keyTimes:"0;1",repeatCount:"indefinite",type:"rotate",values:"0 50 50;360 50 50"})))};function Loading(_ref2){var visible=_ref2.visible,children=_ref2.children;return react_default.a.createElement("div",{className:styles.a.loadingWrapper,style:{position:"relative"}},visible&&react_default.a.createElement("div",{className:styles.a.loadingIndicatorWrapper,style:{position:"absolute",left:0,right:0,top:0,bottom:0}},react_default.a.createElement("div",{className:styles.a.loadingIndicator,style:{position:"sticky",zIndex:1,top:40,left:0,right:0}},react_default.a.createElement(loading_LoadingIndicatorIcon,{size:40}))),react_default.a.createElement("div",{className:styles.a.loadingContentWrapper,style:{filter:visible?"blur(1px)":"none"}},children))}loading_LoadingIndicatorIcon.displayName="LoadingIndicatorIcon",Loading.defaultProps={visible:!0},Loading.displayName="Loading";try{loading.displayName="loading",loading.__docgenInfo={description:"",displayName:"loading",props:{visible:{defaultValue:{value:!0},description:"",name:"visible",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/base-table/loading.tsx#loading"]={docgenInfo:loading.__docgenInfo,name:"loading",path:"src/base-table/loading.tsx#loading"})}catch(__react_docgen_typescript_loader_error){}function table_typeof(obj){return(table_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||table_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function table_extends(){return(table_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function table_toConsumableArray(arr){return function table_arrayWithoutHoles(arr){if(Array.isArray(arr))return table_arrayLikeToArray(arr)}(arr)||function table_iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||table_unsupportedIterableToArray(arr)||function table_nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function table_unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return table_arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?table_arrayLikeToArray(o,minLen):void 0}}function table_arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function table_defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function table_createClass(Constructor,protoProps,staticProps){return protoProps&&table_defineProperties(Constructor.prototype,protoProps),staticProps&&table_defineProperties(Constructor,staticProps),Constructor}function _setPrototypeOf(o,p){return(_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){return o.__proto__=p,o})(o,p)}function _createSuper(Derived){var hasNativeReflectConstruct=function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function _createSuperInternal(){var result,Super=_getPrototypeOf(Derived);if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else result=Super.apply(this,arguments);return _possibleConstructorReturn(this,result)}}function _possibleConstructorReturn(self,call){return!call||"object"!==table_typeof(call)&&"function"!=typeof call?function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}(self):call}function _getPrototypeOf(o){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o)})(o)}var table_BaseTable=function(_React$Component){!function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function");subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:!0,configurable:!0}}),superClass&&_setPrototypeOf(subClass,superClass)}(BaseTable,_React$Component);var _super=_createSuper(BaseTable);function BaseTable(props){var _this;return function table_classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}(this,BaseTable),(_this=_super.call(this,props)).store=new ItemSizeStore_ItemSizeStore,_this.artTableWrapperRef=react_default.a.createRef(),_this.doms=void 0,_this.rootSubscription=new Subscription.a,_this.data$=void 0,_this.state=Object.assign({},getDerivedStateFromProps(props),{hasScroll:!0,needRenderLock:!0,offsetY:0,offsetX:0,maxRenderHeight:600,maxRenderWidth:800}),_this}return table_createClass(BaseTable,[{key:"getDoms",value:function getDoms(){return this.doms}}]),table_createClass(BaseTable,[{key:"updateStickyScroll",value:function updateStickyScroll(){var _this$doms=this.doms,stickyScroll=_this$doms.stickyScroll,artTable=_this$doms.artTable,stickyScrollItem=_this$doms.stickyScrollItem;if(artTable){var innerTableWidth=artTable.querySelector(".".concat(styles.a.tableBody," table")).offsetWidth,artTableWidth=artTable.offsetWidth,scrollbarSize=function getScrollbarSize(){return null==scrollBarSize$&&(scrollBarSize$=new BehaviorSubject.a(getScrollbarSizeImpl()),throttledWindowResize$.pipe(Object(map.a)((function(){return getScrollbarSizeImpl()}))).subscribe(scrollBarSize$)),scrollBarSize$.value}();stickyScroll.style.marginTop="-".concat(scrollbarSize.height,"px"),artTableWidth>=innerTableWidth?this.state.hasScroll&&this.setState({hasScroll:!1}):!this.state.hasScroll&&scrollbarSize.height>5&&this.setState({hasScroll:!0}),stickyScrollItem.style.width="".concat(innerTableWidth,"px")}}},{key:"renderTableHeader",value:function renderTableHeader(_ref){var hoz=_ref.horizontal,_this$props=this.props,stickyTop=_this$props.stickyTop,hasHeader=_this$props.hasHeader,_this$state=this.state,flat=_this$state.flat,nested=_this$state.nested,useVirtual=_this$state.useVirtual,stickyLeftMap=_this$state.stickyLeftMap,stickyRightMap=_this$state.stickyRightMap;return react_default.a.createElement("div",{className:styles.a.tableHeader,style:{top:stickyTop,display:hasHeader?"block":"none"}},react_default.a.createElement(TableHeader,{nested:nested,flat:flat,hoz:hoz,useVirtual:useVirtual,stickyLeftMap:stickyLeftMap,stickyRightMap:stickyRightMap}))}},{key:"updateOffsetX",value:function updateOffsetX(nextOffsetX){this.state.useVirtual.horizontal&&Math.abs(nextOffsetX-this.state.offsetX)>=50&&this.setState({offsetX:nextOffsetX})}},{key:"syncHorizontalScrollFromTableBody",value:function syncHorizontalScrollFromTableBody(){this.syncHorizontalScroll(this.doms.tableBody.scrollLeft)}},{key:"syncHorizontalScroll",value:function syncHorizontalScroll(x){this.updateOffsetX(x);var _this$doms2=this.doms,tableBody=_this$doms2.tableBody,artTableWrapper=_this$doms2.artTableWrapper,flat=this.state.flat,showLeftLockShadow=flat.left.length>0&&this.state.needRenderLock&&x>0;query(artTableWrapper,styles.a.leftLockShadow).style.display=showLeftLockShadow?"block":"none";var showRightLockShadow=flat.right.length>0&&this.state.needRenderLock&&x<tableBody.scrollWidth-tableBody.clientWidth;query(artTableWrapper,styles.a.rightLockShadow).style.display=showRightLockShadow?"block":"none"}},{key:"getVerticalRenderRange",value:function getVerticalRenderRange(){var dataSource=this.props.dataSource,_this$state2=this.state,useVirtual=_this$state2.useVirtual,offsetY=_this$state2.offsetY,maxRenderHeight=_this$state2.maxRenderHeight,itemCount=dataSource.length;return useVirtual.vertical?maxRenderHeight<=0?offsetY<=0?this.store.getRenderRangeWhenBelowView(itemCount):this.store.getRenderRangeWhenAboveView(itemCount):this.store.getRenderRangeWhenInView(offsetY,maxRenderHeight,itemCount):ItemSizeStore_ItemSizeStore.getFullRenderRange(itemCount)}},{key:"getHorizontalRenderRange",value:function getHorizontalRenderRange(){var _this$state3=this.state,offsetX=_this$state3.offsetX,maxRenderWidth=_this$state3.maxRenderWidth,useVirtual=_this$state3.useVirtual,flat=_this$state3.flat;if(!useVirtual.horizontal)return{leftIndex:0,leftBlank:0,rightIndex:flat.full.length,rightBlank:0};for(var leftIndex=0,centerCount=0,leftBlank=0,centerRenderWidth=0,overscannedOffsetX=Math.max(0,offsetX-100);leftIndex<flat.center.length;){var col=flat.center[leftIndex];if(!(col.width+leftBlank<overscannedOffsetX))break;leftIndex+=1,leftBlank+=col.width}for(var minCenterRenderWidth=maxRenderWidth+(overscannedOffsetX-leftBlank)+200;leftIndex+centerCount<flat.center.length;){var _col=flat.center[leftIndex+centerCount];if(!(_col.width+centerRenderWidth<minCenterRenderWidth))break;centerRenderWidth+=_col.width,centerCount+=1}var rightBlankCount=flat.center.length-leftIndex-centerCount;return{leftIndex:leftIndex,leftBlank:leftBlank,rightIndex:leftIndex+centerCount,rightBlank:sum(flat.center.slice(flat.center.length-rightBlankCount).map((function(col){return col.width})))}}},{key:"getRenderRange",value:function getRenderRange(){return{vertical:this.getVerticalRenderRange(),horizontal:this.getHorizontalRenderRange()}}},{key:"getFlatHozWrappedCols",value:function getFlatHozWrappedCols(hoz){var flat=this.state.flat;return[].concat(table_toConsumableArray(flat.left.map((function(col,i){return{type:"normal",col:col,colIndex:i}}))),[hoz.leftBlank>0&&{type:"blank",blankSide:"left",width:hoz.leftBlank}],table_toConsumableArray(flat.center.slice(hoz.leftIndex,hoz.rightIndex).map((function(col,i){return{type:"normal",col:col,colIndex:flat.left.length+hoz.leftIndex+i}}))),[hoz.rightBlank>0&&{type:"blank",blankSide:"right",width:hoz.rightBlank}],table_toConsumableArray(flat.right.map((function(col,i){return{type:"normal",col:col,colIndex:flat.full.length-flat.right.length+i}})))).filter(Boolean)}},{key:"renderTableBody",value:function renderTableBody(renderRange){var ver=renderRange.vertical,hoz=renderRange.horizontal,_this$props2=this.props,isLoading=_this$props2.isLoading,dataSource=_this$props2.dataSource,getRowProps=_this$props2.getRowProps,primaryKey=_this$props2.primaryKey,emptyContent=_this$props2.emptyContent,wrappedCols=this.getFlatHozWrappedCols(hoz),colgroup=react_default.a.createElement("colgroup",null,wrappedCols.map((function(wrapped){return"blank"===wrapped.type?react_default.a.createElement("col",{key:wrapped.blankSide,style:{width:wrapped.width}}):react_default.a.createElement("col",{key:wrapped.colIndex,style:{width:wrapped.col.width}})})));if(ver.bottomIndex-ver.topIndex==0)return react_default.a.createElement("div",{className:styles.a.tableBody},react_default.a.createElement(EmptyTable,{colgroup:colgroup,colSpan:wrappedCols.length,isLoading:isLoading,emptyContent:emptyContent}));var _this$state4=this.state,flat=_this$state4.flat,stickyLeftMap=_this$state4.stickyLeftMap,stickyRightMap=_this$state4.stickyRightMap,fullFlatCount=flat.full.length,leftFlatCount=flat.left.length,rightFlatCount=flat.right.length,spanManager=new SpanManager.a,rows=dataSource.slice(ver.topIndex,ver.bottomIndex).map((function renderRow(record,i){var rowIndex=ver.topIndex+i;spanManager.stripUpwards(rowIndex);var rowProps=getRowProps(record,rowIndex),rowClass=classnames_default()(styles.a.tableRow,{first:0===rowIndex,last:rowIndex===dataSource.length-1,even:rowIndex%2==0,odd:rowIndex%2==1},null==rowProps?void 0:rowProps.className);return react_default.a.createElement("tr",table_extends({},rowProps,{className:rowClass,key:Object(internals.safeGetRowKey)(primaryKey,record,rowIndex),"data-rowindex":rowIndex}),wrappedCols.map((function(wrapped){return"blank"===wrapped.type?react_default.a.createElement("td",{key:wrapped.blankSide}):function renderCell(record,rowIndex,column,colIndex){var _column$getCellProps,_column$getCellProps2;if(spanManager.testSkip(rowIndex,colIndex))return null;var value=Object(internals.safeGetValue)(column,record,rowIndex),cellProps=null!==(_column$getCellProps=null===(_column$getCellProps2=column.getCellProps)||void 0===_column$getCellProps2?void 0:_column$getCellProps2.call(column,value,record,rowIndex))&&void 0!==_column$getCellProps?_column$getCellProps:{},cellContent=value;column.render&&(cellContent=column.render(value,record,rowIndex));var colSpan=1,rowSpan=1;if(column.getSpanRect){var spanRect=column.getSpanRect(value,record,rowIndex);colSpan=null==spanRect?1:spanRect.right-colIndex,rowSpan=null==spanRect?1:spanRect.bottom-rowIndex}else null!=cellProps.colSpan&&(colSpan=cellProps.colSpan),null!=cellProps.rowSpan&&(rowSpan=cellProps.rowSpan);rowSpan=Math.min(rowSpan,ver.bottomIndex-rowIndex);var hasSpan=(colSpan=Math.min(colSpan,leftFlatCount+hoz.rightIndex-colIndex))>1||rowSpan>1;hasSpan&&spanManager.add(rowIndex,colIndex,colSpan,rowSpan);var positionStyle={};colIndex<leftFlatCount?(positionStyle.position="sticky",positionStyle.left=stickyLeftMap.get(colIndex)):colIndex>=fullFlatCount-rightFlatCount&&(positionStyle.position="sticky",positionStyle.right=stickyRightMap.get(colIndex));return react_default.a.createElement("td",Object.assign({key:colIndex},cellProps,{className:classnames_default()(styles.a.tableCell,cellProps.className,{first:0===colIndex,last:colIndex+colSpan===fullFlatCount,"lock-left":colIndex<leftFlatCount,"lock-right":colIndex>=fullFlatCount-rightFlatCount})},hasSpan?{colSpan:colSpan,rowSpan:rowSpan}:null,{style:Object.assign({textAlign:column.align},cellProps.style,positionStyle)}),cellContent)}(record,rowIndex,wrapped.col,wrapped.colIndex)})))}));return react_default.a.createElement("div",{className:styles.a.tableBody},react_default.a.createElement("div",{key:"top-blank",className:classnames_default()(styles.a.virtualBlank,"top"),style:{height:ver.topBlank}}),react_default.a.createElement("table",null,colgroup,react_default.a.createElement("tbody",null,rows)),react_default.a.createElement("div",{key:"bottom-blank",className:classnames_default()(styles.a.virtualBlank,"bottom"),style:{height:ver.bottomBlank}}))}},{key:"isLock",value:function isLock(){var nested=this.state.nested;return nested.left.length>0||nested.right.length>0}},{key:"render",value:function render(){var _this2=this,_this$props3=this.props,dataSource=_this$props3.dataSource,className=_this$props3.className,style=_this$props3.style,hasHeader=_this$props3.hasHeader,useOuterBorder=_this$props3.useOuterBorder,isLoading=_this$props3.isLoading,isStickyHead=_this$props3.isStickyHead,flat=this.state.flat,renderRange=this.getRenderRange();return function styleWrapper(node){var artTableWrapperProps=function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}({className:classnames_default()(styles.a.artTableWrapper,className,{"use-outer-border":useOuterBorder}),style:style},STYLED_REF_PROP,_this2.artTableWrapperRef);return react_default.a.createElement(styles.b.ArtTableWrapper,artTableWrapperProps,node)}(function withStickyScroll(node){return react_default.a.createElement(react_default.a.Fragment,null,node,react_default.a.createElement(styles.b.StickyScroll,{className:styles.a.stickyScroll,style:{display:_this2.state.hasScroll?"block":"none",bottom:_this2.props.stickyBottom}},react_default.a.createElement("div",{className:styles.a.stickyScrollItem})))}(react_default.a.createElement(Loading,{visible:isLoading},react_default.a.createElement(styles.b.ArtTable,{className:classnames_default()(styles.a.artTable,{sticky:isStickyHead,empty:0===dataSource.length,lock:this.isLock(),"has-header":hasHeader})},this.renderTableHeader(renderRange),this.renderTableBody(renderRange),react_default.a.createElement("div",{className:styles.a.leftLockShadow,style:{width:sum(flat.left.map((function(col){return col.width})))}}),react_default.a.createElement("div",{className:styles.a.rightLockShadow,style:{width:sum(flat.right.map((function(col){return col.width})))}})))))}},{key:"componentDidMount",value:function componentDidMount(){this.updateDoms(),this.data$=new BehaviorSubject.a({props:this.props,state:this.state,prevProps:null,prevState:null}),this.initSubscriptions(),this.didMountOrUpdate()}},{key:"componentDidUpdate",value:function componentDidUpdate(prevProps,prevState){this.updateDoms(),this.data$.next({props:this.props,state:this.state,prevProps:prevProps,prevState:prevState}),this.didMountOrUpdate(prevProps,prevState)}},{key:"didMountOrUpdate",value:function didMountOrUpdate(prevProps,prevState){this.syncHorizontalScrollFromTableBody(),this.updateStickyScroll(),this.adjustNeedRenderLock(),this.updateItemSizeStoreAndTriggerRerenderIfNecessary(prevProps),this.resetStickyScrollIfNecessary(prevState)}},{key:"resetStickyScrollIfNecessary",value:function resetStickyScrollIfNecessary(prevState){null!=prevState&&this.state.hasScroll&&!prevState.hasScroll&&(this.doms.stickyScroll.scrollLeft=0)}},{key:"initSubscriptions",value:function initSubscriptions(){var _this3=this,_this$doms3=this.doms,tableHeader=_this$doms3.tableHeader,tableBody=_this$doms3.tableBody,stickyScroll=_this$doms3.stickyScroll;this.rootSubscription.add(throttledWindowResize$.subscribe((function(){_this3.updateStickyScroll(),_this3.adjustNeedRenderLock()}))),this.rootSubscription.add(syncScrollLeft([tableBody,stickyScroll,tableHeader],(function(scrollLeft){_this3.syncHorizontalScroll(scrollLeft)})));var visiblePart$=this.data$.pipe(map.a((function(data){return data.props.flowRoot})),switchMap.a((function(flowRoot){var wrapper=_this3.artTableWrapperRef.current;if("auto"===flowRoot){var computedStyle=getComputedStyle(wrapper);return Object(of.a)("visible"!==computedStyle.overflowY?wrapper:window)}return"self"===flowRoot?Object(of.a)(wrapper):"function"==typeof flowRoot?Object(timer.a)(0,animationFrame.a).pipe(map.a(flowRoot)):Object(of.a)(flowRoot)})),distinctUntilChanged.a()).pipe(switchMap.a((function(resolvedFlowRoot){return getVisiblePartObservable(_this3.doms.artTable,resolvedFlowRoot)})));this.rootSubscription.add(Object(combineLatest.a)([visiblePart$.pipe(map.a((function(p){return p.clipRect})),distinctUntilChanged.a(shallowEqual)),this.data$.pipe(filter.a((function(data){var _data$prevProps;return!(null===(_data$prevProps=data.prevProps)||void 0===_data$prevProps?void 0:_data$prevProps.isLoading)&&data.props.isLoading})))]).subscribe((function(_ref2){var clipRect=_slicedToArray(_ref2,1)[0],loadingIndicator=query(_this3.doms.artTableWrapper,styles.a.loadingIndicator);if(loadingIndicator){var height=clipRect.bottom-clipRect.top;loadingIndicator.style.top="".concat(height/2-20,"px"),loadingIndicator.style.marginTop="".concat(height/2-20,"px")}}))),this.rootSubscription.add(visiblePart$.pipe(filter.a((function(){var _this3$state$useVirtu=_this3.state.useVirtual,horizontal=_this3$state$useVirtu.horizontal,vertical=_this3$state$useVirtu.vertical;return horizontal||vertical})),map.a((function(_ref4){var clipRect=_ref4.clipRect,offsetY=_ref4.offsetY;return{maxRenderHeight:clipRect.bottom-clipRect.top,maxRenderWidth:clipRect.right-clipRect.left,offsetY:offsetY}})),distinctUntilChanged.a((function(x,y){return Math.abs(x.maxRenderWidth-y.maxRenderWidth)<50&&Math.abs(x.maxRenderHeight-y.maxRenderHeight)<50&&Math.abs(x.offsetY-y.offsetY)<50}))).subscribe((function(sizeAndOffset){_this3.setState(sizeAndOffset)})))}},{key:"componentWillUnmount",value:function componentWillUnmount(){this.rootSubscription.unsubscribe()}},{key:"updateDoms",value:function updateDoms(){var artTableWrapper=this.artTableWrapperRef.current,artTable=query(artTableWrapper,styles.a.artTable);this.doms={artTableWrapper:artTableWrapper,artTable:artTable,tableHeader:query(artTable,styles.a.tableHeader),tableBody:query(artTable,styles.a.tableBody),stickyScroll:query(artTableWrapper,styles.a.stickyScroll),stickyScrollItem:query(artTableWrapper,styles.a.stickyScrollItem)}}},{key:"updateItemSizeStoreAndTriggerRerenderIfNecessary",value:function updateItemSizeStoreAndTriggerRerenderIfNecessary(prevProps){var _virtualTop$clientHei;null!=prevProps&&prevProps.dataSource.length!==this.props.dataSource.length&&this.store.setMaxItemCount(this.props.dataSource.length);var _step,virtualTop=this.doms.artTable.querySelector(".".concat(styles.a.virtualBlank,".top")),virtualTopHeight=null!==(_virtualTop$clientHei=null==virtualTop?void 0:virtualTop.clientHeight)&&void 0!==_virtualTop$clientHei?_virtualTop$clientHei:0,maxTrRowIndex=-1,maxTrBottom=-1,_iterator=function table_createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=table_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e2){throw _e2},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e3){didErr=!0,err=_e3},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}(function queryAll(elem,className){return null==elem?void 0:elem.querySelectorAll("."+className)}(this.doms.artTable,styles.a.tableRow));try{for(_iterator.s();!(_step=_iterator.n()).done;){var tr=_step.value,_rowIndex=Number(tr.dataset.rowindex);if(!isNaN(_rowIndex)){maxTrRowIndex=Math.max(maxTrRowIndex,_rowIndex);var offset=tr.offsetTop+virtualTopHeight,size=tr.offsetHeight;maxTrBottom=Math.max(maxTrBottom,offset+size),this.store.updateItem(_rowIndex,offset,size)}}}catch(err){_iterator.e(err)}finally{_iterator.f()}-1!==maxTrRowIndex&&(maxTrBottom<this.state.offsetY+this.state.maxRenderHeight&&this.getRenderRange().vertical.bottomIndex-1>maxTrRowIndex&&this.forceUpdate())}},{key:"adjustNeedRenderLock",value:function adjustNeedRenderLock(){var _this$state5=this.state,needRenderLock=_this$state5.needRenderLock,flat=_this$state5.flat;if(this.isLock()){var nextNeedRenderLock=sum(flat.full.map((function(col){return col.width})))>this.doms.artTable.clientWidth;needRenderLock!==nextNeedRenderLock&&this.setState({needRenderLock:nextNeedRenderLock})}else needRenderLock&&this.setState({needRenderLock:!1})}}]),BaseTable}(react_default.a.Component);table_BaseTable.defaultProps={isStickyHead:!0,stickyTop:0,stickyBottom:0,useVirtual:"auto",hasHeader:!0,isLoading:!1,getRowProps:noop.a,flowRoot:"auto"},table_BaseTable.getDerivedStateFromProps=getDerivedStateFromProps;try{table_BaseTable.displayName="BaseTable",table_BaseTable.__docgenInfo={description:"",displayName:"BaseTable",props:{primaryKey:{defaultValue:null,description:"主键",name:"primaryKey",required:!1,type:{name:"string | ((record: any, rowIndex: number) => string)"}},dataSource:{defaultValue:null,description:"表格展示的数据源",name:"dataSource",required:!0,type:{name:"any[]"}},columns:{defaultValue:null,description:"表格的列配置",name:"columns",required:!0,type:{name:"ArtColumn[]"}},useVirtual:{defaultValue:{value:"auto"},description:"是否开启虚拟滚动",name:"useVirtual",required:!1,type:{name:'boolean | "auto" | { horizontal?: VirtualEnum; vertical?: VirtualEnum; header?: VirtualEnum; }'}},isStickyHead:{defaultValue:{value:!0},description:"表格头部是否置顶，默认为 true",name:"isStickyHead",required:!1,type:{name:"boolean"}},stickyTop:{defaultValue:{value:0},description:"表格置顶后，距离顶部的距离",name:"stickyTop",required:!1,type:{name:"number"}},stickyBottom:{defaultValue:{value:0},description:"表格置顶后，距离底部的距离",name:"stickyBottom",required:!1,type:{name:"number"}},className:{defaultValue:null,description:"自定义类名",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"自定义内联样式",name:"style",required:!1,type:{name:"CSSProperties & Partial<{ '--color': string; '--bgcolor': string; '--hover-color': string; '--row-height': string; '--header-color': string; '--header-bgcolor': string; '--header-row-height': string; ... 6 more ...; '--header-cell-border-vertical': string; }>"}},hasHeader:{defaultValue:{value:!0},description:"表格是否具有头部",name:"hasHeader",required:!1,type:{name:"boolean"}},useOuterBorder:{defaultValue:null,description:"使用来自外层 div 的边框代替单元格的外边框",name:"useOuterBorder",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:{value:!1},description:"表格是否在加载中",name:"isLoading",required:!1,type:{name:"boolean"}},emptyContent:{defaultValue:null,description:"数据为空的时候的表格内容展现",name:"emptyContent",required:!1,type:{name:"ReactNode"}},defaultColumnWidth:{defaultValue:null,description:"列的默认宽度",name:"defaultColumnWidth",required:!1,type:{name:"number"}},flowRoot:{defaultValue:{value:"auto"},description:"表格所处于的块格式化上下文(BFC)\nhttps://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context",name:"flowRoot",required:!1,type:{name:'"auto" | "self" | (() => HTMLElement | (Window & typeof globalThis)) | HTMLElement | (Window & typeof globalThis)'}},getRowProps:{defaultValue:null,description:"",name:"getRowProps",required:!1,type:{name:"(record: any, rowIndex: number) => HTMLAttributes<HTMLTableRowElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/base-table/table.tsx#BaseTable"]={docgenInfo:table_BaseTable.__docgenInfo,name:"BaseTable",path:"src/base-table/table.tsx#BaseTable"})}catch(__react_docgen_typescript_loader_error){}try{table_BaseTable.getDerivedStateFromProps.displayName="BaseTable.getDerivedStateFromProps",table_BaseTable.getDerivedStateFromProps.__docgenInfo={description:"",displayName:"BaseTable.getDerivedStateFromProps",props:{primaryKey:{defaultValue:null,description:"主键",name:"primaryKey",required:!1,type:{name:"string | ((record: any, rowIndex: number) => string)"}},dataSource:{defaultValue:null,description:"表格展示的数据源",name:"dataSource",required:!0,type:{name:"any[]"}},columns:{defaultValue:null,description:"表格的列配置",name:"columns",required:!0,type:{name:"ArtColumn[]"}},useVirtual:{defaultValue:null,description:"是否开启虚拟滚动",name:"useVirtual",required:!1,type:{name:'boolean | "auto" | { horizontal?: VirtualEnum; vertical?: VirtualEnum; header?: VirtualEnum; }'}},isStickyHead:{defaultValue:null,description:"表格头部是否置顶，默认为 true",name:"isStickyHead",required:!1,type:{name:"boolean"}},stickyTop:{defaultValue:null,description:"表格置顶后，距离顶部的距离",name:"stickyTop",required:!1,type:{name:"number"}},stickyBottom:{defaultValue:null,description:"表格置顶后，距离底部的距离",name:"stickyBottom",required:!1,type:{name:"number"}},className:{defaultValue:null,description:"自定义类名",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"自定义内联样式",name:"style",required:!1,type:{name:"CSSProperties & Partial<{ '--color': string; '--bgcolor': string; '--hover-color': string; '--row-height': string; '--header-color': string; '--header-bgcolor': string; '--header-row-height': string; ... 6 more ...; '--header-cell-border-vertical': string; }>"}},hasHeader:{defaultValue:null,description:"表格是否具有头部",name:"hasHeader",required:!1,type:{name:"boolean"}},useOuterBorder:{defaultValue:null,description:"使用来自外层 div 的边框代替单元格的外边框",name:"useOuterBorder",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"表格是否在加载中",name:"isLoading",required:!1,type:{name:"boolean"}},emptyContent:{defaultValue:null,description:"数据为空的时候的表格内容展现",name:"emptyContent",required:!1,type:{name:"ReactNode"}},defaultColumnWidth:{defaultValue:null,description:"列的默认宽度",name:"defaultColumnWidth",required:!1,type:{name:"number"}},flowRoot:{defaultValue:null,description:"表格所处于的块格式化上下文(BFC)\nhttps://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context",name:"flowRoot",required:!1,type:{name:'"auto" | "self" | (() => HTMLElement | (Window & typeof globalThis)) | HTMLElement | (Window & typeof globalThis)'}},getRowProps:{defaultValue:null,description:"",name:"getRowProps",required:!1,type:{name:"(record: any, rowIndex: number) => HTMLAttributes<HTMLTableRowElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/base-table/table.tsx#BaseTable.getDerivedStateFromProps"]={docgenInfo:table_BaseTable.getDerivedStateFromProps.__docgenInfo,name:"BaseTable.getDerivedStateFromProps",path:"src/base-table/table.tsx#BaseTable.getDerivedStateFromProps"})}catch(__react_docgen_typescript_loader_error){}},58:function(module,__webpack_exports__,__webpack_require__){"use strict";function isLeafNode(node){return null==node.children||0===node.children.length}__webpack_require__.d(__webpack_exports__,"a",(function(){return isLeafNode}))},60:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"safeRenderHeader",(function(){return safeRenderHeader})),__webpack_require__.d(__webpack_exports__,"safeGetValue",(function(){return safeGetValue})),__webpack_require__.d(__webpack_exports__,"safeGetRowKey",(function(){return safeGetRowKey})),__webpack_require__.d(__webpack_exports__,"safeGetCellProps",(function(){return safeGetCellProps})),__webpack_require__.d(__webpack_exports__,"safeRender",(function(){return safeRender}));__webpack_require__(10);function safeRenderHeader(column){var _column$title;return null!==(_column$title=column.title)&&void 0!==_column$title?_column$title:column.name}function safeGetValue(column,record,rowIndex){return column.getValue?column.getValue(record,rowIndex):record[column.code]}function safeGetRowKey(primaryKey,record,rowIndex){var key;return"string"==typeof primaryKey?key=record[primaryKey]:"function"==typeof primaryKey&&(key=primaryKey(record,rowIndex)),null==key&&(key=String(rowIndex)),key}function safeGetCellProps(column,record,rowIndex){if(column.getCellProps){var value=safeGetValue(column,record,rowIndex);return column.getCellProps(value,record,rowIndex)||{}}return{}}function safeRender(column,record,rowIndex){var value=safeGetValue(column,record,rowIndex);return column.render?column.render(value,record,rowIndex):value}},63:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return FusionStyles}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),react_helmet__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(915);function FusionStyles(){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react_helmet__WEBPACK_IMPORTED_MODULE_1__.a,null,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("link",{rel:"stylesheet",href:"//alifd.alicdn.com/npm/@alifd/next/1.19.21/next.css"}))}FusionStyles.displayName="FusionStyles"},73:function(module,__webpack_exports__,__webpack_require__){"use strict";var _internals__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(60);__webpack_require__.d(__webpack_exports__,"internals",(function(){return _internals__WEBPACK_IMPORTED_MODULE_0__}))},80:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getAppTrafficData})),__webpack_require__.d(__webpack_exports__,"b",(function(){return getIncomeData})),__webpack_require__.d(__webpack_exports__,"c",(function(){return getNCoV2019Data}));__webpack_require__(13),__webpack_require__(162);var csv_parse_lib_sync__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(914),csv_parse_lib_sync__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(csv_parse_lib_sync__WEBPACK_IMPORTED_MODULE_2__),cdnLinks_mockBizData="https://gw.alipayobjects.com/os/bmw-prod/2eb02d0b-993f-4531-8424-a8df1899299e.json",cdnLinks_mockSellData="https://gw.alipayobjects.com/os/bmw-prod/22986070-97e7-43a2-a3e4-200742c3d913.json",cdnLinks_ncov2019Data="https://gw.alipayobjects.com/os/basement_prod/8e44b543-0764-411f-adfc-0dae716ef96a.csv",appTrafficCache=null;function getAppTrafficData(){return appTrafficCache||(appTrafficCache=fetch(cdnLinks_mockBizData).then((function(res){return res.json()}))),appTrafficCache}var incomeCache=null;function getIncomeData(){return incomeCache||(incomeCache=fetch(cdnLinks_mockSellData).then((function(res){return res.json()}))),incomeCache}var ncov2019Cache=null;function getNCoV2019Data(){return ncov2019Cache||(ncov2019Cache=fetch(cdnLinks_ncov2019Data).then((function(res){return res.text()})).then((function(csvString){return csv_parse_lib_sync__WEBPACK_IMPORTED_MODULE_2___default()(csvString,{columns:!0,skip_empty_lines:!0})}))),ncov2019Cache}},894:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19),__webpack_require__(0);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(2),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(51),_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7__);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"工具 / 通用工具函数",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h2",{id:"通用工具函数"},"通用工具函数"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"ali-react-table")," 导出的通用工具函数"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("hr",null),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"applytransforms"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h3"},"applyTransforms")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"API: ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"function applyTransforms<T>(input: T, ...transforms: Transform<T>[]): T")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"以 input 作为输入，按序使用 transform。transform 是一个简单的纯函数，transform 的参数类型与返回值类型相同"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"applyTransform(input, f1, f2, f3)")," 等价于 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"f3(f2(f1(input)))"),"."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"// 相关源码参考\ntype Transform<T> = (input: T) => T\n\nfunction applyTransforms<T>(input: T, ...transforms: Transform<T>[]) {\n  return transforms.reduce((v, fn) => fn(v), input)\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"buildtree"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h3"},"buildTree")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"API: ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"function buildTree<T>(idProp: string, parentIdProp: string, items: T[]): WithChildren<T>[]")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"根据 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"idProp")," 与 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"parentIdProp")," 从",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"p"},"平铺的对象数组"),"中构建对应的",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"p"},"树"),"；"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"当 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"A[parentIdProp] === B[idProp]")," 时，对象 A 会被移动到对象 B 的 children 字段中；"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"当一个对象的 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"parentIdProp")," 不与其他对象的 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"idProp")," 字段相等时，该对象被作为树的顶层节点。")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"const array = [\n  { id: 'node-1', parent: 'root', name: '我是节点1' },\n  { id: 'node-2', parent: 'root', name: '我是节点2' },\n  { id: 'node-3', parent: 'node-2', name: '我是节点3' },\n  { id: 'node-4', parent: 'node-2', name: '我是节点4' },\n  { id: 'node-5', parent: 'node-4', name: '我是节点5' },\n]\n\nconst tree = buildTree('id', 'parent', array)\n\nexpect(tree).toEqual([\n  { id: 'node-1', parent: 'root', name: '我是节点1' },\n  {\n    id: 'node-2',\n    parent: 'root',\n    name: '我是节点2',\n    children: [\n      { id: 'node-3', parent: 'node-2', name: '我是节点3' },\n      {\n        id: 'node-4',\n        parent: 'node-2',\n        name: '我是节点4',\n        children: [{ id: 'node-5', parent: 'node-3', name: '我是节点5' }],\n      },\n    ],\n  },\n])\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"collectnodes"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h3"},"collectNodes")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"收集一棵树上的节点"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"API: ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"function collectNodes<T extends AbstractTreeNode>(nodes: T[], order: 'pre' | 'post' | 'leaf-only'): T[]")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"pre: 前序遍历"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"post: 后续遍历"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"leaf-only: 仅收集叶子节点")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"const tree = [\n  { id: 'node-1', parent: 'root', name: '我是节点1' },\n  {\n    id: 'node-2',\n    parent: 'root',\n    name: '我是节点2',\n    children: [\n      { id: 'node-3', parent: 'node-2', name: '我是节点3' },\n      {\n        id: 'node-4',\n        parent: 'node-2',\n        name: '我是节点4',\n        children: [{ id: 'node-5', parent: 'node-3', name: '我是节点5' }],\n      },\n    ],\n  },\n]\n\nconst result = collectNodes(tree, 'pre')\n\nexpect(result).toEqual([\n  { id: 'node-1', parent: 'root', name: '我是节点1' },\n  {\n    id: 'node-2',\n    parent: 'root',\n    name: '我是节点2',\n    children: [\n      { id: 'node-3', ...others },\n      { id: 'node-4', ...others },\n    ],\n  },\n  { id: 'node-3', parent: 'node-2', name: '我是节点3' },\n  { id: 'node-4', parent: 'node-2', name: '我是节点4', ...others },\n  { id: 'node-5', parent: 'node-3', name: '我是节点5' },\n])\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"exporttableasexcel"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h3"},"exportTableAsExcel")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"将表格数据导出为 Excel 文件。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"function exportTableAsExcel(\n  // 一般情况下为 xlsxPackage 参数传入 require('xlsx') 即可\n  xlsxPackage: typeof XLSX_NS,\n  dataSource: any[],\n  columns: ArtColumn[],\n  filename: string,\n): void\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"「表格导出」与「表格渲染」的不同点："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"单元格内容：",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"BaseTable 渲染时，会使用 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"column.render")," 来渲染单元格中的内容"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"exportTableAsExcel 只会使用 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"column.code")," 或是 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"column.getValue")," 来获取表格中每个单元格的内容"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"列隐藏：",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"当 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"column.hidden")," 为 true 时，BaseTable 会隐藏相应的列"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"exportTableAsExcel 总是会导出所有的列"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"支持的表格特性：",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"BaseTable 支持所有表格特性"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"表格导出仅支持一部分表格特性：",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"支持 表头分组"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"支持 单元格合并"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",{parentName:"li"},"不支持")," 单元格样式")))))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"gettreedepth"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h3"},"getTreeDepth")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"API: ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"function getTreeDepth(nodes: AbstractTreeNode[]): number")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"获取一棵树的高度/深度"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"groupby"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h3"},"groupBy")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"API: ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"function groupBy<T, K extends string>(list: T[], iteratee: (t: T) => K): { [key in K]: T[] }")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"对 list 中的元素进行分组，iteratee 的返回值相同的元素将被分到同一个分组。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"isleafnode"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h3"},"isLeafNode")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"判断一个节点是否为叶子节点"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"// 相关源码参考\ninterface AbstractTreeNode {\n  children?: AbstractTreeNode[]\n}\n\nfunction isLeafNode<N extends AbstractTreeNode>(node: N) {\n  return node.children == null || node.children.length === 0\n}\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"layeredsort"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h3"},"layeredSort")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"API: ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"function layeredSort<T extends AbstractTreeNode>(array: T[], compare: (x: T, y: T) => number): T[]")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"对树状结构的数据进行排序。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"layeredSort")," 与 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"Array#sort")," 类似。但 layeredSort 是一个递归的过程，针对树上的每一个父节点，该函数都会对其子节点数组（children) 进行排序."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"mergecellprops"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h3"},"mergeCellProps")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"API: ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"function mergeCellProps(base: CellProps, extra: CellProps): CellProps")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"合并两个 cellProps（单元格属性）对象。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"mergeCellProps 会按照以下规则来合并两个对象："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"对于 数字、字符串、布尔值类型的字段，extra 中的字段值将直接覆盖 base 中的字段值（className 是个特例，会进行字符串拼接）",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"注意在 v1.2 之前 className 会被覆盖"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"对于函数/方法类型的字段（对应单元格的事件回调函数），mergeCellProps 将生成一个新的函数，新函数将按序调用 base 和 extra 中的方法"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"对于普通对象类型的字段（一般对应单元格的样式），mergeCellProps 将调用 lodash.merge 来合并字段值")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"proto"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h3"},"proto")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"详见 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_links_react__WEBPACK_IMPORTED_MODULE_7___default.a,{kind:"工具 / proto",story:"page",mdxType:"LinkTo"},"proto 文档")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"smartcompare"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h3"},"smartCompare")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"API: ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"(x: any, y: any) => number")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"比较字符串、数字、null 或是数组，返回一个负数表示「x 小于 y」，返回 0 表示「x 等于 y」，返回一个正数表示「x 大于 y」。"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"对于字符串将比较两者的字典序；"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"对数字将比较两者大小；"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"null 值在比较时总是小于另一个值；"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"对于数组来说，将逐个比较数组中的元素，第一个不相等的比较结果将作为整个数组的比较结果",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"数组的比较可参考 python 中的元祖比较：",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",_extends({parentName:"li"},{href:"https://stackoverflow.com/questions/5292303/how-does-tuple-comparison-work-in-python",target:"_blank",rel:"nofollow noopener noreferrer"}),"https://stackoverflow.com/questions/5292303/how-does-tuple-comparison-work-in-python"))))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h3",{id:"traversecolumn"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"h3"},"traverseColumn")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"API: ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"(fn: (column, ctx) => NormalizeAsArrayInput<ArtColumn>) => TableTransform")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"traverseColumn")," 方法可用来简化「创建针对列的 transform」。提供一个针对单个 column 配置的转换函数，该方法可以生成对应的 TableTransform。fn 的表现如下："),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"fn 被调用时的参数：",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"column 参数：表格的列配置"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"ctx：与 column 对应的上下文对象：",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"ctx.range：列的下标，包含 ctx.range.start, ctx.range.end 两个下标"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"ctx.dataSource：表格的数据源"))))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"fn 的返回结果：",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("ul",{parentName:"li"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"返回 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"null")," 时，对应的列将被移除；"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("li",{parentName:"ul"},"返回 ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"li"},"ArtColumn")," 或一个数组时，返回的结果会替换对应的列。")))))}MDXContent.displayName="MDXContent",MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"工具 / 通用工具函数",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},896:function(module,exports){},910:function(module){module.exports=JSON.parse('{"name":"ali-react-table","version":"1.2.0","description":"高性能 React 表格组件","sideEffects":false,"module":"dist/ali-react-table.esm.js","main":"dist/ali-react-table.js","types":"dist/ali-react-table.d.ts","license":"MIT","repository":{"type":"git","url":"git+https://github.com/alibaba/ali-react-table.git"},"homepage":"https://github.com/alibaba/ali-react-table","author":{"name":"Shi Feichao","email":"842351815@qq.com"},"scripts":{"storybook":"start-storybook -p 2333","build-storybook":"rimraf storybook-dist/ && build-storybook --no-dll -c .storybook -o storybook-dist/","build":"rimraf dist/ && rollup --config rollup.config.js","preversion":"npm run build","prepublishOnly":"npm run build"},"files":["dist","pivot"],"prettier":{"printWidth":120,"singleQuote":true,"semi":false,"trailingComma":"all"},"dependencies":{"@types/classnames":"^2.2.9","@types/lodash.clonedeep":"^4.5.6","@types/lodash.merge":"^4.6.6","classnames":"^2.2.6","lodash.clonedeep":"^4.5.0","lodash.merge":"^4.6.2","react":"^16.9.0","resize-observer-polyfill":"^1.5.1","rxjs":"^6.5.4","styled-components":"^3.4.10 || ^5.0.1"},"devDependencies":{"@alifd/next":"^1.19.22","@babel/core":"^7.8.7","@babel/plugin-proposal-class-properties":"^7.8.0","@babel/plugin-proposal-decorators":"^7.10.5","@babel/plugin-proposal-nullish-coalescing-operator":"^7.8.0","@babel/plugin-proposal-optional-chaining":"^7.8.0","@babel/plugin-syntax-dynamic-import":"^7.8.0","@babel/plugin-syntax-object-rest-spread":"^7.8.0","@babel/plugin-transform-runtime":"^7.8.0","@babel/preset-env":"^7.8.7","@babel/preset-react":"^7.8.0","@babel/preset-typescript":"^7.7.7","@carbon/icons-react":"^10.9.1","@rollup/plugin-node-resolve":"^9.0.0","@storybook/addon-docs":"6.0.21","@storybook/addon-links":"6.0.21","@storybook/addon-storysource":"6.0.21","@storybook/addons":"6.0.21","@storybook/react":"6.0.21","@storybook/theming":"6.0.21","@types/carbon__icons-react":"^10.6.0","@types/d3":"^5.7.2","@types/lodash":"^4.14.149","@types/numeral":"^0.0.28","@types/react-beautiful-dnd":"^13.0.0","@types/react-helmet":"^6.1.0","@types/styled-components":"5.1.2","babel-loader":"^8.0.6","babel-plugin-styled-components":"^1.10.7","chalk":"^4.0.0","concurrently":"^5.1.0","csv-parse":"^4.8.8","d3":"^5.15.1","dvt-aggregation":"^0.2.8","esm":"^3.2.25","gulp-cli":"^2.2.0","immer":"^7.0.7","lodash":"^4.17.15","mobx":"^5.15.4","mobx-react":"^6.2.2","moment":"^2.24.0","numeral":"^2.0.6","prettier":"^2.0.2","react-beautiful-dnd":"^13.0.0","react-helmet":"^6.0.0","react-is":"^16.13.0","react-json-view":"^1.19.1","react-use":"^15.3.3","rimraf":"^3.0.2","rollup":"^2.3.1","rollup-plugin-babel":"^4.3.3","rollup-plugin-typescript2":"^0.27.0","ts-loader":"^8.0.2","tsconfig-paths-webpack-plugin":"^3.2.0","typescript":"^4.0.2","webpack":"^4.42.0","xlsx":"^0.16.0"}}')},912:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getTreeDepth}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);var _isLeafNode__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(58);function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function getTreeDepth(nodes){var maxDepth=-1;return function dfs(columns,depth){var _step,_iterator=_createForOfIteratorHelper(columns);try{for(_iterator.s();!(_step=_iterator.n()).done;){var column=_step.value;Object(_isLeafNode__WEBPACK_IMPORTED_MODULE_13__.a)(column)?maxDepth=Math.max(maxDepth,depth):dfs(column.children,depth+1)}}catch(err){_iterator.e(err)}finally{_iterator.f()}}(nodes,0),maxDepth}},923:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return mergeCellProps}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(20),__webpack_require__(19),__webpack_require__(13),__webpack_require__(21),__webpack_require__(24);var lodash_merge__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(919),lodash_merge__WEBPACK_IMPORTED_MODULE_8___default=__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_8__),lodash_clonedeep__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(920),lodash_clonedeep__WEBPACK_IMPORTED_MODULE_9___default=__webpack_require__.n(lodash_clonedeep__WEBPACK_IMPORTED_MODULE_9__),classnames__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(11),classnames__WEBPACK_IMPORTED_MODULE_10___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_10__);function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function _typeof(obj){return typeof obj}:function _typeof(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}function composeEventHandler(handler1,handler2){return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];handler1(args),handler2(args)}}function mergeCellProps(base,extra){if(null==base)return extra;for(var result=lodash_clonedeep__WEBPACK_IMPORTED_MODULE_9___default()(base),_i=0,_Object$keys=Object.keys(extra);_i<_Object$keys.length;_i++){var key=_Object$keys[_i],value=extra[key],type=_typeof(value);if(null===value)result[key]=null;else if(void 0===value);else if("number"===type||"string"===type||"boolean"===type)result[key]="className"===key?classnames__WEBPACK_IMPORTED_MODULE_10___default()(result[key],value):value;else if("function"===type){var prev=result[key];result[key]=null==prev?value:composeEventHandler(prev,value)}else"object"===type&&(result[key]=lodash_merge__WEBPACK_IMPORTED_MODULE_8___default()(result[key],value))}return result}},924:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return buildRecordMatrix})),__webpack_require__.d(__webpack_exports__,"a",(function(){return buildRecordMap}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(44),__webpack_require__(65),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(32),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(103),__webpack_require__(13),__webpack_require__(27),__webpack_require__(90),__webpack_require__(21),__webpack_require__(66),__webpack_require__(24);var _utils__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(58),_utils__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(526),_utils_others__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(281),_buildDrillTree__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__(243),_simpleEncode__WEBPACK_IMPORTED_MODULE_23__=__webpack_require__(205);function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e2){throw _e2},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e3){didErr=!0,err=_e3},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _slicedToArray(arr,i){return function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}(arr)||function _iterableToArrayLimit(arr,i){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(arr)))return;var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}(arr,i)||_unsupportedIterableToArray(arr,i)||function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function fallbackAggregate(slice){return 1===slice.length?slice[0]:{}}function buildRecordMatrix(_ref){var data=_ref.data,leftCodes=_ref.leftCodes,topCodes=_ref.topCodes,_ref$aggregate=_ref.aggregate,aggregate=void 0===_ref$aggregate?fallbackAggregate:_ref$aggregate,_ref$encode=_ref.encode,encode=void 0===_ref$encode?_simpleEncode__WEBPACK_IMPORTED_MODULE_23__.a:_ref$encode,_ref$isLeftExpand=_ref.isLeftExpand,isLeftExpand=void 0===_ref$isLeftExpand?function(){return!0}:_ref$isLeftExpand,_ref$isTopExpand=_ref.isTopExpand,isTopExpand=void 0===_ref$isTopExpand?function(){return!0}:_ref$isTopExpand,prebuiltLeftTree=_ref.prebuiltLeftTree,prebuiltTopTree=_ref.prebuiltTopTree,ctx={peculiarity:new Set},leftRootDrillNode=_slicedToArray(null!=prebuiltLeftTree?prebuiltLeftTree:Object(_buildDrillTree__WEBPACK_IMPORTED_MODULE_22__.a)(data,leftCodes,{encode:encode,includeTopWrapper:!0,isExpand:isLeftExpand}),1)[0],topRootDrillNode=_slicedToArray(null!=prebuiltTopTree?prebuiltTopTree:Object(_buildDrillTree__WEBPACK_IMPORTED_MODULE_22__.a)(data,topCodes,{encode:encode,includeTopWrapper:!0,isExpand:isTopExpand}),1)[0];return function makeMatrix(rootRow){var result=new Map;return function dfsRow(matrix,row){var subMap=new Map;matrix.set(row.leftKey,subMap),function dfsCol(subMap,col){subMap.set(col.topKey,col.record),Object(_utils__WEBPACK_IMPORTED_MODULE_19__.a)(col)||col.children.forEach((function(childCol){dfsCol(subMap,childCol)}))}(subMap,row.col),Object(_utils__WEBPACK_IMPORTED_MODULE_19__.a)(row)||row.children.forEach((function(childRow){dfsRow(matrix,childRow)}))}(result,rootRow),result}(function buildByLeft(ctx,slice,drillNode,depth){var col,children=null;if(Object(_utils__WEBPACK_IMPORTED_MODULE_19__.a)(drillNode))col=function buildByTop(ctx,slice,drillNode,depth){var record,children=null;if(Object(_utils__WEBPACK_IMPORTED_MODULE_19__.a)(drillNode))record=aggregate(slice,ctx);else{children=[];var code=topCodes[depth],groups=Object(_utils__WEBPACK_IMPORTED_MODULE_20__.a)(slice,(function(dwdRow){return dwdRow[code]}));ctx.peculiarity.add(code);var _step2,_iterator2=_createForOfIteratorHelper(drillNode.children);try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var child=_step2.value,group=groups[child.value];group&&children.push(buildByTop(ctx,group,child,depth+1))}}catch(err){_iterator2.e(err)}finally{_iterator2.f()}ctx.peculiarity.delete(code),record=aggregate(children.map((function(child){return child.record})),ctx)}return{topKey:drillNode.key,topValue:drillNode.value,children:children,record:record}}(ctx,slice,topRootDrillNode,0);else{children=[];var code=leftCodes[depth],groups=Object(_utils__WEBPACK_IMPORTED_MODULE_20__.a)(slice,(function(dwdRow){return dwdRow[code]}));ctx.peculiarity.add(code);var _step,_iterator=_createForOfIteratorHelper(drillNode.children);try{for(_iterator.s();!(_step=_iterator.n()).done;){var child=_step.value,group=groups[child.value];group&&children.push(buildByLeft(ctx,group,child,depth+1))}}catch(err){_iterator.e(err)}finally{_iterator.f()}ctx.peculiarity.delete(code),col=function mergeColsByTopTree(ctx,colsToMerge){return function dfs(ctx,cols,topDrillNode,depth){var children=null,record=aggregate(cols.map((function(c){return c.record})),ctx);if(!Object(_utils__WEBPACK_IMPORTED_MODULE_19__.a)(topDrillNode)){var topCode=topCodes[depth];ctx.peculiarity.add(topCode);var drillChildDict=Object(_utils_others__WEBPACK_IMPORTED_MODULE_21__.b)(topDrillNode.children.map((function(child){return[child.value,child]}))),colChildDictArray=cols.map((function(col){return Object(_utils_others__WEBPACK_IMPORTED_MODULE_21__.b)(col.children.map((function(child){return[child.topValue,child]})))}));children=topDrillNode.children.map((function(item){var childCols=colChildDictArray.map((function(colChildDict){return colChildDict[item.value]})).filter(Boolean);return dfs(ctx,childCols,drillChildDict[item.value],depth+1)})),ctx.peculiarity.delete(topCode)}return{topKey:topDrillNode.key,topValue:topDrillNode.value,record:record,children:children}}(ctx,colsToMerge,topRootDrillNode,0)}(ctx,children.map((function(child){return child.col})))}return{leftKey:drillNode.key,children:children,col:col}}(ctx,data,leftRootDrillNode,0))}function buildRecordMap(_ref6){var codes=_ref6.codes,_ref6$encode=_ref6.encode,encode=void 0===_ref6$encode?_simpleEncode__WEBPACK_IMPORTED_MODULE_23__.a:_ref6$encode,data=_ref6.data,aggregate=_ref6.aggregate,matrix=buildRecordMatrix({data:data,leftCodes:[],topCodes:codes,isTopExpand:_ref6.isExpand,aggregate:aggregate,encode:encode}),totalKey=encode([]);return matrix.get(totalKey)}},925:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return convertDrillTreeToCrossTree}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(33),__webpack_require__(44),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(32),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(7),__webpack_require__(13),__webpack_require__(27),__webpack_require__(90),__webpack_require__(21),__webpack_require__(24);var _carbon_icons_react__WEBPACK_IMPORTED_MODULE_18__=__webpack_require__(524),react__WEBPACK_IMPORTED_MODULE_19__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_19___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_19__),rxjs__WEBPACK_IMPORTED_MODULE_20__=__webpack_require__(2202),styled_components__WEBPACK_IMPORTED_MODULE_21__=__webpack_require__(40),_utils__WEBPACK_IMPORTED_MODULE_22__=__webpack_require__(58),_simpleEncode__WEBPACK_IMPORTED_MODULE_23__=__webpack_require__(205);function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var ExpandSpan=styled_components__WEBPACK_IMPORTED_MODULE_21__.b.span.withConfig({displayName:"convert-utils__ExpandSpan",componentId:"ilvcbp-0"})(["display:inline-flex;align-items:center;padding:2px 8px 2px 0;cursor:pointer;.icon{fill:#999;margin-right:4px;&.expanded{transform-origin:center center;transform:rotate(90deg);}}"]);function convertDrillTreeToCrossTree(drillTree){var _ref=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},indicators=_ref.indicators,_ref$encode=_ref.encode,encode=void 0===_ref$encode?_simpleEncode__WEBPACK_IMPORTED_MODULE_23__.a:_ref$encode,generateSubtotalNode=_ref.generateSubtotalNode,_ref$enforceExpandTot=_ref.enforceExpandTotalNode,enforceExpandTotalNode=void 0===_ref$enforceExpandTot||_ref$enforceExpandTot,expandKeys=_ref.expandKeys,_ref$onChangeExpandKe=_ref.onChangeExpandKeys,onChangeExpandKeys=void 0===_ref$onChangeExpandKe?rxjs__WEBPACK_IMPORTED_MODULE_20__.a:_ref$onChangeExpandKe,supportsExpand=_ref.supportsExpand,totalKey=encode([]);if(supportsExpand&&null==expandKeys)throw new Error("[ali-react-table] convertDrillTreeToCrossTree(...) 设置 supportsExpand=true 时，expandKeys 不能为 null/undefined.");var expandKeySet=new Set(expandKeys);return dfs(drillTree,0);function getIndicators(node,nodeData){return indicators.map((function(indicator){return Object.assign({key:encode(node.path.concat([indicator.code])),value:indicator.name,data:Object.assign({},nodeData,{indicator:indicator})},indicator)}))}function drillNodeToTreeNode(node,nodeData){return null!=indicators?{key:node.key,value:node.value,data:nodeData,children:getIndicators(node,nodeData)}:{key:node.key,value:node.value,data:nodeData}}function dfs(drillNodes,depth){var _step,result=[],_loop=function _loop(node){var nodeData={dataKey:node.key,dataPath:node.path};if(Object(_utils__WEBPACK_IMPORTED_MODULE_22__.a)(node)&&!node.hasChild)result.push(drillNodeToTreeNode(node,nodeData));else{var needProcessChildren=!0,crossTreeNode={key:node.key,value:node.value,data:nodeData};if(!supportsExpand||enforceExpandTotalNode&&node.key===totalKey?crossTreeNode.children=dfs(node.children,depth+1):expandKeySet.has(node.key)?(crossTreeNode.title=react__WEBPACK_IMPORTED_MODULE_19___default.a.createElement(ExpandSpan,{onClick:function onClick(){onChangeExpandKeys(expandKeys.filter((function(k){return k!==node.key})),node,"collapse")}},react__WEBPACK_IMPORTED_MODULE_19___default.a.createElement(_carbon_icons_react__WEBPACK_IMPORTED_MODULE_18__.a,{className:"icon expanded"}),node.value),crossTreeNode.children=dfs(node.children,depth+1)):(needProcessChildren=!1,crossTreeNode.title=react__WEBPACK_IMPORTED_MODULE_19___default.a.createElement(ExpandSpan,{onClick:function onClick(){onChangeExpandKeys(expandKeys.concat([node.key]),node,"expand")}},react__WEBPACK_IMPORTED_MODULE_19___default.a.createElement(_carbon_icons_react__WEBPACK_IMPORTED_MODULE_18__.a,{className:"icon collapsed"}),node.value),null!=indicators&&(crossTreeNode.children=getIndicators(node,nodeData))),needProcessChildren){var subtotalNodeData=null==generateSubtotalNode?void 0:generateSubtotalNode(node);if(subtotalNodeData){var _subtotalNodeData$pos=subtotalNodeData.position,position=void 0===_subtotalNodeData$pos?"start":_subtotalNodeData$pos,value=subtotalNodeData.value,subtotalPath=node.path.concat([value]),subtotalTreeNode=drillNodeToTreeNode({key:encode(subtotalPath),path:subtotalPath,value:value},nodeData);"start"===position?crossTreeNode.children.unshift(subtotalTreeNode):crossTreeNode.children.push(subtotalTreeNode)}}result.push(crossTreeNode)}},_iterator=_createForOfIteratorHelper(drillNodes);try{for(_iterator.s();!(_step=_iterator.n()).done;){_loop(_step.value)}}catch(err){_iterator.e(err)}finally{_iterator.f()}return result}}},928:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return makeBuildTreeTransform}));__webpack_require__(6),__webpack_require__(16),__webpack_require__(26),__webpack_require__(44),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(103),__webpack_require__(7),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24);var others=__webpack_require__(281);function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function buildTree(idProp,parentIdProp,items){var _step,wrapperMap=new Map,ensure=function ensure(id){if(wrapperMap.has(id))return wrapperMap.get(id);var wrapper={id:id,parent:null,item:null,children:[]};return wrapperMap.set(id,wrapper),wrapper},_iterator=_createForOfIteratorHelper(items);try{for(_iterator.s();!(_step=_iterator.n()).done;){var item=_step.value,parentWrapper=ensure(item[parentIdProp]),itemWrapper=ensure(item[idProp]);itemWrapper.parent=parentWrapper,parentWrapper.children.push(itemWrapper),itemWrapper.item=item}}catch(err){_iterator.e(err)}finally{_iterator.f()}return function unwrapRecursively(wrapperArray){var _step2,result=[],_iterator2=_createForOfIteratorHelper(wrapperArray);try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var wrapper=_step2.value;0===wrapper.children.length?result.push(wrapper.item):result.push(Object.assign({},wrapper.item,{children:unwrapRecursively(wrapper.children)}))}}catch(err){_iterator2.e(err)}finally{_iterator2.f()}return result}(Object(others.a)(Array.from(wrapperMap.values()).filter((function(wrapper){return null==wrapper.parent})),(function(wrapper){return wrapper.children})))}try{buildTree.displayName="buildTree",buildTree.__docgenInfo={description:"根据 idProp 与 parentIdProp 从对象数组中构建对应的树\n当 A[parentIdProp] === B[idProp] 时，对象A会被移动到对象B的children。\n当一个对象的 parentIdProp 不与其他对象的 idProp 字段相等时，该对象被作为树的顶层节点\n@example const array = [\n  { id: 'node-1', parent: 'root' },\n  { id: 'node-2', parent: 'root' },\n  { id: 'node-3', parent: 'node-2' },\n  { id: 'node-4', parent: 'node-2' },\n  { id: 'node-5', parent: 'node-4' },\n]\nconst tree = buildTree('id', 'parent', array)\nexpect(tree).toEqual([\n  { id: 'node-1', parent: 'root' },\n  {\n    id: 'node-2',\n    parent: 'root',\n    children: [\n      { id: 'node-3', parent: 'node-2' },\n      {\n        id: 'node-4',\n        parent: 'node-2',\n        children: [{ id: 'node-5', parent: 'node-3' }],\n      },\n    ],\n  },\n])",displayName:"buildTree",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/utils/buildTree.tsx#buildTree"]={docgenInfo:buildTree.__docgenInfo,name:"buildTree",path:"src/utils/buildTree.tsx#buildTree"})}catch(__react_docgen_typescript_loader_error){}function makeBuildTreeTransform(idProp,parentIdProp){return function(_ref){var columns=_ref.columns,dataSource=_ref.dataSource;return{columns:columns,dataSource:buildTree(idProp,parentIdProp,dataSource)}}}},929:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__(6),__webpack_require__(29),__webpack_require__(7),__webpack_require__(19);var react=__webpack_require__(0),react_default=__webpack_require__.n(react),table=__webpack_require__(55),getTreeDepth=(__webpack_require__(16),__webpack_require__(26),__webpack_require__(33),__webpack_require__(30),__webpack_require__(25),__webpack_require__(20),__webpack_require__(23),__webpack_require__(28),__webpack_require__(10),__webpack_require__(48),__webpack_require__(13),__webpack_require__(27),__webpack_require__(21),__webpack_require__(24),__webpack_require__(912)),isLeafNode=__webpack_require__(58),constants=__webpack_require__(362);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _createForOfIteratorHelper(o,allowArrayLike){var it;if("undefined"==typeof Symbol||null==o[Symbol.iterator]){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function F(){};return{s:F,n:function n(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function s(){it=o[Symbol.iterator]()},n:function n(){var step=it.next();return normalCompletion=step.done,step},e:function e(_e2){didErr=!0,err=_e2},f:function f(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(iter))return Array.from(iter)}(arr)||_unsupportedIterableToArray(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _unsupportedIterableToArray(o,minLen){if(o){if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);return"Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n?Array.from(o):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(o,minLen):void 0}}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function buildCrossTable(options){var _options$leftTree,_options$topTree,_options$leftMetaColu,leftTotalNode=options.leftTotalNode,topTotalNode=options.topTotalNode,leftTree=null!==(_options$leftTree=options.leftTree)&&void 0!==_options$leftTree?_options$leftTree:[],topTree=null!==(_options$topTree=options.topTree)&&void 0!==_options$topTree?_options$topTree:[],leftMetaColumns=null!==(_options$leftMetaColu=options.leftMetaColumns)&&void 0!==_options$leftMetaColu?_options$leftMetaColu:[],leftHeaderWidth=Math.max(leftMetaColumns.length,Object(getTreeDepth.a)(leftTree)+1);return{columns:function getColumns(){return[].concat(_toConsumableArray(function getLeftPartColumns(){for(var leftPartColumns=[],index=0;index<leftHeaderWidth;index++){var _leftMetaColumns$inde,metaCol=null!==(_leftMetaColumns$inde=leftMetaColumns[index])&&void 0!==_leftMetaColumns$inde?_leftMetaColumns$inde:{},staticMetaColConfig=(metaCol.getCellProps,metaCol.render,_objectWithoutProperties(metaCol,["getCellProps","render"]));leftPartColumns.push(Object.assign({columnType:"left",lock:!0},staticMetaColConfig,{getCellProps:leftHeaderGetCellPropsFactory(metaCol,index),getSpanRect:leftHeaderGetSpanRectFactory(metaCol,index),getValue:leftHeaderGetValueFactory(metaCol,index),render:leftHeaderRenderFactory(metaCol,index)}))}return leftPartColumns;function leftHeaderGetCellPropsFactory(metaCol,colIndex){return function(_value,row,rowIndex){var _metaCol$getCellProps,node=row.nodes[colIndex];return null===(_metaCol$getCellProps=metaCol.getCellProps)||void 0===_metaCol$getCellProps?void 0:_metaCol$getCellProps.call(metaCol,node,colIndex)}}function leftHeaderGetSpanRectFactory(metaCol,colIndex){return function(_value,row){return row.rects[colIndex]}}function leftHeaderGetValueFactory(metaCol,colIndex){return function(row,rowIndex){return row.nodes[colIndex].value}}function leftHeaderRenderFactory(metaCol,colIndex){return function(v,row,rowIndex){var _node$title,node=row.nodes[colIndex];return metaCol.render?metaCol.render(node,colIndex):null!==(_node$title=node.title)&&void 0!==_node$title?_node$title:node.value}}}()),_toConsumableArray(function getDataPartColumns(){return topTree.length>0?dfs(topTree,{valuePath:[],depth:0}):topTotalNode?dfs([topTotalNode],{valuePath:[],depth:0}):[];function dfs(nodes,ctx){var _step,result=[],_iterator=_createForOfIteratorHelper(nodes);try{for(_iterator.s();!(_step=_iterator.n()).done;){var node=_step.value;if(ctx.valuePath.push(node.value),Object(isLeafNode.a)(node))result.push(getDataColumn(node,ctx.depth));else{node.key;var value=node.value,children=node.children,others=_objectWithoutProperties(node,["key","value","children"]);result.push(Object.assign({columnType:"data-parent"},others,{name:value,children:dfs(children,{valuePath:ctx.valuePath,depth:ctx.depth+1})}))}ctx.valuePath.pop()}}catch(err){_iterator.e(err)}finally{_iterator.f()}return result}}()));function getDataColumn(topNode,topDepth){topNode.key;var value=topNode.value,others=(topNode.children,_objectWithoutProperties(topNode,["key","value","children"]));return Object.assign({columnType:"data"},others,{getValue:function columnGetValue(row){var leftDepth=row.nodes.length-1,leftNode=row.nodes[leftDepth];return options.getValue(leftNode,topNode,leftDepth,topDepth)},name:value,children:null,render:function render(value,row){if(options.render){var leftDepth=row.nodes.length-1,leftNode=row.nodes[leftDepth];return options.render(value,leftNode,topNode,leftDepth,topDepth)}return value},getCellProps:function getCellProps(value,row){if(options.getCellProps){var leftDepth=row.nodes.length-1,leftNode=row.nodes[leftDepth];return options.getCellProps(value,leftNode,topNode,leftDepth,topDepth)}}})}}(),dataSource:function getDataSource(){var flatRows=[],ctx={depth:0,nodes:[],rects:[],rowIndex:0};leftTree.length>0?dfs(leftTree,ctx):leftTotalNode&&dfs([leftTotalNode],ctx);return flatRows;function dfs(nodes,ctx){var _step2,count=0,_iterator2=_createForOfIteratorHelper(nodes);try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var _row,node=_step2.value;if(!node.hidden){var rect={top:ctx.rowIndex+count,bottom:-1,left:ctx.depth,right:-1},row=(_defineProperty(_row={},constants.a,node.key),_defineProperty(_row,"rects",[].concat(_toConsumableArray(ctx.rects),[rect])),_defineProperty(_row,"nodes",[].concat(_toConsumableArray(ctx.nodes),[node])),_row);if(Object(isLeafNode.a)(node))rect.right=leftHeaderWidth,rect.bottom=rect.top+1,flatRows.push(row),count+=1;else{ctx.rects.push(rect),ctx.nodes.push(node);var ret=dfs(node.children,{nodes:ctx.nodes,rects:ctx.rects,depth:ctx.depth+1,rowIndex:ctx.rowIndex+count});ctx.rects.pop(),ctx.nodes.pop(),count+=ret.count,rect.right=rect.left+1,rect.bottom=rect.top+ret.count}}}}catch(err){_iterator2.e(err)}finally{_iterator2.f()}return{count:count}}}()}}try{buildCrossTable.displayName="buildCrossTable",buildCrossTable.__docgenInfo={description:"",displayName:"buildCrossTable",props:{leftTree:{defaultValue:null,description:"",name:"leftTree",required:!0,type:{name:"LeftCrossTreeNode[]"}},topTree:{defaultValue:null,description:"",name:"topTree",required:!0,type:{name:"TopCrossTreeNode[]"}},leftTotalNode:{defaultValue:null,description:"",name:"leftTotalNode",required:!1,type:{name:"LeftCrossTreeNode"}},topTotalNode:{defaultValue:null,description:"",name:"topTotalNode",required:!1,type:{name:"TopCrossTreeNode"}},leftMetaColumns:{defaultValue:null,description:"",name:"leftMetaColumns",required:!0,type:{name:"CrossTableLeftMetaColumn[]"}},getValue:{defaultValue:null,description:"",name:"getValue",required:!0,type:{name:"(leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number) => any"}},render:{defaultValue:null,description:"",name:"render",required:!1,type:{name:"(value: any, leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number) => ReactNode"}},getCellProps:{defaultValue:null,description:"",name:"getCellProps",required:!1,type:{name:"(value: any, leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number) => CellProps"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/pivot/cross-table/buildCrossTable.tsx#buildCrossTable"]={docgenInfo:buildCrossTable.__docgenInfo,name:"buildCrossTable",path:"src/pivot/cross-table/buildCrossTable.tsx#buildCrossTable"})}catch(__react_docgen_typescript_loader_error){}function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function cross_table_objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function cross_table_objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}__webpack_exports__.a=function CrossTable(_ref){var leftTree=_ref.leftTree,leftTotalNode=_ref.leftTotalNode,topTree=_ref.topTree,topTotalNode=_ref.topTotalNode,getValue=_ref.getValue,getCellProps=_ref.getCellProps,leftMetaColumns=_ref.leftMetaColumns,render=_ref.render,baseTableRef=_ref.baseTableRef,others=cross_table_objectWithoutProperties(_ref,["leftTree","leftTotalNode","topTree","topTotalNode","getValue","getCellProps","leftMetaColumns","render","baseTableRef"]),_buildCrossTable=buildCrossTable({leftTree:leftTree,topTree:topTree,leftTotalNode:leftTotalNode,topTotalNode:topTotalNode,getValue:getValue,getCellProps:getCellProps,render:render,leftMetaColumns:leftMetaColumns}),dataSource=_buildCrossTable.dataSource,columns=_buildCrossTable.columns;return react_default.a.createElement(table.a,_extends({ref:baseTableRef},others,{primaryKey:constants.a,dataSource:dataSource,columns:columns}))};try{crosstable.displayName="crosstable",crosstable.__docgenInfo={description:"",displayName:"crosstable",props:{baseTableRef:{defaultValue:null,description:"",name:"baseTableRef",required:!1,type:{name:"Ref<BaseTable>"}},leftTree:{defaultValue:null,description:"",name:"leftTree",required:!0,type:{name:"LeftCrossTreeNode[]"}},topTree:{defaultValue:null,description:"",name:"topTree",required:!0,type:{name:"TopCrossTreeNode[]"}},leftTotalNode:{defaultValue:null,description:"",name:"leftTotalNode",required:!1,type:{name:"LeftCrossTreeNode"}},topTotalNode:{defaultValue:null,description:"",name:"topTotalNode",required:!1,type:{name:"TopCrossTreeNode"}},leftMetaColumns:{defaultValue:null,description:"",name:"leftMetaColumns",required:!1,type:{name:"CrossTableLeftMetaColumn[]"}},getValue:{defaultValue:null,description:"",name:"getValue",required:!0,type:{name:"(leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number) => any"}},render:{defaultValue:null,description:"",name:"render",required:!1,type:{name:"(value: any, leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number) => ReactNode"}},getCellProps:{defaultValue:null,description:"",name:"getCellProps",required:!1,type:{name:"(value: any, leftNode: LeftCrossTreeNode, topNode: TopCrossTreeNode, leftDepth: number, topDepth: number) => CellProps"}},useVirtual:{defaultValue:null,description:"是否开启虚拟滚动",name:"useVirtual",required:!1,type:{name:'boolean | "auto" | { horizontal?: VirtualEnum; vertical?: VirtualEnum; header?: VirtualEnum; }'}},isStickyHead:{defaultValue:null,description:"表格头部是否置顶，默认为 true",name:"isStickyHead",required:!1,type:{name:"boolean"}},stickyTop:{defaultValue:null,description:"表格置顶后，距离顶部的距离",name:"stickyTop",required:!1,type:{name:"number"}},stickyBottom:{defaultValue:null,description:"表格置顶后，距离底部的距离",name:"stickyBottom",required:!1,type:{name:"number"}},className:{defaultValue:null,description:"自定义类名",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"自定义内联样式",name:"style",required:!1,type:{name:"CSSProperties & Partial<{ '--color': string; '--bgcolor': string; '--hover-color': string; '--row-height': string; '--header-color': string; '--header-bgcolor': string; '--header-row-height': string; ... 6 more ...; '--header-cell-border-vertical': string; }>"}},hasHeader:{defaultValue:null,description:"表格是否具有头部",name:"hasHeader",required:!1,type:{name:"boolean"}},useOuterBorder:{defaultValue:null,description:"使用来自外层 div 的边框代替单元格的外边框",name:"useOuterBorder",required:!1,type:{name:"boolean"}},isLoading:{defaultValue:null,description:"表格是否在加载中",name:"isLoading",required:!1,type:{name:"boolean"}},emptyContent:{defaultValue:null,description:"数据为空的时候的表格内容展现",name:"emptyContent",required:!1,type:{name:"ReactNode"}},defaultColumnWidth:{defaultValue:null,description:"列的默认宽度",name:"defaultColumnWidth",required:!1,type:{name:"number"}},flowRoot:{defaultValue:null,description:"表格所处于的块格式化上下文(BFC)\nhttps://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context",name:"flowRoot",required:!1,type:{name:'"auto" | "self" | (() => HTMLElement | (Window & typeof globalThis)) | HTMLElement | (Window & typeof globalThis)'}},getRowProps:{defaultValue:null,description:"",name:"getRowProps",required:!1,type:{name:"(record: any, rowIndex: number) => HTMLAttributes<HTMLTableRowElement>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/pivot/cross-table/cross-table.tsx#crosstable"]={docgenInfo:crosstable.__docgenInfo,name:"crosstable",path:"src/pivot/cross-table/cross-table.tsx#crosstable"})}catch(__react_docgen_typescript_loader_error){}},939:function(module,exports,__webpack_require__){__webpack_require__(940),__webpack_require__(1087),__webpack_require__(1088),__webpack_require__(1247),__webpack_require__(2036),module.exports=__webpack_require__(2068)}},[[939,1,2]]]);
